{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/timeline/fonts/fontawesome/fontawesome-webfont.eot","path":"timeline/fonts/fontawesome/fontawesome-webfont.eot","modified":0,"renderable":0},{"_id":"source/timeline/fonts/fontawesome/fontawesome-webfont.woff","path":"timeline/fonts/fontawesome/fontawesome-webfont.woff","modified":0,"renderable":0},{"_id":"source/timeline/fonts/fontawesome/fontawesome-webfont.ttf","path":"timeline/fonts/fontawesome/fontawesome-webfont.ttf","modified":0,"renderable":0},{"_id":"source/timeline/fonts/fontawesome/fontawesome-webfont.woff2","path":"timeline/fonts/fontawesome/fontawesome-webfont.woff2","modified":0,"renderable":0},{"_id":"source/timeline/fonts/fontawesome/fontawesome-webfont.svg","path":"timeline/fonts/fontawesome/fontawesome-webfont.svg","modified":0,"renderable":0},{"_id":"themes/ayer/source/404.html","path":"404.html","modified":0,"renderable":1},{"_id":"themes/ayer/source/favicon.ico","path":"favicon.ico","modified":0,"renderable":1},{"_id":"themes/ayer/source/css/clipboard.styl","path":"css/clipboard.styl","modified":0,"renderable":1},{"_id":"themes/ayer/source/dist/APlayer.min.css","path":"dist/APlayer.min.css","modified":0,"renderable":1},{"_id":"themes/ayer/source/css/custom.styl","path":"css/custom.styl","modified":0,"renderable":1},{"_id":"themes/ayer/source/dist/APlayer.min.css.map","path":"dist/APlayer.min.css.map","modified":0,"renderable":1},{"_id":"themes/ayer/source/dist/APlayer.min.js.map","path":"dist/APlayer.min.js.map","modified":0,"renderable":1},{"_id":"themes/ayer/source/dist/APlayer.min.js","path":"dist/APlayer.min.js","modified":0,"renderable":1},{"_id":"themes/ayer/source/dist/main.css","path":"dist/main.css","modified":0,"renderable":1},{"_id":"themes/ayer/source/dist/main.js","path":"dist/main.js","modified":0,"renderable":1},{"_id":"themes/ayer/source/dist/music.js","path":"dist/music.js","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/404.jpg","path":"images/404.jpg","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/ayer-side.svg","path":"images/ayer-side.svg","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/alipay.jpg","path":"images/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/ayer.png","path":"images/ayer.png","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/cover2.jpg","path":"images/cover2.jpg","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/ayer.svg","path":"images/ayer.svg","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/beian.png","path":"images/beian.png","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/cover1.jpg","path":"images/cover1.jpg","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/cover3.jpg","path":"images/cover3.jpg","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/cover4.jpg","path":"images/cover4.jpg","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/cover7.jpg","path":"images/cover7.jpg","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/cover6.jpg","path":"images/cover6.jpg","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/cover5.jpg","path":"images/cover5.jpg","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/forkme.png","path":"images/forkme.png","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/mouse.cur","path":"images/mouse.cur","modified":0,"renderable":1},{"_id":"themes/ayer/source/js/busuanzi-2.3.pure.min.js","path":"js/busuanzi-2.3.pure.min.js","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/sponsor.jpg","path":"images/sponsor.jpg","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/wechat.jpg","path":"images/wechat.jpg","modified":0,"renderable":1},{"_id":"themes/ayer/source/js/clickBoom1.js","path":"js/clickBoom1.js","modified":0,"renderable":1},{"_id":"themes/ayer/source/js/clickBoom2.js","path":"js/clickBoom2.js","modified":0,"renderable":1},{"_id":"themes/ayer/source/js/jquery-3.6.0.min.js","path":"js/jquery-3.6.0.min.js","modified":0,"renderable":1},{"_id":"themes/ayer/source/js/lazyload.min.js","path":"js/lazyload.min.js","modified":0,"renderable":1},{"_id":"themes/ayer/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/ayer/source/js/tocbot.min.js","path":"js/tocbot.min.js","modified":0,"renderable":1},{"_id":"themes/ayer/source/js/clickLove.js","path":"js/clickLove.js","modified":0,"renderable":1},{"_id":"themes/ayer/source/js/dz.js","path":"js/dz.js","modified":0,"renderable":1},{"_id":"themes/ayer/source/mp3/HEATS.mp3","path":"mp3/HEATS.mp3","modified":0,"renderable":1},{"_id":"themes/ayer/source/mp3/花岡拓也、鶴山尚史 - 王の愛は民のために.mp3","path":"mp3/花岡拓也、鶴山尚史 - 王の愛は民のために.mp3","modified":0,"renderable":1},{"_id":"themes/ayer/source/mp3/UNTRUE CRYSTAL.mp3","path":"mp3/UNTRUE CRYSTAL.mp3","modified":0,"renderable":1},{"_id":"themes/ayer/source/mp3/天の金剛.mp3","path":"mp3/天の金剛.mp3","modified":0,"renderable":1},{"_id":"themes/ayer/source/dist/jquery.pjax.min.js","path":"dist/jquery.pjax.min.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"7173decbf0aac5aeb44529aa7c64aaf15ce24191","modified":1637810893068},{"_id":"source/_posts/Laravel-Cache.md","hash":"ccfbf2af973a1c5855e3cab99e6a935360a9d3e3","modified":1637810893071},{"_id":"source/_posts/Laravel-Queue.md","hash":"a7531fbd89183a0e7c0b724aafd11ab9a19d8a8b","modified":1637810893072},{"_id":"source/_posts/Centos-LNMP.md","hash":"a92d5ed2c38363403eac8a50346d584104b80bab","modified":1637810893069},{"_id":"source/_posts/Centos7-https.md","hash":"9f92e66906f1109c1e830a6f073e610e827b3d1d","modified":1637810893069},{"_id":"source/_posts/Laravel-Event.md","hash":"33856d52d71f8e49c5332f99a89f79009ec2f63d","modified":1637810893071},{"_id":"source/_posts/Laravel-ajax-temp-check-middleware.md","hash":"d46ce529a8f5f51f2a6bbdb1b59f2b9fb2fb80a0","modified":1637810893073},{"_id":"source/_posts/Laravel-UEditor-form.md","hash":"830e006afcf2d6a94df04f78e4faf366acec06b9","modified":1637810893072},{"_id":"source/_posts/Laravel-imgupload.md","hash":"13e396963f5b1d240ddd4460eff8f821b3d58aa3","modified":1637810893074},{"_id":"source/_posts/Docker-Windows.md","hash":"84f92105d0711adcd3e7df750b84411f83a8be97","modified":1637810893070},{"_id":"source/_posts/Laravel-cloudfile.md","hash":"4917cf33b9fb3e9925c3e2aa60ed6c22eae31d77","modified":1637810893073},{"_id":"source/_posts/Laravel-mobile.md","hash":"273b01f6132cf76b532590c3f1c916449b17f94f","modified":1637810893074},{"_id":"source/_posts/Laravel-prestrain.md","hash":"9f15ca34412e1c8be7579d7fc92c4ccf22c99448","modified":1637810893075},{"_id":"source/_posts/Laravel-share-debugbar.md","hash":"ca04809451a392f5d937e4bbc7d0d2ff6f6f49e0","modified":1637810893075},{"_id":"source/_posts/Linux-mysql-remote.md","hash":"9ecab82edb599863b74cc2e54a9e5f41944f913f","modified":1637810893076},{"_id":"source/_posts/Linux-vsftp.md","hash":"9c1ef8cbb0807b3e0e6e7fc5e1f03ce13f9a8b60","modified":1637810893076},{"_id":"source/_posts/Mysql-sum.md","hash":"4df5fbd54b84d49c5dc9b32a3b9dff5d1e4ffeae","modified":1637810893077},{"_id":"source/_posts/PHP-non-polar-classification.md","hash":"1b417e5910aa124e05e936f4a08605a1e0fd69d3","modified":1637810893077},{"_id":"source/_posts/Thinkphp-jquery-imgupload.md","hash":"4826d09c82c719aa2cd07621f8441720daa707fd","modified":1637810893078},{"_id":"source/_posts/php-basicsort.md","hash":"95f3134cc222f8c97cf03841bfcc34cf1f4c9283","modified":1637810893079},{"_id":"source/_posts/php-bitwise.md","hash":"b7c901b936117c477ef01e6c482710078b6c6924","modified":1637810893079},{"_id":"source/_posts/php-question1.md","hash":"f986a6c3a84ff0cff93ecaa86c5c919c26633b3e","modified":1637810893080},{"_id":"source/_posts/phpalgorithm-erfen.md","hash":"2f91dc9f69036788377bfdb5c7303aa48e81da91","modified":1637810893081},{"_id":"source/_posts/php-queue.md","hash":"74b17eb8d31cdaade6e3c5f0a2d6f698b3f94f3c","modified":1637810893080},{"_id":"source/categories/index.md","hash":"08f8257ff845dfd5bd2830a3f7a6d0f636c4ab22","modified":1637810893083},{"_id":"source/_posts/questions.md","hash":"ef8b7045b29942c0f65e22c018975e56e7b7be91","modified":1637810893081},{"_id":"source/friends/index.md","hash":"21420f839eca36bf2816d15fd372ef9b306d94d2","modified":1637810893083},{"_id":"source/timeline/index.html","hash":"98725ff9f508e1db93725b95f9686f51e5767f43","modified":1637810893094},{"_id":"source/tags/index.md","hash":"35e32c49e7d272cc4798b4a3eca6ff9db1f1ab5c","modified":1637810893084},{"_id":"source/about/index.md","hash":"6d0eea1bd9ff909b79b52677bc0eccea6084d2d9","modified":1637810893082},{"_id":"source/timeline/index.md","hash":"a8b50d875f726053484541ed264d9d667ea29032","modified":1637822929545},{"_id":"themes/ayer/.gitattributes","hash":"2e08e93c6f6790b02ab7f81a6191ed097b20cbf9","modified":499162500000},{"_id":"themes/ayer/.travis.yml","hash":"870fcd9eb33bc4269d53bc84ddc6f8a69db7c611","modified":499162500000},{"_id":"themes/ayer/.stylintrc","hash":"eec4e824067be1a223745ca426aa367c8d482673","modified":499162500000},{"_id":"themes/ayer/LICENSE","hash":"d7308ddbd63bf372429401e188a906c52622f62e","modified":499162500000},{"_id":"themes/ayer/index.js","hash":"a144d64baec7130267f64272fb256a9be3aa7cd5","modified":499162500000},{"_id":"themes/ayer/package.json","hash":"4adbef63adb1e9d42815ae48bd9f73d3a2c80a25","modified":1637745124863},{"_id":"themes/ayer/README.md","hash":"3ed8085be8610af567e3b1fcaaccb9160fe16685","modified":499162500000},{"_id":"themes/ayer/move_config.js","hash":"9fde64d58714990bf93ba877bbc3b48f6b8fb7d9","modified":499162500000},{"_id":"themes/ayer/rollup.config.js","hash":"3d98bd1db1dcf2e0878b6fcbbbf8ff9c3da6d357","modified":499162500000},{"_id":"themes/ayer/languages/de.yml","hash":"2b7fa47fbe06f6928a43ea3b345ab3aeaa2cee81","modified":499162500000},{"_id":"themes/ayer/languages/default.yml","hash":"1853255c243858cf9d26a589d7d26571e11ed5d1","modified":499162500000},{"_id":"themes/ayer/languages/en.yml","hash":"1853255c243858cf9d26a589d7d26571e11ed5d1","modified":499162500000},{"_id":"themes/ayer/languages/es.yml","hash":"fc27661276313c1c539252517d664359cb286f8a","modified":499162500000},{"_id":"themes/ayer/languages/fr.yml","hash":"3dac4d53b9b2a1b10c0273ce7472b2e76576dc5a","modified":499162500000},{"_id":"themes/ayer/languages/ja.yml","hash":"aea06ea7bcb439d2b84501924cdd092293ee891a","modified":499162500000},{"_id":"themes/ayer/languages/ko.yml","hash":"00db39dd43875774088511b4d467dcb71f1ce8ac","modified":499162500000},{"_id":"themes/ayer/languages/no.yml","hash":"fa4d2da9bb00ad0febc631afaf17f76aaa17e950","modified":499162500000},{"_id":"themes/ayer/languages/nl.yml","hash":"d619955fd9659a209c58f696ee2160dfe8c6ac41","modified":499162500000},{"_id":"themes/ayer/languages/pt.yml","hash":"fa0b3a4a01a0493f3ef402039e394a291a1251fd","modified":499162500000},{"_id":"themes/ayer/languages/ru.yml","hash":"45edcadb57176d0b11a839055df1964da8ca08f9","modified":499162500000},{"_id":"themes/ayer/languages/vi.yml","hash":"20f25fe0e9017d530a771687fe9d21353e034fff","modified":499162500000},{"_id":"themes/ayer/languages/zh-CN.yml","hash":"edf1f8c164f3d166f94e213148e984fdfc3a7c85","modified":499162500000},{"_id":"themes/ayer/languages/zh-TW.yml","hash":"750fba5314d340ddb00812fc17a608a084f04462","modified":499162500000},{"_id":"themes/ayer/layout/friends.ejs","hash":"2a4c0bfdf189ebae720f1325786a87c7cac51d37","modified":499162500000},{"_id":"themes/ayer/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":499162500000},{"_id":"themes/ayer/layout/categories.ejs","hash":"b2deae0c31dd7fbf42a124db1b4c8c28d435c8e5","modified":499162500000},{"_id":"themes/ayer/layout/index.ejs","hash":"c40a98c0a6f55c27959e44c9e8e4f2619fc2ad3f","modified":499162500000},{"_id":"themes/ayer/layout/layout.ejs","hash":"8401b6cedf3ec06839f8d1036d977aecc3156bad","modified":1638518584503},{"_id":"themes/ayer/layout/music","hash":"d124acc19664f5ecd838d99160c6e29223a6c7a0","modified":1637899124268},{"_id":"themes/ayer/layout/page.ejs","hash":"75879224e47b3329d7accfc2403580a2412dce25","modified":499162500000},{"_id":"themes/ayer/layout/plain-page.ejs","hash":"d351ff4aadd020a1960cc00f17fdd91a17e0cc54","modified":499162500000},{"_id":"themes/ayer/layout/post.ejs","hash":"75879224e47b3329d7accfc2403580a2412dce25","modified":1638351031731},{"_id":"themes/ayer/layout/tags.ejs","hash":"e7c9f93c6f7041a7d2aa95e85cc131b22aa426b7","modified":499162500000},{"_id":"themes/ayer/scripts/default_config.js","hash":"617c2614d8bd8ffda2f2f84ab54fb18866e39b33","modified":499162500000},{"_id":"themes/ayer/logo.png","hash":"16fbb131601570b21890a922cd6e596691ccff42","modified":499162500000},{"_id":"themes/ayer/source/favicon.ico","hash":"473ba682e828a7e34f24fae320e77b6bed4260c7","modified":499162500000},{"_id":"themes/ayer/source-src/main.js","hash":"fcb7c6c5ffcfd72ba9bd55b475af8a0e74484634","modified":499162500000},{"_id":"source/musiclist/index.md","hash":"3f102d64c326e99494d39370e0273cf2c1b402cf","modified":1637905455865},{"_id":"themes/ayer/layout/_partial/ads.ejs","hash":"2be035aeef82265c5b0cb6aec6f4135ad1e0aa75","modified":499162500000},{"_id":"themes/ayer/layout/_partial/after-footer.ejs","hash":"e6336c5d5061dd440100e1add829fa1bed19cd70","modified":499162500000},{"_id":"themes/ayer/layout/_partial/archive-post.ejs","hash":"6b3e77cdbf8271c2a22b839608cccaa651f84e93","modified":499162500000},{"_id":"themes/ayer/layout/_partial/article.ejs","hash":"ff1f8fd0dce22409038e72097a9582d1bbf4e6e0","modified":1638350823400},{"_id":"themes/ayer/layout/_partial/archive.ejs","hash":"1da014dd52294e132bc91eb2f45f67264a41e059","modified":1638347956256},{"_id":"themes/ayer/layout/_partial/ayer.ejs","hash":"061e5d25789c9a0c3df3172c0c53966053af89d1","modified":499162500000},{"_id":"themes/ayer/layout/_partial/baidu-analytics.ejs","hash":"155327c23607f69989b58845f24d842a54e504b8","modified":499162500000},{"_id":"themes/ayer/layout/_partial/float-btns.ejs","hash":"b2fc5726168f012bc61845f33a46404ff4065947","modified":499162500000},{"_id":"themes/ayer/layout/_partial/broadcast.ejs","hash":"21fadeb390cff713fd432d0565bb901f8caff0c0","modified":499162500000},{"_id":"themes/ayer/layout/_partial/head.ejs","hash":"52fc68c6d75ac19373a839598f970d5d7a08cd80","modified":499162500000},{"_id":"themes/ayer/layout/_partial/google-analytics.ejs","hash":"3a23d6ae48305c9f1b5c400da780288c2425254b","modified":499162500000},{"_id":"themes/ayer/layout/_partial/footer.ejs","hash":"16c6877db510a28afff0334be8d2ffe2f76d7a3e","modified":499162500000},{"_id":"themes/ayer/layout/_partial/katex.ejs","hash":"02cb9da065cd315a06d62d13872dc687c62e9a1f","modified":499162500000},{"_id":"themes/ayer/layout/_partial/lock.ejs","hash":"72ec0a339f98399c5141f4b3aca4cc8e8310f03a","modified":499162500000},{"_id":"themes/ayer/layout/_partial/modal.ejs","hash":"b9caece8b5fb47e250c67f6f80f101f08d04eba9","modified":499162500000},{"_id":"themes/ayer/layout/_partial/music.ejs","hash":"dca66dd4830ea8ce615f3c5042a751770bebc10c","modified":1638262873156},{"_id":"themes/ayer/layout/_partial/musicS.ejs","hash":"6f9cbbeb0d173ff488006f1e42d3f543efd8d73a","modified":1638518616447},{"_id":"themes/ayer/layout/_partial/sidebar.ejs","hash":"b7efb7f2b300de23d12ef310d710d809d979f4fd","modified":499162500000},{"_id":"themes/ayer/layout/_partial/mathjax.ejs","hash":"bcc264b6d6b58b3b692139c4d8b1381da4820da8","modified":499162500000},{"_id":"themes/ayer/layout/_partial/viewer.ejs","hash":"219f0a0ec2eb35e8ba27a849639a5f634273fb6f","modified":499162500000},{"_id":"themes/ayer/scripts/events/index.js","hash":"2c84d99e881f5cd1ee8a406b595a4365f3aea41e","modified":499162500000},{"_id":"themes/ayer/scripts/filters/meta_generator.js","hash":"46f6461a2bdc509837c36ede4d32c8b12e3d49b9","modified":499162500000},{"_id":"themes/ayer/scripts/filters/index.js","hash":"e0c3b821ecd1cb614569282fb4f6e6f555545f8b","modified":499162500000},{"_id":"themes/ayer/scripts/lib/core.js","hash":"00509e97554914e5b0a20e0843dc90bcf53461aa","modified":499162500000},{"_id":"themes/ayer/scripts/utils/object.js","hash":"649457796374c79e49a19bd541e4ad8e78fe8995","modified":499162500000},{"_id":"themes/ayer/scripts/utils/join-path.js","hash":"629e7deb3955f750c1cfa6fc773f412e020fcef4","modified":499162500000},{"_id":"themes/ayer/scripts/helpers/ayer-plus-vendors.js","hash":"611f3bcd8220312f92c11fa6a5dad02f011068d2","modified":499162500000},{"_id":"themes/ayer/scripts/helpers/wordcount.js","hash":"2014b5c5053ad737887b61014a045cc1b08799cd","modified":499162500000},{"_id":"themes/ayer/source/css/clipboard.styl","hash":"145f335d6369744a75c2c39a50f63a88f720f85b","modified":499162500000},{"_id":"themes/ayer/source/dist/APlayer.min.css","hash":"fe84d9ceba826389a478d21056eecad3c3a3719d","modified":1638262935766},{"_id":"themes/ayer/source/css/custom.styl","hash":"32990e811ea6fba84673b6d7175c88a3b890b109","modified":499162500000},{"_id":"themes/ayer/source/dist/APlayer.min.css.map","hash":"c59d2bc9472922cf6ef9a99e052dbee6cc7e6b36","modified":1605085734000},{"_id":"themes/ayer/source/dist/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1605085734000},{"_id":"themes/ayer/source/dist/instantclick.min.js","hash":"008deac1789062f11f6d1efe64c2dbd5f7477c61","modified":1638344777599},{"_id":"themes/ayer/source/dist/main.css","hash":"cedc06200d45eb7b000db1624b2585d7522137bc","modified":499162500000},{"_id":"themes/ayer/source/dist/main.js","hash":"436093b4310b4656fb1e60ae946d04b85d6b1fa5","modified":499162500000},{"_id":"themes/ayer/source/404.html","hash":"727bb80b870df99b9d816f36613fc6eae4c61c98","modified":499162500000},{"_id":"themes/ayer/source/dist/music.js","hash":"1b9531f2edb2c4aeab4f0dcb920ebe329bce81a6","modified":1637919838634},{"_id":"themes/ayer/source/images/ayer-side.svg","hash":"ad004ce7a873de0f91774f3d5923e010396a07bd","modified":499162500000},{"_id":"source/timeline/js/skrollr.min.js","hash":"cd97f2bbb7abe0563f741b99a4b3013b42445d8a","modified":1637810893096},{"_id":"themes/ayer/source/images/404.jpg","hash":"4f36a8d378712427cded03f5166949f5e0ba754c","modified":499162500000},{"_id":"themes/ayer/source/images/ayer.png","hash":"0466c05244273f645d239cd27513bfa3c50308aa","modified":499162500000},{"_id":"themes/ayer/source/images/cover7.jpg","hash":"573bff6899d2d9c5bcba0dc9c60cd1ec9eb8b029","modified":499162500000},{"_id":"themes/ayer/source/images/forkme.png","hash":"99c3e21a169421e4f249befb428396c729863a75","modified":499162500000},{"_id":"themes/ayer/source/images/mouse.cur","hash":"c1ffe93a6ba0d25ef06bb3d097560762e4807593","modified":499162500000},{"_id":"themes/ayer/source/js/busuanzi-2.3.pure.min.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":499162500000},{"_id":"themes/ayer/source/images/ayer.svg","hash":"379c3307f97c364718a1dbc1e52fb14de12eb11a","modified":499162500000},{"_id":"themes/ayer/source/js/clickBoom1.js","hash":"c97ea1f120dba2c6804d0420186ef5d6f2419b7c","modified":499162500000},{"_id":"themes/ayer/source/images/sponsor.jpg","hash":"5b5e4498177b369a7eca7ab2b1d0710b8690e21d","modified":499162500000},{"_id":"themes/ayer/source/js/lazyload.min.js","hash":"d9bc50752cd7e331dbd0a833386838397c9a079f","modified":499162500000},{"_id":"themes/ayer/source/js/search.js","hash":"6d5c093d12e922ad204dab1723b786c35847bf1b","modified":499162500000},{"_id":"themes/ayer/source/js/tocbot.min.js","hash":"bae97e8a24a05a99335f8e725641c8ca9c50502a","modified":499162500000},{"_id":"themes/ayer/source/js/clickLove.js","hash":"a35dfb7ff19796c005ee30b55fd95e39d6d59a89","modified":499162500000},{"_id":"themes/ayer/source/js/clickBoom2.js","hash":"2bc7267652ec49cea5dc3a8bd470c7d5ec57c721","modified":499162500000},{"_id":"themes/ayer/source/js/dz.js","hash":"079ae73e2e396c2e00919a50a6fe0d064f99303a","modified":499162500000},{"_id":"themes/ayer/source-src/css/_extend.styl","hash":"996ed7faa5ebf69af1f14f90f774dc7a53774537","modified":499162500000},{"_id":"themes/ayer/source-src/css/_darkmode.styl","hash":"eda0bf55d64f2cdeb75f9489818c34635bc85c00","modified":499162500000},{"_id":"themes/ayer/source/images/beian.png","hash":"29c400bc3b89f6085766dac4e0330ded5cb73d52","modified":499162500000},{"_id":"themes/ayer/source-src/css/_normalize.styl","hash":"b90386215434cc76549c046e7f67392049492a6a","modified":499162500000},{"_id":"themes/ayer/source-src/css/_mixins.styl","hash":"e4804d78ded3714495f8ac9cebdbd2871ed97549","modified":499162500000},{"_id":"themes/ayer/source-src/css/_remixicon.styl","hash":"78f4dd8c613df005d6ecf6a073d96d38bbbe531e","modified":499162500000},{"_id":"themes/ayer/layout/_partial/post/albums.ejs","hash":"f4cfbabca9f59a9e5aa457a6f2a9cf6f56cd22b3","modified":499162500000},{"_id":"themes/ayer/source-src/css/_variables.styl","hash":"2fdb4425b6213fed28921f53179e825aee0500cf","modified":499162500000},{"_id":"themes/ayer/layout/_partial/post/author.ejs","hash":"0e6c2862d75e5b21faf28a5cc3310d3515340287","modified":499162500000},{"_id":"themes/ayer/layout/_partial/post/busuanzi.ejs","hash":"895293405b2b3b19fe97d79f4a25e16bea153ae8","modified":499162500000},{"_id":"themes/ayer/layout/_partial/post/category.ejs","hash":"89cb32e8d98bad81d3ef33377212e9b253699d3d","modified":499162500000},{"_id":"themes/ayer/layout/_partial/post/clipboard.ejs","hash":"c93d82de1635536a633b6254b604590ab4428594","modified":499162500000},{"_id":"themes/ayer/source-src/css/style.styl","hash":"89dfb772754ee919cb157a6e28d61bbabfe46c8d","modified":499162500000},{"_id":"themes/ayer/layout/_partial/post/date.ejs","hash":"947f513f7a85fbcf085624e46dc2ae6de8185eec","modified":499162500000},{"_id":"themes/ayer/layout/_partial/post/gitalk.ejs","hash":"c81d54a9d818fa21ebcab03cfecc3528821ff9a5","modified":499162500000},{"_id":"themes/ayer/layout/_partial/post/gallery.ejs","hash":"6f78a49edc91f230b0a838c77630e9671d8d6089","modified":499162500000},{"_id":"themes/ayer/layout/_partial/post/justifiedGallery.ejs","hash":"a313df6a014a0f2ba6b869dabc56bacb8ff6324d","modified":499162500000},{"_id":"themes/ayer/layout/_partial/post/minivaline.ejs","hash":"c09ba80cfa41aaac17f0f7ff2586e73241adab20","modified":499162500000},{"_id":"themes/ayer/layout/_partial/post/nav.ejs","hash":"a73010cbbc463089a1376889850fb0890143c988","modified":499162500000},{"_id":"themes/ayer/layout/_partial/post/search.ejs","hash":"47c818c236b063d6ce0c41e0824f9f10a3521414","modified":499162500000},{"_id":"themes/ayer/layout/_partial/post/share.ejs","hash":"9a978d55358878c97186ed010e536e1b314adb35","modified":499162500000},{"_id":"themes/ayer/layout/_partial/post/tag.ejs","hash":"694b5101bcc44c9f9c1cc62e5ad2fdfb4b7c7a07","modified":499162500000},{"_id":"themes/ayer/layout/_partial/post/title.ejs","hash":"e55c57b8cb8c8acf0ed998ea31c2fbc1d6256027","modified":499162500000},{"_id":"themes/ayer/layout/_partial/post/tocbot.ejs","hash":"17ac504f2a6d561765046a0ba19dcce504104517","modified":499162500000},{"_id":"themes/ayer/layout/_partial/post/topping.ejs","hash":"de2c50fb5b7a816287c6d048a2a22ae9c29abcdd","modified":499162500000},{"_id":"themes/ayer/layout/_partial/post/twikoo.ejs","hash":"7f064611a2297dda84e6b329252e838666ac7c93","modified":499162500000},{"_id":"themes/ayer/layout/_partial/post/valine.ejs","hash":"b71f2af08c1916b3c5ef3a553a1df16f1787af24","modified":1638518635257},{"_id":"themes/ayer/layout/_partial/post/word.ejs","hash":"5b785368a0a6f3b5538aa1b9e7574daa8dfb0df6","modified":499162500000},{"_id":"themes/ayer/scripts/events/lib/hello.js","hash":"058c73fa3900d143affb9cc7ea0b2105d3925915","modified":499162500000},{"_id":"themes/ayer/scripts/events/lib/merge-configs.js","hash":"734aac9a53cf168ee51482b02b75954a2a3df150","modified":499162500000},{"_id":"themes/ayer/source-src/css/_partial/albums.styl","hash":"5802253789028a4d9dac474168fc7132045e72ff","modified":499162500000},{"_id":"themes/ayer/source-src/css/_partial/apple.styl","hash":"333f9e59dc6625c4dee126a1c1a9c25ce9292655","modified":499162500000},{"_id":"themes/ayer/source-src/css/_partial/archive.styl","hash":"9dbb04cf0ae07b50acd6f343e673df215a3c868e","modified":499162500000},{"_id":"themes/ayer/source-src/css/_partial/ads.styl","hash":"e3e533ac5b9b6c5ef7d3829c890aff42dc29cfc1","modified":499162500000},{"_id":"themes/ayer/source-src/css/_partial/articles.styl","hash":"ddbe833939180afdc832659c5cdad08f77ef4f46","modified":499162500000},{"_id":"themes/ayer/source-src/css/_partial/article.styl","hash":"659a35544b321a101f7cf114f0c9fdf2cc125625","modified":499162500000},{"_id":"themes/ayer/source-src/css/_partial/ayer.styl","hash":"38187e5c88eaf1ea099f2ded56f1f60194c95ec4","modified":499162500000},{"_id":"themes/ayer/source-src/css/_partial/float.styl","hash":"b1abfdfd05e74745484f7e6d043ef2842b3f6b41","modified":499162500000},{"_id":"themes/ayer/source-src/js/share.js","hash":"7c105c427d472d84bee2ef3f0a61efa4ac6d564f","modified":499162500000},{"_id":"themes/ayer/source-src/js/ayer.js","hash":"a3d349fb8af029e710d064c15373163680da2d39","modified":499162500000},{"_id":"themes/ayer/source-src/css/_partial/gallery.styl","hash":"f5eae1b0030cfd97f1646844c9d3f692dbb38946","modified":499162500000},{"_id":"themes/ayer/source-src/css/_partial/footer.styl","hash":"ae22e9d1525f267be368359ed0096f26791b809e","modified":499162500000},{"_id":"themes/ayer/source-src/css/_partial/gitalk.styl","hash":"0678e8b330daea56fa30d14e97de73289a7d6f22","modified":499162500000},{"_id":"themes/ayer/source-src/css/_partial/friends.styl","hash":"10332c63736e4ce31353b7605012caf744a8286a","modified":499162500000},{"_id":"themes/ayer/source-src/css/_partial/categories.styl","hash":"cb3b1667c83182d6309e6d066f53f2771723729e","modified":499162500000},{"_id":"themes/ayer/source-src/css/_partial/lists.styl","hash":"dc45f8b1a5942d4d979fb0859bc47a86f73fe0a9","modified":499162500000},{"_id":"themes/ayer/source-src/css/_partial/mobile.styl","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":499162500000},{"_id":"themes/ayer/source-src/css/_partial/highlight.styl","hash":"1210f704aae34ef653e3a458cccb700b05353ea1","modified":499162500000},{"_id":"themes/ayer/source-src/css/_partial/justifiedGallery.styl","hash":"9828c78fb59c3ea3de7cce2569313d12c4b1a6ff","modified":499162500000},{"_id":"themes/ayer/source-src/css/_partial/pace.styl","hash":"bbda18c692fc66ae99e45347ff52c14e44a08e3b","modified":499162500000},{"_id":"themes/ayer/source-src/css/_partial/layout.styl","hash":"d4613f176636cae6a4af6124863a176c32ea6471","modified":499162500000},{"_id":"themes/ayer/source-src/css/_partial/sidebar.styl","hash":"cdc7bea47a768b18991decde0d38c554399621ee","modified":499162500000},{"_id":"themes/ayer/source-src/css/_partial/navbar.styl","hash":"266df43ec4041226f1801719e873265b75fe6515","modified":499162500000},{"_id":"themes/ayer/source-src/css/_partial/reward.styl","hash":"924114f723a22dbb8970d023bc2e033141b3438d","modified":499162500000},{"_id":"themes/ayer/source-src/css/_partial/search.styl","hash":"3f2c7bd1371f6f25aec7c581dbae7b52f95ec4c6","modified":499162500000},{"_id":"themes/ayer/source-src/css/_partial/share.styl","hash":"4a6e6ac9156553dd5cee1eeee8fdc6f1f8a5d117","modified":499162500000},{"_id":"source/timeline/css/jazz-timeline.css","hash":"4db043a6eefcc3ec772f837c71ea4fa835412531","modified":1637810893086},{"_id":"source/timeline/fonts/fontawesome/fontawesome-webfont.eot","hash":"986eed8dca049714e43eeebcb3932741a4bec76d","modified":1637810893087},{"_id":"source/timeline/fonts/fontawesome/fontawesome-webfont.woff","hash":"4a313eb93b959cc4154c684b915b0a31ddb68d84","modified":1637810893093},{"_id":"source/timeline/fonts/fontawesome/fontawesome-webfont.woff2","hash":"638c652d623280a58144f93e7b552c66d1667a11","modified":1637810893094},{"_id":"themes/ayer/source-src/css/_partial/tag.styl","hash":"6072aa6bd16e0a1e75f0258d7b20587cab56fff8","modified":499162500000},{"_id":"themes/ayer/source-src/css/_partial/tocbot.styl","hash":"130e29937aa750e63e8cf216934dbdd4ea95969f","modified":499162500000},{"_id":"themes/ayer/source/images/cover2.jpg","hash":"f61dd08c95327468c5f6bc5175eff68d00f05b46","modified":499162500000},{"_id":"themes/ayer/source/images/alipay.jpg","hash":"8f5409e29764fca573f1d274003910aa3c919de1","modified":499162500000},{"_id":"themes/ayer/source/js/jquery-3.6.0.min.js","hash":"b82d238d4e31fdf618bae8ac11a6c812c03dd0d4","modified":499162500000},{"_id":"themes/ayer/source/images/wechat.jpg","hash":"93a362574a8498e75dca469b7bceb0b321fda387","modified":499162500000},{"_id":"themes/ayer/source-src/css/_partial/totop.styl","hash":"b6010788be1d99a345abcf0cf9cdf0a564b90d3c","modified":499162500000},{"_id":"source/timeline/fonts/fontawesome/fontawesome-webfont.ttf","hash":"6484f1af6b485d5096b71b344e67f4164c33dd1f","modified":1637810893092},{"_id":"themes/ayer/source/dist/APlayer.min.js.map","hash":"31a19da0f0cb6b00ec212eafa847f31af86788df","modified":1605085734000},{"_id":"themes/ayer/source/images/cover6.jpg","hash":"a5b8a5dddff2607fee5fccf5fdef3b214a8468cc","modified":499162500000},{"_id":"themes/ayer/source/images/cover3.jpg","hash":"7b4e7c9ce19ce5d5c1588b2567e88ecbb04370af","modified":499162500000},{"_id":"themes/ayer/screenshots/hexo-theme-ayer.png","hash":"4111670e622ce09837b6b9cc641782af75805079","modified":499162500000},{"_id":"themes/ayer/source/images/cover1.jpg","hash":"e019fbed6158ae3e4ec3d255b41bddc1afcbfa90","modified":499162500000},{"_id":"themes/ayer/source/images/cover4.jpg","hash":"77040e609d2f1c60e00a8e47cb95b25bf7ff5b9c","modified":499162500000},{"_id":"source/timeline/fonts/fontawesome/fontawesome-webfont.svg","hash":"550ef5c1253c8376f2ead32b654eb58d3c106ca3","modified":1637810893090},{"_id":"themes/ayer/source/images/cover5.jpg","hash":"1a2d6182d94b015a45fe4bf8e8a239dfcc0ef776","modified":499162500000},{"_id":"themes/ayer/source/mp3/花岡拓也、鶴山尚史 - 王の愛は民のために.mp3","hash":"622de294715c55d4457496e4c69f4da49502d2bd","modified":1637905313308},{"_id":"themes/ayer/source/mp3/HEATS.mp3","hash":"9bd915ffe091aadfcb71c716ae8ad87dd4cdef2a","modified":1637913359566},{"_id":"themes/ayer/source/mp3/UNTRUE CRYSTAL.mp3","hash":"0b7bb7ef31bab3e8c0460570dc6366981bbe8a16","modified":1637912611866},{"_id":"themes/ayer/source/mp3/天の金剛.mp3","hash":"d3fa5bfe82f6d4e1978ff3b41af82d9767f7fcc3","modified":1637912740928},{"_id":"public/timeline/js/skrollr.min.js","hash":"909d6f663fccd9191d04675f9fe69f3ec3c22a6a","modified":1638345008196},{"_id":"public/timeline/css/jazz-timeline.css","hash":"b8d75ba38b1f0e492c6ce9b174f9a0a15ac55610","modified":1638345008196},{"_id":"public/baidusitemap.xml","hash":"443cc32803ca8885767c34d6cce6b2dc664da3eb","modified":1638345008196},{"_id":"public/atom.xml","hash":"b79d8a2f327d211967d458d033ca297b0ec58d4c","modified":1638345008196},{"_id":"public/search.xml","hash":"07c183b65a1c13d34f42dcf7b80dc7881332072f","modified":1638345008196},{"_id":"public/sitemap.xml","hash":"c6ca87e5052b249f3950ff9102a6bc86d74df414","modified":1638494183594},{"_id":"public/about/index.html","hash":"eb7a595a4e66300fc54d6b0f677ecbc522287c3a","modified":1638518704761},{"_id":"public/categories/index.html","hash":"c34212d81b04260b0efe8ccc45147bc5c31d59fb","modified":1638518704761},{"_id":"public/friends/index.html","hash":"4f82f89180e50d60cc1479cce565e3e74d6a38df","modified":1638518704761},{"_id":"public/musiclist/index.html","hash":"e4c91a18c98bd86289caca3a5105a90058ccf24c","modified":1638518704761},{"_id":"public/tags/index.html","hash":"3967dd65435be419d1312bab7bf9435c30b4e854","modified":1638518704761},{"_id":"public/categories/Linux/index.html","hash":"ead855bf34955ba09ddf21f1532d9fd0d12ac6bb","modified":1638518704761},{"_id":"public/categories/PHP/page/2/index.html","hash":"9e1a895d4819243ace5474875afa7b1ef0b53eab","modified":1638518704761},{"_id":"public/categories/Mysql/index.html","hash":"e1cb074849ea74b501909885c7984863062b9529","modified":1638518704761},{"_id":"public/archives/index.html","hash":"002311272bd9e0ce070bb029c8bb62f2ae396550","modified":1638518704761},{"_id":"public/archives/page/2/index.html","hash":"5b17181362e0a5cfe51a6ee4b36dd379bc600ab9","modified":1638518704761},{"_id":"public/archives/page/3/index.html","hash":"809eea3bcd601f0f73a0123dd802b827aaf5ab41","modified":1638518704761},{"_id":"public/archives/2018/index.html","hash":"91a106fc5cbdd223e5b08cf69671604673b5d6fb","modified":1638518704761},{"_id":"public/archives/2018/page/2/index.html","hash":"8321259568d5c59a6240733102d62c8db0247d29","modified":1638518704761},{"_id":"public/archives/2018/page/3/index.html","hash":"f8f79f77dad08e15fc5b74198a8a58eec38c1969","modified":1638518704761},{"_id":"public/archives/2018/03/index.html","hash":"df7bc8de248a526c0a5e8baaf30d2869b954c737","modified":1638518704761},{"_id":"public/archives/2018/03/page/2/index.html","hash":"dd57ea2c26b4edc45b442d6637bd7ce000a295b2","modified":1638518704761},{"_id":"public/archives/2018/05/index.html","hash":"ce7c5abde958d1f1518be22050bdbc183f00fd33","modified":1638518704761},{"_id":"public/archives/2018/06/index.html","hash":"2ac175b1696199fd528e65324b42b323b15aa7df","modified":1638518704761},{"_id":"public/archives/2018/08/index.html","hash":"40d3e480ecd5b3b0fc050a4d7d1761bebf48ee3e","modified":1638518704761},{"_id":"public/archives/2018/11/index.html","hash":"9c83b8d280e66a8522feaa950560e5427fdab4f2","modified":1638518704761},{"_id":"public/archives/2019/index.html","hash":"db4293156166445a44e22b8de9aa00694f17ac79","modified":1638518704761},{"_id":"public/archives/2019/01/index.html","hash":"a14f91fd095b011f6820883345e289706d550695","modified":1638518704761},{"_id":"public/archives/2021/index.html","hash":"00ca748543841bc7ec19ccc1398ba4648c2b3827","modified":1638518704761},{"_id":"public/archives/2021/11/index.html","hash":"1da93aabc1faf720f62dde5d2b0bf07963d55714","modified":1638518704761},{"_id":"public/tags/https/index.html","hash":"af9f53b67704871386d1f107c747bc0b19baa1f0","modified":1638518704761},{"_id":"public/tags/Docker/index.html","hash":"2b00f421118b81465db1dbcd274ffdaad86111b8","modified":1638518704761},{"_id":"public/tags/cache/index.html","hash":"f50b59e32a66591219c73f18c210c38dac9736c8","modified":1638518704761},{"_id":"public/tags/mysql/index.html","hash":"19ad3fb253f4ede8912363b25be76a55820c8bb6","modified":1638518704761},{"_id":"public/tags/nginx/index.html","hash":"29c8bc2ccbebf698f9746ba058533e1aae19d201","modified":1638518704761},{"_id":"public/tags/php/index.html","hash":"87ab5549840300aece32568cb6da29e2a1ac69c6","modified":1638518704761},{"_id":"public/tags/队列/index.html","hash":"7513ea8b217c462b41278cdd091671fc04ea03e5","modified":1638518704761},{"_id":"public/tags/事件监听/index.html","hash":"851fcdd224b4e98acc89fc98ae7078b0e2b47e03","modified":1638518704761},{"_id":"public/tags/UEditor/index.html","hash":"cec60185075f1e545686e7f8753f7a856e2cadf2","modified":1638518704761},{"_id":"public/tags/表单验证/index.html","hash":"f8e2bcbe5f17559f1f05fa0ca1312aba5f746136","modified":1638518704761},{"_id":"public/tags/ajax/index.html","hash":"c5447d1a479a5b0877c9098001c2c54aef3e4558","modified":1638518704761},{"_id":"public/tags/模板继承/index.html","hash":"3ea07b7f48373eaaeb889f975228d2ff6396f33d","modified":1638518704761},{"_id":"public/tags/登陆验证/index.html","hash":"cf9f4065d9f518b589d471aed80b90b48e44e42e","modified":1638518704761},{"_id":"public/tags/中间件/index.html","hash":"500998fe18501bff79ee7437d78d48e5eaccdda6","modified":1638518704761},{"_id":"public/tags/上传/index.html","hash":"3cf6099f76b55ecebcc9a86acf4b67356d51ade9","modified":1638518704761},{"_id":"public/tags/图片云存储/index.html","hash":"9f72ee3c1975549bf6c1c16261267401f0b579a3","modified":1638518704761},{"_id":"public/tags/views/index.html","hash":"7de63915e8cd7db3912ed198c39ff5da81e29aef","modified":1638518704761},{"_id":"public/tags/预加载/index.html","hash":"de59fcc2f8ceb9bf87d0f74d137126c2ee87d871","modified":1638518704761},{"_id":"public/tags/debugbar/index.html","hash":"760c809634ee02220441aed6834220e9d843224a","modified":1638518704761},{"_id":"public/tags/递归/index.html","hash":"e970eb3f52c671abae015279d1477e8bb18d02e7","modified":1638518704761},{"_id":"public/tags/tp/index.html","hash":"3d3b939014e1cd55d4faee36657077f0d9a00524","modified":1638518704761},{"_id":"public/tags/算法/index.html","hash":"ca9a5d5b11f6f4100469ae0bbf361b4acb71dda3","modified":1638518704761},{"_id":"public/tags/位运算/index.html","hash":"5efe2c2f087aa5b9bc83b53c6ef2399ab4966ea1","modified":1638518704761},{"_id":"public/tags/git/index.html","hash":"4a0e01f22ce8b66603834c24b97e24d78db15d9c","modified":1638518704761},{"_id":"public/tags/qrcode/index.html","hash":"cf96f9b22b6d5c72105adbc5fe2de6c490d747c9","modified":1638518704761},{"_id":"public/tags/栈/index.html","hash":"1178073bf14bf30069ab2413c01fe9d786cf2ece","modified":1638518704761},{"_id":"public/timeline/index.html","hash":"57da8de4ba5dc975936b48b22295dbc234266962","modified":1638518704761},{"_id":"public/2021/11/25/Laravel-prestrain/index.html","hash":"21aa629d64adebb606ab3518d093e67b09473226","modified":1638518704761},{"_id":"public/2019/01/22/php-question1/index.html","hash":"040b062cd4c33f398a3af8b4de7b39809e581575","modified":1638518704761},{"_id":"public/2018/11/24/Mysql-sum/index.html","hash":"965e4031d3965bdebb43ce5f64333f0b96403340","modified":1638518704761},{"_id":"public/2018/11/24/php-basicsort/index.html","hash":"acd1dba9d5279631352b7b1a1f98d9cf852a9f2e","modified":1638518704761},{"_id":"public/2018/11/24/phpalgorithm-erfen/index.html","hash":"33a9fded542a0b13de6bdac9b8a2270fc325c1bf","modified":1638518704761},{"_id":"public/2018/08/23/php-queue/index.html","hash":"17343818b6f96c372e066b2481ab53b689816257","modified":1638518704761},{"_id":"public/2018/08/23/php-bitwise/index.html","hash":"6f399ddbd2ce8a7895104b95632ea05b811b2b4c","modified":1638518704761},{"_id":"public/2018/06/13/Laravel-mobile/index.html","hash":"795df31bee340978f75a0ec322d2de9be94fadbc","modified":1638518704761},{"_id":"public/2018/05/26/Laravel-cloudfile/index.html","hash":"a11b5bb38f6bf6f831cd6d67f273de9eaadf595d","modified":1638518704761},{"_id":"public/2018/05/24/Laravel-Queue/index.html","hash":"6f548f95ba224f3ace4478cf8ce5be855082fd6d","modified":1638518704761},{"_id":"public/2018/05/12/Laravel-Event/index.html","hash":"d22bb32be80c6c9dc4d8026c9c40665b71c229e2","modified":1638518704761},{"_id":"public/2018/03/23/Laravel-Cache/index.html","hash":"802f2073abe5a7e4c38da4ff4c0f770e19d40aba","modified":1638518704761},{"_id":"public/2018/03/23/Laravel-share-debugbar/index.html","hash":"f8f4c2b4e357300a19500c807c617af348eb6cfe","modified":1638518704761},{"_id":"public/2018/03/23/Laravel-imgupload/index.html","hash":"5f5dc5c0d4301a55d8a250f4e33e38769d13680e","modified":1638518704761},{"_id":"public/2018/03/23/Laravel-UEditor-form/index.html","hash":"209f069bf363dcb4cad4dbf9eb3bf8016321120e","modified":1638518704761},{"_id":"public/2018/03/23/Laravel-ajax-temp-check-middleware/index.html","hash":"43e079acbf8a1123ee5075805103b435907ed10b","modified":1638518704761},{"_id":"public/2018/03/23/Docker-Windows/index.html","hash":"a6708b3be404b66b3ad2fa2536936b4c86d36840","modified":1638518704761},{"_id":"public/2018/03/23/questions/index.html","hash":"b739862fa458b3b4277f4a6abf2ecac87ccd3e45","modified":1638518704761},{"_id":"public/2018/03/23/PHP-non-polar-classification/index.html","hash":"82321739e2f114b2eb3f3207e5223c96f841bd98","modified":1638518704761},{"_id":"public/2018/03/23/Linux-mysql-remote/index.html","hash":"f29c420cb1b3472e0210f30f0c20a50301d7ddc4","modified":1638518704761},{"_id":"public/2018/03/23/Thinkphp-jquery-imgupload/index.html","hash":"df75d31d4917d9b0f1b5bd97e7943ea42c6bef35","modified":1638518704761},{"_id":"public/2018/03/23/Centos-LNMP/index.html","hash":"891121e2f41165a25bcb412205d28c50474b02d6","modified":1638518704761},{"_id":"public/2018/03/23/Centos7-https/index.html","hash":"a26302a5ec6c2ede7cfdfa2dd2eed36d40470e46","modified":1638518704761},{"_id":"public/2018/03/23/Linux-vsftp/index.html","hash":"aef2c8916a9bcd84df9f823d13d9cbff8d922429","modified":1638518704761},{"_id":"public/categories/PHP/index.html","hash":"3b4aee16332af1581e81436d17f855c733ad8c25","modified":1638518704761},{"_id":"public/page/3/index.html","hash":"02c67b862bb38ea13d51768a6c8187880d44d280","modified":1638518704761},{"_id":"public/page/2/index.html","hash":"9de6e0ba3c18431d4a0e8ce728f405abdfa02e98","modified":1638518704761},{"_id":"public/index.html","hash":"90adcd48ab6c14d286db76b154de284dbd79ab24","modified":1638518704761},{"_id":"public/tags/laravel/index.html","hash":"e0c2d8bd5b148d9e1ce4636921ad9e83eaee8318","modified":1638518704761},{"_id":"public/CNAME","hash":"7173decbf0aac5aeb44529aa7c64aaf15ce24191","modified":1638345008196},{"_id":"public/favicon.ico","hash":"473ba682e828a7e34f24fae320e77b6bed4260c7","modified":1638345008196},{"_id":"public/dist/APlayer.min.css.map","hash":"c59d2bc9472922cf6ef9a99e052dbee6cc7e6b36","modified":1638345008196},{"_id":"public/images/404.jpg","hash":"4f36a8d378712427cded03f5166949f5e0ba754c","modified":1638345008196},{"_id":"public/images/ayer.png","hash":"0466c05244273f645d239cd27513bfa3c50308aa","modified":1638345008196},{"_id":"public/images/ayer-side.svg","hash":"ad004ce7a873de0f91774f3d5923e010396a07bd","modified":1638345008196},{"_id":"public/images/ayer.svg","hash":"379c3307f97c364718a1dbc1e52fb14de12eb11a","modified":1638345008196},{"_id":"public/images/beian.png","hash":"29c400bc3b89f6085766dac4e0330ded5cb73d52","modified":1638345008196},{"_id":"public/images/cover7.jpg","hash":"573bff6899d2d9c5bcba0dc9c60cd1ec9eb8b029","modified":1638345008196},{"_id":"public/images/forkme.png","hash":"99c3e21a169421e4f249befb428396c729863a75","modified":1638345008196},{"_id":"public/images/mouse.cur","hash":"c1ffe93a6ba0d25ef06bb3d097560762e4807593","modified":1638345008196},{"_id":"public/images/sponsor.jpg","hash":"5b5e4498177b369a7eca7ab2b1d0710b8690e21d","modified":1638345008196},{"_id":"public/css/hbe.style.css","hash":"b0a0077cb588c0941823905fcc383aa7509ade73","modified":1638345008196},{"_id":"public/lib/hbe.js","hash":"136dba00826bdd086153bf0acb5473aea7183ad1","modified":1638345008196},{"_id":"public/assets/css/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1638345008196},{"_id":"public/assets/js/Meting.min.js","hash":"a0585220b918d78649a7893279e1ec4fb5abe835","modified":1638345008196},{"_id":"public/assets/js/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1638345008196},{"_id":"public/timeline/fonts/fontawesome/fontawesome-webfont.eot","hash":"986eed8dca049714e43eeebcb3932741a4bec76d","modified":1638345008196},{"_id":"public/timeline/fonts/fontawesome/fontawesome-webfont.woff","hash":"4a313eb93b959cc4154c684b915b0a31ddb68d84","modified":1638345008196},{"_id":"public/timeline/fonts/fontawesome/fontawesome-webfont.woff2","hash":"638c652d623280a58144f93e7b552c66d1667a11","modified":1638345008196},{"_id":"public/images/alipay.jpg","hash":"8f5409e29764fca573f1d274003910aa3c919de1","modified":1638345008196},{"_id":"public/images/cover2.jpg","hash":"f61dd08c95327468c5f6bc5175eff68d00f05b46","modified":1638345008196},{"_id":"public/images/wechat.jpg","hash":"93a362574a8498e75dca469b7bceb0b321fda387","modified":1638345008196},{"_id":"public/timeline/fonts/fontawesome/fontawesome-webfont.ttf","hash":"6484f1af6b485d5096b71b344e67f4164c33dd1f","modified":1638345008196},{"_id":"public/dist/APlayer.min.js.map","hash":"31a19da0f0cb6b00ec212eafa847f31af86788df","modified":1638345008196},{"_id":"public/images/cover6.jpg","hash":"a5b8a5dddff2607fee5fccf5fdef3b214a8468cc","modified":1638345008196},{"_id":"public/404.html","hash":"86cb9b15558d623c1e6038e77e781e544524684e","modified":1638345008196},{"_id":"public/dist/APlayer.min.css","hash":"fe84d9ceba826389a478d21056eecad3c3a3719d","modified":1638345008196},{"_id":"public/dist/instantclick.min.js","hash":"008deac1789062f11f6d1efe64c2dbd5f7477c61","modified":1638345008196},{"_id":"public/dist/main.js","hash":"436093b4310b4656fb1e60ae946d04b85d6b1fa5","modified":1638345008196},{"_id":"public/dist/music.js","hash":"4ea12fa608f76701eaba4ed5e36752f7b499a685","modified":1638345008196},{"_id":"public/js/busuanzi-2.3.pure.min.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1638345008196},{"_id":"public/js/clickBoom2.js","hash":"d3fe9e8c7046bec9745628f61d61e4102171ac2b","modified":1638345008196},{"_id":"public/js/clickBoom1.js","hash":"afd4a981d3a56c40898248152009d478a3cd0d1e","modified":1638345008196},{"_id":"public/js/search.js","hash":"118be0e0918532ac1225f62e1a0a6f0673e0b173","modified":1638345008196},{"_id":"public/js/lazyload.min.js","hash":"b801b3946fb9b72e03512c0663458e140e1fa77b","modified":1638345008196},{"_id":"public/js/tocbot.min.js","hash":"bae97e8a24a05a99335f8e725641c8ca9c50502a","modified":1638345008196},{"_id":"public/js/dz.js","hash":"079ae73e2e396c2e00919a50a6fe0d064f99303a","modified":1638345008196},{"_id":"public/js/clickLove.js","hash":"9e8e79d69ad8338761272f86fe5cad0ad5e503cc","modified":1638345008196},{"_id":"public/images/cover1.jpg","hash":"e019fbed6158ae3e4ec3d255b41bddc1afcbfa90","modified":1638345008196},{"_id":"public/images/cover3.jpg","hash":"7b4e7c9ce19ce5d5c1588b2567e88ecbb04370af","modified":1638345008196},{"_id":"public/css/clipboard.css","hash":"de223b315701d0a7831fc5e720b5e54e7b119b7e","modified":1638345008196},{"_id":"public/css/custom.css","hash":"077a835c394d45b5e0f4809ecc2217192f4ee7e4","modified":1638345008196},{"_id":"public/timeline/fonts/fontawesome/fontawesome-webfont.svg","hash":"550ef5c1253c8376f2ead32b654eb58d3c106ca3","modified":1638345008196},{"_id":"public/dist/main.css","hash":"d15ffcecf0dc8ecf774e824f634d513d4523b96c","modified":1638345008196},{"_id":"public/dist/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1638345008196},{"_id":"public/images/cover4.jpg","hash":"77040e609d2f1c60e00a8e47cb95b25bf7ff5b9c","modified":1638345008196},{"_id":"public/js/jquery-3.6.0.min.js","hash":"b82d238d4e31fdf618bae8ac11a6c812c03dd0d4","modified":1638345008196},{"_id":"public/images/cover5.jpg","hash":"1a2d6182d94b015a45fe4bf8e8a239dfcc0ef776","modified":1638345008196},{"_id":"public/mp3/HEATS.mp3","hash":"9bd915ffe091aadfcb71c716ae8ad87dd4cdef2a","modified":1638345008196},{"_id":"public/mp3/UNTRUE CRYSTAL.mp3","hash":"0b7bb7ef31bab3e8c0460570dc6366981bbe8a16","modified":1638345008196},{"_id":"public/mp3/天の金剛.mp3","hash":"d3fa5bfe82f6d4e1978ff3b41af82d9767f7fcc3","modified":1638345008196},{"_id":"public/mp3/花岡拓也、鶴山尚史 - 王の愛は民のために.mp3","hash":"622de294715c55d4457496e4c69f4da49502d2bd","modified":1638345008196},{"_id":"themes/ayer/source/dist/instantclick.js","hash":"70f04987c00829249bfe04bbb95c0f693dea8eac","modified":1638429399005},{"_id":"public/dist/instantclick.js","hash":"70f04987c00829249bfe04bbb95c0f693dea8eac","modified":1638429485772},{"_id":"themes/ayer/source/dist/jquery.pjax.min.js","hash":"0ced78e5c97127948f5bfbfbb80c4fce5c0f671e","modified":1638497304734},{"_id":"public/dist/jquery.pjax.min.js","hash":"0ced78e5c97127948f5bfbfbb80c4fce5c0f671e","modified":1638498342430},{"_id":"themes/ayer/layout/_partial/pjax.ejs","hash":"59a5d85fb92a4285262e8b55dfc771a849891418","modified":1638514732145}],"Category":[{"name":"Linux","_id":"ckwn8bfx90004twnfcrbn0jzo"},{"name":"PHP","_id":"ckwn8bfxe000ctwnf14swamw4"},{"name":"Mysql","_id":"ckwn8bfxv001atwnffxk29jm8"}],"Data":[],"Page":[{"title":"关于我","date":"2018-03-23T07:43:23.000Z","_content":"\n\n在大学生活快进入尾声的时候，终于开始去想以后的路该怎么走。在大学里并没有学到什么特别有用的东西（也有部分原因是自己没认真学- -）..临近实习的那段时间，无意间就想着做做网站。那时候什么都不懂，什么都不会，自己抱着一本基础的建html页面的课本，慢慢敲慢慢打代码。虽然到后来做的页面的确不怎么好看，但毕竟是自己做的，还是有些成就感的..\n\n学习来自兴趣，早已抛弃认真态度的学习方式，想要再重新找回学习的热情，除了一步一个脚印，没有更快的方法。\n\n生活也是一个获得与失去的过程，有获得的喜悦，也有失去的忧伤，只有当自己深切去体会，才知道美好生活来之不易。尽管在学习的道路上还有很长的路要走，但唯有坚持，才是最重要的。也希望在看这段话的你，也能够坚持自己的理想，不抛弃，不放弃。\n\n关于博客：\n\n2016.4.11\n\niBeEasy，即我的个人博客正式上线。使用的是帝国CMS7.2管理系统，而博客模板借用的是杨青个人博客上面的模板，阿里云的虚拟主机以及万网的域名。作为一个新手很难写出写不出一套管理系统，但是又想弄一个博客，然后就自己瞎折腾出来了。\n\n2016.11.20\n\n在此之前，会偶尔更新一些文章（鸡汤）。之后就因为工作上的原因暂停更新。\n\n2017\n\n因为工作的调整，并没有时间来整理博客。\n\n2018.1.8\n\n大概是因为太闲了，又折腾起了博客，除了域名其他的都做了很大的改变，管理系统由帝国CMS更换到WordPress再到现在的Hexo，模板是由网站名而找到的easyblog模板复刻到Hexo上面，简单，随心。鉴于前面做的第一个博客，本博客的文章将以技术为主，方便总结以及复习。","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2018-03-23 15:43:23\n---\n\n\n在大学生活快进入尾声的时候，终于开始去想以后的路该怎么走。在大学里并没有学到什么特别有用的东西（也有部分原因是自己没认真学- -）..临近实习的那段时间，无意间就想着做做网站。那时候什么都不懂，什么都不会，自己抱着一本基础的建html页面的课本，慢慢敲慢慢打代码。虽然到后来做的页面的确不怎么好看，但毕竟是自己做的，还是有些成就感的..\n\n学习来自兴趣，早已抛弃认真态度的学习方式，想要再重新找回学习的热情，除了一步一个脚印，没有更快的方法。\n\n生活也是一个获得与失去的过程，有获得的喜悦，也有失去的忧伤，只有当自己深切去体会，才知道美好生活来之不易。尽管在学习的道路上还有很长的路要走，但唯有坚持，才是最重要的。也希望在看这段话的你，也能够坚持自己的理想，不抛弃，不放弃。\n\n关于博客：\n\n2016.4.11\n\niBeEasy，即我的个人博客正式上线。使用的是帝国CMS7.2管理系统，而博客模板借用的是杨青个人博客上面的模板，阿里云的虚拟主机以及万网的域名。作为一个新手很难写出写不出一套管理系统，但是又想弄一个博客，然后就自己瞎折腾出来了。\n\n2016.11.20\n\n在此之前，会偶尔更新一些文章（鸡汤）。之后就因为工作上的原因暂停更新。\n\n2017\n\n因为工作的调整，并没有时间来整理博客。\n\n2018.1.8\n\n大概是因为太闲了，又折腾起了博客，除了域名其他的都做了很大的改变，管理系统由帝国CMS更换到WordPress再到现在的Hexo，模板是由网站名而找到的easyblog模板复刻到Hexo上面，简单，随心。鉴于前面做的第一个博客，本博客的文章将以技术为主，方便总结以及复习。","updated":"2021-11-25T03:28:13.082Z","path":"about/index.html","comments":1,"layout":"page","_id":"ckwn8bfx10000twnfcbqs2973","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>在大学生活快进入尾声的时候，终于开始去想以后的路该怎么走。在大学里并没有学到什么特别有用的东西（也有部分原因是自己没认真学- -）..临近实习的那段时间，无意间就想着做做网站。那时候什么都不懂，什么都不会，自己抱着一本基础的建html页面的课本，慢慢敲慢慢打代码。虽然到后来做的页面的确不怎么好看，但毕竟是自己做的，还是有些成就感的..</p>\n<p>学习来自兴趣，早已抛弃认真态度的学习方式，想要再重新找回学习的热情，除了一步一个脚印，没有更快的方法。</p>\n<p>生活也是一个获得与失去的过程，有获得的喜悦，也有失去的忧伤，只有当自己深切去体会，才知道美好生活来之不易。尽管在学习的道路上还有很长的路要走，但唯有坚持，才是最重要的。也希望在看这段话的你，也能够坚持自己的理想，不抛弃，不放弃。</p>\n<p>关于博客：</p>\n<p>2016.4.11</p>\n<p>iBeEasy，即我的个人博客正式上线。使用的是帝国CMS7.2管理系统，而博客模板借用的是杨青个人博客上面的模板，阿里云的虚拟主机以及万网的域名。作为一个新手很难写出写不出一套管理系统，但是又想弄一个博客，然后就自己瞎折腾出来了。</p>\n<p>2016.11.20</p>\n<p>在此之前，会偶尔更新一些文章（鸡汤）。之后就因为工作上的原因暂停更新。</p>\n<p>2017</p>\n<p>因为工作的调整，并没有时间来整理博客。</p>\n<p>2018.1.8</p>\n<p>大概是因为太闲了，又折腾起了博客，除了域名其他的都做了很大的改变，管理系统由帝国CMS更换到WordPress再到现在的Hexo，模板是由网站名而找到的easyblog模板复刻到Hexo上面，简单，随心。鉴于前面做的第一个博客，本博客的文章将以技术为主，方便总结以及复习。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>在大学生活快进入尾声的时候，终于开始去想以后的路该怎么走。在大学里并没有学到什么特别有用的东西（也有部分原因是自己没认真学- -）..临近实习的那段时间，无意间就想着做做网站。那时候什么都不懂，什么都不会，自己抱着一本基础的建html页面的课本，慢慢敲慢慢打代码。虽然到后来做的页面的确不怎么好看，但毕竟是自己做的，还是有些成就感的..</p>\n<p>学习来自兴趣，早已抛弃认真态度的学习方式，想要再重新找回学习的热情，除了一步一个脚印，没有更快的方法。</p>\n<p>生活也是一个获得与失去的过程，有获得的喜悦，也有失去的忧伤，只有当自己深切去体会，才知道美好生活来之不易。尽管在学习的道路上还有很长的路要走，但唯有坚持，才是最重要的。也希望在看这段话的你，也能够坚持自己的理想，不抛弃，不放弃。</p>\n<p>关于博客：</p>\n<p>2016.4.11</p>\n<p>iBeEasy，即我的个人博客正式上线。使用的是帝国CMS7.2管理系统，而博客模板借用的是杨青个人博客上面的模板，阿里云的虚拟主机以及万网的域名。作为一个新手很难写出写不出一套管理系统，但是又想弄一个博客，然后就自己瞎折腾出来了。</p>\n<p>2016.11.20</p>\n<p>在此之前，会偶尔更新一些文章（鸡汤）。之后就因为工作上的原因暂停更新。</p>\n<p>2017</p>\n<p>因为工作的调整，并没有时间来整理博客。</p>\n<p>2018.1.8</p>\n<p>大概是因为太闲了，又折腾起了博客，除了域名其他的都做了很大的改变，管理系统由帝国CMS更换到WordPress再到现在的Hexo，模板是由网站名而找到的easyblog模板复刻到Hexo上面，简单，随心。鉴于前面做的第一个博客，本博客的文章将以技术为主，方便总结以及复习。</p>\n"},{"title":"categories","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ntype: categories\nlayout: \"categories\"\n---\n","date":"2021-11-25T03:28:13.083Z","updated":"2021-11-25T03:28:13.083Z","path":"categories/index.html","comments":1,"_id":"ckwn8bfx70002twnfhq5ifs49","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>","site":{"data":{}},"excerpt":"","more":""},{"title":"friends","type":"friends","layout":"friends","_content":"","source":"friends/index.md","raw":"---\ntitle: friends\ntype: friends\nlayout: \"friends\"\n---\n","date":"2021-11-25T03:28:13.083Z","updated":"2021-11-25T03:28:13.083Z","path":"friends/index.html","comments":1,"_id":"ckwn8bfxb0006twnf13y384si","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>","site":{"data":{}},"excerpt":"","more":""},{"title":"musiclist","date":"2021-11-26T05:40:38.000Z","_content":"{% aplayerlist %}\n{\n    \"narrow\": false,                          // （可选）播放器袖珍风格\n    \"autoplay\": true,                         // （可选) 自动播放，移动端浏览器暂时不支持此功能\n    \"mode\": \"random\",                         // （可选）曲目循环类型，有 'random'（随机播放）, 'single' (单曲播放), 'circulation' (循环播放), 'order' (列表播放)， 默认：'circulation' \n    \"showlrc\": 3,                             // （可选）歌词显示配置项，可选项有：1,2,3\n    \"mutex\": true,                            // （可选）该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停\n    \"theme\": \"#e6d0b2\",\t                      // （可选）播放器风格色彩设置，默认：#b7daff\n    \"preload\": \"metadata\",                    // （可选）音乐文件预载入模式，可选项： 'none' 'metadata' 'auto', 默认: 'auto'\n    \"listmaxheight\": \"513px\",                 // (可选) 该播放列表的最大长度\n    \"music\": [\n        {\n            \"title\": \"王の愛は民のために.mp3\",\n            \"author\": \"花岡拓也、鶴山尚史\",\n            \"url\": \"花岡拓也、鶴山尚史 - 王の愛は民のために.mp3\",\n            \"pic\": \"\",\n            \"lrc\": \"\"\n        },\n    ]\n}\n{% endaplayerlist %}","source":"musiclist/index.md","raw":"---\ntitle: musiclist\ndate: 2021-11-26 13:40:38\n---\n{% aplayerlist %}\n{\n    \"narrow\": false,                          // （可选）播放器袖珍风格\n    \"autoplay\": true,                         // （可选) 自动播放，移动端浏览器暂时不支持此功能\n    \"mode\": \"random\",                         // （可选）曲目循环类型，有 'random'（随机播放）, 'single' (单曲播放), 'circulation' (循环播放), 'order' (列表播放)， 默认：'circulation' \n    \"showlrc\": 3,                             // （可选）歌词显示配置项，可选项有：1,2,3\n    \"mutex\": true,                            // （可选）该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停\n    \"theme\": \"#e6d0b2\",\t                      // （可选）播放器风格色彩设置，默认：#b7daff\n    \"preload\": \"metadata\",                    // （可选）音乐文件预载入模式，可选项： 'none' 'metadata' 'auto', 默认: 'auto'\n    \"listmaxheight\": \"513px\",                 // (可选) 该播放列表的最大长度\n    \"music\": [\n        {\n            \"title\": \"王の愛は民のために.mp3\",\n            \"author\": \"花岡拓也、鶴山尚史\",\n            \"url\": \"花岡拓也、鶴山尚史 - 王の愛は民のために.mp3\",\n            \"pic\": \"\",\n            \"lrc\": \"\"\n        },\n    ]\n}\n{% endaplayerlist %}","updated":"2021-11-26T05:44:15.865Z","path":"musiclist/index.html","comments":1,"layout":"page","_id":"ckwn8bfxc0008twnf09zs2j1u","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>\n\t\t\t<script>\n\t\t\t\tconsole.error(\"SyntaxError: Unexpected token / in JSON at position 48\");\n\t\t\t</script>","site":{"data":{}},"excerpt":"","more":"\n\t\t\t<script>\n\t\t\t\tconsole.error(\"SyntaxError: Unexpected token / in JSON at position 48\");\n\t\t\t</script>"},{"title":"tags","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ntype: tags\nlayout: \"tags\"\n---\n","date":"2021-11-25T03:28:13.084Z","updated":"2021-11-25T03:28:13.084Z","path":"tags/index.html","comments":1,"_id":"ckwn8bfxd000atwnfgp93gaqg","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>","site":{"data":{}},"excerpt":"","more":""},{"_content":"<link rel=\"stylesheet\" href=\"css/jazz-timeline.css\">\n\n        <div class=\"jazz-timeline-wrapper\">\n            <div class=\"jazz-timeline white-timeline bordered-timeline one-sided\">\n\t\t\t\t\t\t<div class=\"timeline-post\">\n                    <div class=\"timeline-meta for-large-icons\">\n                    \t<!-- <div class=\"meta-details\">C S</div> -->\n                    </div> \n                    <div class=\"timeline-icon icon-larger iconbg-green icon-color-white\">\n                    \t<div class=\"icon-placeholder\">18-09 <span>19</span></div>\n                        <div class=\"timeline-bar\"></div>\n                    </div>\n                    <div class=\"timeline-content\">\n                        <h2 class=\"content-title\"> 生日。 </h2>\n                        <div class=\"content-details\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<p>也许现在的生日已经不及小时候那样充满期待，如同小时候渴望长大，长大了却怀念小时候。种下一个小小的愿望，希望明年今日之前，能够实现。祝自己生日快乐。</p>\n                           <!--  <p>one mans carnival </p> -->\n                        </div>\n                    </div><!-- timeline content -->\n                </div><!-- .timeline-post -->  \n\t\t\t<div class=\"timeline-post\">\n                    <div class=\"timeline-meta for-large-icons\">\n                    \t<!-- <div class=\"meta-details\">C S</div> -->\n                    </div> \n                    <div class=\"timeline-icon icon-larger iconbg-green icon-color-white\">\n                    \t<div class=\"icon-placeholder\">18-08 <span>23</span></div>\n                        <div class=\"timeline-bar\"></div>\n                    </div>\n                    <div class=\"timeline-content\">\n                        <h2 class=\"content-title\"> 感怀。 </h2>\n                        <div class=\"content-details\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<img src=\"https://i.imgur.com/xP8er9P.jpg\">\n\t\t\t\t\t\t\t<p>即便只是感动了自己，也好过什么都不做。</p>\n                           <!--  <p>one mans carnival </p> -->\n                        </div>\n                    </div><!-- timeline content -->\n                </div><!-- .timeline-post -->  \n\t\t\t\t\n\t\t\t\t\t<div class=\"timeline-post\">\n                    <div class=\"timeline-meta for-large-icons\">\n                    \t<!-- <div class=\"meta-details\">C S</div> -->\n                    </div> \n                    <div class=\"timeline-icon icon-larger iconbg-green icon-color-white\">\n                    \t<div class=\"icon-placeholder\">18-06 <span>27</span></div>\n                        <div class=\"timeline-bar\"></div>\n                    </div>\n                    <div class=\"timeline-content\">\n                        <h2 class=\"content-title\"> 松柏。 </h2>\n                        <div class=\"content-details\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<img src=\"https://i.imgur.com/wK5MFDG.jpg\">\n\t\t\t\t\t\t\t<p>大树底下好乘凉。</p>\n                           <!--  <p>one mans carnival </p> -->\n                        </div>\n                    </div><!-- timeline content -->\n                </div><!-- .timeline-post -->  \n\t\t\t\t\n\t\t\t\t\t<div class=\"timeline-post\">\n                    <div class=\"timeline-meta for-large-icons\">\n                    \t<!-- <div class=\"meta-details\">C S</div> -->\n                    </div> \n                    <div class=\"timeline-icon icon-larger iconbg-purple icon-color-white\">\n                    \t<div class=\"icon-placeholder\">18-05 <span>16</span></div>\n                        <div class=\"timeline-bar\"></div>\n                    </div>\n                    <div class=\"timeline-content\">\n                        <h2 class=\"content-title\"> 森林。 </h2>\n                        <div class=\"content-details\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<img src=\"https://i.imgur.com/Vy1PNfq.jpg\">\n\t\t\t\t\t\t\t<p>基本上，可以说是很梦幻了。</p>\n                           <!--  <p>one mans carnival </p> -->\n                        </div>\n                    </div><!-- timeline content -->\n                </div><!-- .timeline-post -->  \n\t\t\t\t\n\t\t\t<div class=\"timeline-post\">\n                    <div class=\"timeline-meta for-large-icons\">\n                    \t<!-- <div class=\"meta-details\">C S</div> -->\n                    </div> \n                    <div class=\"timeline-icon icon-larger iconbg-red icon-color-white\">\n                    \t<div class=\"icon-placeholder\">18-05 <span>02</span></div>\n                        <div class=\"timeline-bar\"></div>\n                    </div>\n                    <div class=\"timeline-content\">\n                        <h2 class=\"content-title\"> 灵石。 </h2>\n                        <div class=\"content-details\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<img src=\"https://i.imgur.com/vlAK8ju.jpg\">\n\t\t\t\t\t\t\t<p>我说这是看起来很有灵性的石头应该没人反对。</p>\n                           <!--  <p>one mans carnival </p> -->\n                        </div>\n                    </div><!-- timeline content -->\n                </div><!-- .timeline-post -->  \t\n\t\t\t\n\t            <div class=\"timeline-post\">\n                    <div class=\"timeline-meta for-large-icons\">\n                    \t<!-- <div class=\"meta-details\">C S</div> -->\n                    </div> \n                    <div class=\"timeline-icon icon-larger iconbg-pink icon-color-white\">\n                    \t<div class=\"icon-placeholder\">18-04 <span>24</span></div>\n                        <div class=\"timeline-bar\"></div>\n                    </div>\n                    <div class=\"timeline-content\">\n                        <h2 class=\"content-title\"> 麋鹿。 </h2>\n                        <div class=\"content-details\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<img src=\"https://i.imgur.com/Hhjz0Tk.jpg\">\n\t\t\t\t\t\t\t<p>朋友画的小麋鹿，从画风的角度，童心未泯可能就是这样吧。</p>\n                           <!--  <p>one mans carnival </p> -->\n                        </div>\n                    </div><!-- timeline content -->\n                </div><!-- .timeline-post -->  \t\n\t\t\t\t\n            <div class=\"timeline-post\">\n                    <div class=\"timeline-meta for-large-icons\">\n                    \t<!-- <div class=\"meta-details\">C S</div> -->\n                    </div> \n                    <div class=\"timeline-icon icon-larger iconbg-blue icon-color-white\">\n                    \t<div class=\"icon-placeholder\">18-02 <span>28</span></div>\n                        <div class=\"timeline-bar\"></div>\n                    </div>\n                    <div class=\"timeline-content\">\n                        <h2 class=\"content-title\"> Laravel。 </h2>\n                        <div class=\"content-details\">\n                           <!--  <p>one mans carnival </p> -->\n                        </div>\n                    </div><!-- timeline content -->\n                </div><!-- .timeline-post -->  \n\t\t\t\t\n            <div class=\"timeline-post\">\n                    <div class=\"timeline-meta for-large-icons\">\n                    \t<!-- <div class=\"meta-details\">C S</div> -->\n                    </div> \n                    <div class=\"timeline-icon icon-larger iconbg-green icon-color-white\">\n                    \t<div class=\"icon-placeholder\">18-01 <span>26</span></div>\n                        <div class=\"timeline-bar\"></div>\n                    </div>\n                    <div class=\"timeline-content\">\n                        <h2 class=\"content-title\"> one mans carnival </h2>\n                        <div class=\"content-details\">\n                           <!--  <p>one mans carnival </p> -->\n                        </div>\n                    </div><!-- timeline content -->\n                </div><!-- .timeline-post -->  \n\t\t\t\t\n                <div class=\"timeline-post\">\n                    <div class=\"timeline-meta for-large-icons\">\n                    \t<!-- <div class=\"meta-details\">C S</div> -->\n                    </div> \n                    <div class=\"timeline-icon icon-larger iconbg-turqoise icon-color-white\">\n                    \t<div class=\"icon-placeholder\">17-03 <span>09</span></div>\n                        <div class=\"timeline-bar\"></div>\n                    </div>\n                    <div class=\"timeline-content\">\n                     <!--    <h2 class=\"content-title\"> Christmas Day </h2> -->\n                        <div class=\"content-details\">\n                            <p>有几个老朋友真的很好，很感激一起玩耍到现在的老朋友们，即使以后共同的话题会减少，很多东西也会随着时间慢慢被淡忘 但在最不知所措的时候，最想分享喜悦悲伤的时候，第一个想到的还会是彼此。就像刚刚认识时那样。 </p>\n                        </div>\n                    </div><!-- timeline content -->\n                </div><!-- .timeline-post --> \n\n                                                         \n            </div><!-- .timeline -->\n        </div><!-- .jazz-timeline-wrapper -->    \n\n\n","source":"timeline/index.html","raw":"<link rel=\"stylesheet\" href=\"css/jazz-timeline.css\">\n\n        <div class=\"jazz-timeline-wrapper\">\n            <div class=\"jazz-timeline white-timeline bordered-timeline one-sided\">\n\t\t\t\t\t\t<div class=\"timeline-post\">\n                    <div class=\"timeline-meta for-large-icons\">\n                    \t<!-- <div class=\"meta-details\">C S</div> -->\n                    </div> \n                    <div class=\"timeline-icon icon-larger iconbg-green icon-color-white\">\n                    \t<div class=\"icon-placeholder\">18-09 <span>19</span></div>\n                        <div class=\"timeline-bar\"></div>\n                    </div>\n                    <div class=\"timeline-content\">\n                        <h2 class=\"content-title\"> 生日。 </h2>\n                        <div class=\"content-details\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<p>也许现在的生日已经不及小时候那样充满期待，如同小时候渴望长大，长大了却怀念小时候。种下一个小小的愿望，希望明年今日之前，能够实现。祝自己生日快乐。</p>\n                           <!--  <p>one mans carnival </p> -->\n                        </div>\n                    </div><!-- timeline content -->\n                </div><!-- .timeline-post -->  \n\t\t\t<div class=\"timeline-post\">\n                    <div class=\"timeline-meta for-large-icons\">\n                    \t<!-- <div class=\"meta-details\">C S</div> -->\n                    </div> \n                    <div class=\"timeline-icon icon-larger iconbg-green icon-color-white\">\n                    \t<div class=\"icon-placeholder\">18-08 <span>23</span></div>\n                        <div class=\"timeline-bar\"></div>\n                    </div>\n                    <div class=\"timeline-content\">\n                        <h2 class=\"content-title\"> 感怀。 </h2>\n                        <div class=\"content-details\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<img src=\"https://i.imgur.com/xP8er9P.jpg\">\n\t\t\t\t\t\t\t<p>即便只是感动了自己，也好过什么都不做。</p>\n                           <!--  <p>one mans carnival </p> -->\n                        </div>\n                    </div><!-- timeline content -->\n                </div><!-- .timeline-post -->  \n\t\t\t\t\n\t\t\t\t\t<div class=\"timeline-post\">\n                    <div class=\"timeline-meta for-large-icons\">\n                    \t<!-- <div class=\"meta-details\">C S</div> -->\n                    </div> \n                    <div class=\"timeline-icon icon-larger iconbg-green icon-color-white\">\n                    \t<div class=\"icon-placeholder\">18-06 <span>27</span></div>\n                        <div class=\"timeline-bar\"></div>\n                    </div>\n                    <div class=\"timeline-content\">\n                        <h2 class=\"content-title\"> 松柏。 </h2>\n                        <div class=\"content-details\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<img src=\"https://i.imgur.com/wK5MFDG.jpg\">\n\t\t\t\t\t\t\t<p>大树底下好乘凉。</p>\n                           <!--  <p>one mans carnival </p> -->\n                        </div>\n                    </div><!-- timeline content -->\n                </div><!-- .timeline-post -->  \n\t\t\t\t\n\t\t\t\t\t<div class=\"timeline-post\">\n                    <div class=\"timeline-meta for-large-icons\">\n                    \t<!-- <div class=\"meta-details\">C S</div> -->\n                    </div> \n                    <div class=\"timeline-icon icon-larger iconbg-purple icon-color-white\">\n                    \t<div class=\"icon-placeholder\">18-05 <span>16</span></div>\n                        <div class=\"timeline-bar\"></div>\n                    </div>\n                    <div class=\"timeline-content\">\n                        <h2 class=\"content-title\"> 森林。 </h2>\n                        <div class=\"content-details\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<img src=\"https://i.imgur.com/Vy1PNfq.jpg\">\n\t\t\t\t\t\t\t<p>基本上，可以说是很梦幻了。</p>\n                           <!--  <p>one mans carnival </p> -->\n                        </div>\n                    </div><!-- timeline content -->\n                </div><!-- .timeline-post -->  \n\t\t\t\t\n\t\t\t<div class=\"timeline-post\">\n                    <div class=\"timeline-meta for-large-icons\">\n                    \t<!-- <div class=\"meta-details\">C S</div> -->\n                    </div> \n                    <div class=\"timeline-icon icon-larger iconbg-red icon-color-white\">\n                    \t<div class=\"icon-placeholder\">18-05 <span>02</span></div>\n                        <div class=\"timeline-bar\"></div>\n                    </div>\n                    <div class=\"timeline-content\">\n                        <h2 class=\"content-title\"> 灵石。 </h2>\n                        <div class=\"content-details\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<img src=\"https://i.imgur.com/vlAK8ju.jpg\">\n\t\t\t\t\t\t\t<p>我说这是看起来很有灵性的石头应该没人反对。</p>\n                           <!--  <p>one mans carnival </p> -->\n                        </div>\n                    </div><!-- timeline content -->\n                </div><!-- .timeline-post -->  \t\n\t\t\t\n\t            <div class=\"timeline-post\">\n                    <div class=\"timeline-meta for-large-icons\">\n                    \t<!-- <div class=\"meta-details\">C S</div> -->\n                    </div> \n                    <div class=\"timeline-icon icon-larger iconbg-pink icon-color-white\">\n                    \t<div class=\"icon-placeholder\">18-04 <span>24</span></div>\n                        <div class=\"timeline-bar\"></div>\n                    </div>\n                    <div class=\"timeline-content\">\n                        <h2 class=\"content-title\"> 麋鹿。 </h2>\n                        <div class=\"content-details\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<img src=\"https://i.imgur.com/Hhjz0Tk.jpg\">\n\t\t\t\t\t\t\t<p>朋友画的小麋鹿，从画风的角度，童心未泯可能就是这样吧。</p>\n                           <!--  <p>one mans carnival </p> -->\n                        </div>\n                    </div><!-- timeline content -->\n                </div><!-- .timeline-post -->  \t\n\t\t\t\t\n            <div class=\"timeline-post\">\n                    <div class=\"timeline-meta for-large-icons\">\n                    \t<!-- <div class=\"meta-details\">C S</div> -->\n                    </div> \n                    <div class=\"timeline-icon icon-larger iconbg-blue icon-color-white\">\n                    \t<div class=\"icon-placeholder\">18-02 <span>28</span></div>\n                        <div class=\"timeline-bar\"></div>\n                    </div>\n                    <div class=\"timeline-content\">\n                        <h2 class=\"content-title\"> Laravel。 </h2>\n                        <div class=\"content-details\">\n                           <!--  <p>one mans carnival </p> -->\n                        </div>\n                    </div><!-- timeline content -->\n                </div><!-- .timeline-post -->  \n\t\t\t\t\n            <div class=\"timeline-post\">\n                    <div class=\"timeline-meta for-large-icons\">\n                    \t<!-- <div class=\"meta-details\">C S</div> -->\n                    </div> \n                    <div class=\"timeline-icon icon-larger iconbg-green icon-color-white\">\n                    \t<div class=\"icon-placeholder\">18-01 <span>26</span></div>\n                        <div class=\"timeline-bar\"></div>\n                    </div>\n                    <div class=\"timeline-content\">\n                        <h2 class=\"content-title\"> one mans carnival </h2>\n                        <div class=\"content-details\">\n                           <!--  <p>one mans carnival </p> -->\n                        </div>\n                    </div><!-- timeline content -->\n                </div><!-- .timeline-post -->  \n\t\t\t\t\n                <div class=\"timeline-post\">\n                    <div class=\"timeline-meta for-large-icons\">\n                    \t<!-- <div class=\"meta-details\">C S</div> -->\n                    </div> \n                    <div class=\"timeline-icon icon-larger iconbg-turqoise icon-color-white\">\n                    \t<div class=\"icon-placeholder\">17-03 <span>09</span></div>\n                        <div class=\"timeline-bar\"></div>\n                    </div>\n                    <div class=\"timeline-content\">\n                     <!--    <h2 class=\"content-title\"> Christmas Day </h2> -->\n                        <div class=\"content-details\">\n                            <p>有几个老朋友真的很好，很感激一起玩耍到现在的老朋友们，即使以后共同的话题会减少，很多东西也会随着时间慢慢被淡忘 但在最不知所措的时候，最想分享喜悦悲伤的时候，第一个想到的还会是彼此。就像刚刚认识时那样。 </p>\n                        </div>\n                    </div><!-- timeline content -->\n                </div><!-- .timeline-post --> \n\n                                                         \n            </div><!-- .timeline -->\n        </div><!-- .jazz-timeline-wrapper -->    \n\n\n","date":"2021-11-25T03:28:13.094Z","updated":"2021-11-25T03:28:13.094Z","path":"timeline/index.html","title":"","comments":1,"layout":"page","_id":"ckwn8bfxf000ftwnfegangg24","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><link rel=\"stylesheet\" href=\"css/jazz-timeline.css\">\n\n        <div class=\"jazz-timeline-wrapper\">\n            <div class=\"jazz-timeline white-timeline bordered-timeline one-sided\">\n\t\t\t\t\t\t<div class=\"timeline-post\">\n                    <div class=\"timeline-meta for-large-icons\">\n                    \t<!-- <div class=\"meta-details\">C S</div> -->\n                    </div> \n                    <div class=\"timeline-icon icon-larger iconbg-green icon-color-white\">\n                    \t<div class=\"icon-placeholder\">18-09 <span>19</span></div>\n                        <div class=\"timeline-bar\"></div>\n                    </div>\n                    <div class=\"timeline-content\">\n                        <h2 class=\"content-title\"> 生日。 </h2>\n                        <div class=\"content-details\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<p>也许现在的生日已经不及小时候那样充满期待，如同小时候渴望长大，长大了却怀念小时候。种下一个小小的愿望，希望明年今日之前，能够实现。祝自己生日快乐。</p>\n                           <!--  <p>one mans carnival </p> -->\n                        </div>\n                    </div><!-- timeline content -->\n                </div><!-- .timeline-post -->  \n\t\t\t<div class=\"timeline-post\">\n                    <div class=\"timeline-meta for-large-icons\">\n                    \t<!-- <div class=\"meta-details\">C S</div> -->\n                    </div> \n                    <div class=\"timeline-icon icon-larger iconbg-green icon-color-white\">\n                    \t<div class=\"icon-placeholder\">18-08 <span>23</span></div>\n                        <div class=\"timeline-bar\"></div>\n                    </div>\n                    <div class=\"timeline-content\">\n                        <h2 class=\"content-title\"> 感怀。 </h2>\n                        <div class=\"content-details\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<img src=\"https://i.imgur.com/xP8er9P.jpg\">\n\t\t\t\t\t\t\t<p>即便只是感动了自己，也好过什么都不做。</p>\n                           <!--  <p>one mans carnival </p> -->\n                        </div>\n                    </div><!-- timeline content -->\n                </div><!-- .timeline-post -->  \n\t\t\t\t\n\t\t\t\t\t<div class=\"timeline-post\">\n                    <div class=\"timeline-meta for-large-icons\">\n                    \t<!-- <div class=\"meta-details\">C S</div> -->\n                    </div> \n                    <div class=\"timeline-icon icon-larger iconbg-green icon-color-white\">\n                    \t<div class=\"icon-placeholder\">18-06 <span>27</span></div>\n                        <div class=\"timeline-bar\"></div>\n                    </div>\n                    <div class=\"timeline-content\">\n                        <h2 class=\"content-title\"> 松柏。 </h2>\n                        <div class=\"content-details\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<img src=\"https://i.imgur.com/wK5MFDG.jpg\">\n\t\t\t\t\t\t\t<p>大树底下好乘凉。</p>\n                           <!--  <p>one mans carnival </p> -->\n                        </div>\n                    </div><!-- timeline content -->\n                </div><!-- .timeline-post -->  \n\t\t\t\t\n\t\t\t\t\t<div class=\"timeline-post\">\n                    <div class=\"timeline-meta for-large-icons\">\n                    \t<!-- <div class=\"meta-details\">C S</div> -->\n                    </div> \n                    <div class=\"timeline-icon icon-larger iconbg-purple icon-color-white\">\n                    \t<div class=\"icon-placeholder\">18-05 <span>16</span></div>\n                        <div class=\"timeline-bar\"></div>\n                    </div>\n                    <div class=\"timeline-content\">\n                        <h2 class=\"content-title\"> 森林。 </h2>\n                        <div class=\"content-details\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<img src=\"https://i.imgur.com/Vy1PNfq.jpg\">\n\t\t\t\t\t\t\t<p>基本上，可以说是很梦幻了。</p>\n                           <!--  <p>one mans carnival </p> -->\n                        </div>\n                    </div><!-- timeline content -->\n                </div><!-- .timeline-post -->  \n\t\t\t\t\n\t\t\t<div class=\"timeline-post\">\n                    <div class=\"timeline-meta for-large-icons\">\n                    \t<!-- <div class=\"meta-details\">C S</div> -->\n                    </div> \n                    <div class=\"timeline-icon icon-larger iconbg-red icon-color-white\">\n                    \t<div class=\"icon-placeholder\">18-05 <span>02</span></div>\n                        <div class=\"timeline-bar\"></div>\n                    </div>\n                    <div class=\"timeline-content\">\n                        <h2 class=\"content-title\"> 灵石。 </h2>\n                        <div class=\"content-details\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<img src=\"https://i.imgur.com/vlAK8ju.jpg\">\n\t\t\t\t\t\t\t<p>我说这是看起来很有灵性的石头应该没人反对。</p>\n                           <!--  <p>one mans carnival </p> -->\n                        </div>\n                    </div><!-- timeline content -->\n                </div><!-- .timeline-post -->  \t\n\t\t\t\n\t            <div class=\"timeline-post\">\n                    <div class=\"timeline-meta for-large-icons\">\n                    \t<!-- <div class=\"meta-details\">C S</div> -->\n                    </div> \n                    <div class=\"timeline-icon icon-larger iconbg-pink icon-color-white\">\n                    \t<div class=\"icon-placeholder\">18-04 <span>24</span></div>\n                        <div class=\"timeline-bar\"></div>\n                    </div>\n                    <div class=\"timeline-content\">\n                        <h2 class=\"content-title\"> 麋鹿。 </h2>\n                        <div class=\"content-details\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<img src=\"https://i.imgur.com/Hhjz0Tk.jpg\">\n\t\t\t\t\t\t\t<p>朋友画的小麋鹿，从画风的角度，童心未泯可能就是这样吧。</p>\n                           <!--  <p>one mans carnival </p> -->\n                        </div>\n                    </div><!-- timeline content -->\n                </div><!-- .timeline-post -->  \t\n\t\t\t\t\n            <div class=\"timeline-post\">\n                    <div class=\"timeline-meta for-large-icons\">\n                    \t<!-- <div class=\"meta-details\">C S</div> -->\n                    </div> \n                    <div class=\"timeline-icon icon-larger iconbg-blue icon-color-white\">\n                    \t<div class=\"icon-placeholder\">18-02 <span>28</span></div>\n                        <div class=\"timeline-bar\"></div>\n                    </div>\n                    <div class=\"timeline-content\">\n                        <h2 class=\"content-title\"> Laravel。 </h2>\n                        <div class=\"content-details\">\n                           <!--  <p>one mans carnival </p> -->\n                        </div>\n                    </div><!-- timeline content -->\n                </div><!-- .timeline-post -->  \n\t\t\t\t\n            <div class=\"timeline-post\">\n                    <div class=\"timeline-meta for-large-icons\">\n                    \t<!-- <div class=\"meta-details\">C S</div> -->\n                    </div> \n                    <div class=\"timeline-icon icon-larger iconbg-green icon-color-white\">\n                    \t<div class=\"icon-placeholder\">18-01 <span>26</span></div>\n                        <div class=\"timeline-bar\"></div>\n                    </div>\n                    <div class=\"timeline-content\">\n                        <h2 class=\"content-title\"> one mans carnival </h2>\n                        <div class=\"content-details\">\n                           <!--  <p>one mans carnival </p> -->\n                        </div>\n                    </div><!-- timeline content -->\n                </div><!-- .timeline-post -->  \n\t\t\t\t\n                <div class=\"timeline-post\">\n                    <div class=\"timeline-meta for-large-icons\">\n                    \t<!-- <div class=\"meta-details\">C S</div> -->\n                    </div> \n                    <div class=\"timeline-icon icon-larger iconbg-turqoise icon-color-white\">\n                    \t<div class=\"icon-placeholder\">17-03 <span>09</span></div>\n                        <div class=\"timeline-bar\"></div>\n                    </div>\n                    <div class=\"timeline-content\">\n                     <!--    <h2 class=\"content-title\"> Christmas Day </h2> -->\n                        <div class=\"content-details\">\n                            <p>有几个老朋友真的很好，很感激一起玩耍到现在的老朋友们，即使以后共同的话题会减少，很多东西也会随着时间慢慢被淡忘 但在最不知所措的时候，最想分享喜悦悲伤的时候，第一个想到的还会是彼此。就像刚刚认识时那样。 </p>\n                        </div>\n                    </div><!-- timeline content -->\n                </div><!-- .timeline-post --> \n\n                                                         \n            </div><!-- .timeline -->\n        </div><!-- .jazz-timeline-wrapper -->    \n\n\n","site":{"data":{}},"excerpt":"","more":"<link rel=\"stylesheet\" href=\"css/jazz-timeline.css\">\n\n        <div class=\"jazz-timeline-wrapper\">\n            <div class=\"jazz-timeline white-timeline bordered-timeline one-sided\">\n\t\t\t\t\t\t<div class=\"timeline-post\">\n                    <div class=\"timeline-meta for-large-icons\">\n                    \t<!-- <div class=\"meta-details\">C S</div> -->\n                    </div> \n                    <div class=\"timeline-icon icon-larger iconbg-green icon-color-white\">\n                    \t<div class=\"icon-placeholder\">18-09 <span>19</span></div>\n                        <div class=\"timeline-bar\"></div>\n                    </div>\n                    <div class=\"timeline-content\">\n                        <h2 class=\"content-title\"> 生日。 </h2>\n                        <div class=\"content-details\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<p>也许现在的生日已经不及小时候那样充满期待，如同小时候渴望长大，长大了却怀念小时候。种下一个小小的愿望，希望明年今日之前，能够实现。祝自己生日快乐。</p>\n                           <!--  <p>one mans carnival </p> -->\n                        </div>\n                    </div><!-- timeline content -->\n                </div><!-- .timeline-post -->  \n\t\t\t<div class=\"timeline-post\">\n                    <div class=\"timeline-meta for-large-icons\">\n                    \t<!-- <div class=\"meta-details\">C S</div> -->\n                    </div> \n                    <div class=\"timeline-icon icon-larger iconbg-green icon-color-white\">\n                    \t<div class=\"icon-placeholder\">18-08 <span>23</span></div>\n                        <div class=\"timeline-bar\"></div>\n                    </div>\n                    <div class=\"timeline-content\">\n                        <h2 class=\"content-title\"> 感怀。 </h2>\n                        <div class=\"content-details\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<img src=\"https://i.imgur.com/xP8er9P.jpg\">\n\t\t\t\t\t\t\t<p>即便只是感动了自己，也好过什么都不做。</p>\n                           <!--  <p>one mans carnival </p> -->\n                        </div>\n                    </div><!-- timeline content -->\n                </div><!-- .timeline-post -->  \n\t\t\t\t\n\t\t\t\t\t<div class=\"timeline-post\">\n                    <div class=\"timeline-meta for-large-icons\">\n                    \t<!-- <div class=\"meta-details\">C S</div> -->\n                    </div> \n                    <div class=\"timeline-icon icon-larger iconbg-green icon-color-white\">\n                    \t<div class=\"icon-placeholder\">18-06 <span>27</span></div>\n                        <div class=\"timeline-bar\"></div>\n                    </div>\n                    <div class=\"timeline-content\">\n                        <h2 class=\"content-title\"> 松柏。 </h2>\n                        <div class=\"content-details\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<img src=\"https://i.imgur.com/wK5MFDG.jpg\">\n\t\t\t\t\t\t\t<p>大树底下好乘凉。</p>\n                           <!--  <p>one mans carnival </p> -->\n                        </div>\n                    </div><!-- timeline content -->\n                </div><!-- .timeline-post -->  \n\t\t\t\t\n\t\t\t\t\t<div class=\"timeline-post\">\n                    <div class=\"timeline-meta for-large-icons\">\n                    \t<!-- <div class=\"meta-details\">C S</div> -->\n                    </div> \n                    <div class=\"timeline-icon icon-larger iconbg-purple icon-color-white\">\n                    \t<div class=\"icon-placeholder\">18-05 <span>16</span></div>\n                        <div class=\"timeline-bar\"></div>\n                    </div>\n                    <div class=\"timeline-content\">\n                        <h2 class=\"content-title\"> 森林。 </h2>\n                        <div class=\"content-details\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<img src=\"https://i.imgur.com/Vy1PNfq.jpg\">\n\t\t\t\t\t\t\t<p>基本上，可以说是很梦幻了。</p>\n                           <!--  <p>one mans carnival </p> -->\n                        </div>\n                    </div><!-- timeline content -->\n                </div><!-- .timeline-post -->  \n\t\t\t\t\n\t\t\t<div class=\"timeline-post\">\n                    <div class=\"timeline-meta for-large-icons\">\n                    \t<!-- <div class=\"meta-details\">C S</div> -->\n                    </div> \n                    <div class=\"timeline-icon icon-larger iconbg-red icon-color-white\">\n                    \t<div class=\"icon-placeholder\">18-05 <span>02</span></div>\n                        <div class=\"timeline-bar\"></div>\n                    </div>\n                    <div class=\"timeline-content\">\n                        <h2 class=\"content-title\"> 灵石。 </h2>\n                        <div class=\"content-details\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<img src=\"https://i.imgur.com/vlAK8ju.jpg\">\n\t\t\t\t\t\t\t<p>我说这是看起来很有灵性的石头应该没人反对。</p>\n                           <!--  <p>one mans carnival </p> -->\n                        </div>\n                    </div><!-- timeline content -->\n                </div><!-- .timeline-post -->  \t\n\t\t\t\n\t            <div class=\"timeline-post\">\n                    <div class=\"timeline-meta for-large-icons\">\n                    \t<!-- <div class=\"meta-details\">C S</div> -->\n                    </div> \n                    <div class=\"timeline-icon icon-larger iconbg-pink icon-color-white\">\n                    \t<div class=\"icon-placeholder\">18-04 <span>24</span></div>\n                        <div class=\"timeline-bar\"></div>\n                    </div>\n                    <div class=\"timeline-content\">\n                        <h2 class=\"content-title\"> 麋鹿。 </h2>\n                        <div class=\"content-details\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<img src=\"https://i.imgur.com/Hhjz0Tk.jpg\">\n\t\t\t\t\t\t\t<p>朋友画的小麋鹿，从画风的角度，童心未泯可能就是这样吧。</p>\n                           <!--  <p>one mans carnival </p> -->\n                        </div>\n                    </div><!-- timeline content -->\n                </div><!-- .timeline-post -->  \t\n\t\t\t\t\n            <div class=\"timeline-post\">\n                    <div class=\"timeline-meta for-large-icons\">\n                    \t<!-- <div class=\"meta-details\">C S</div> -->\n                    </div> \n                    <div class=\"timeline-icon icon-larger iconbg-blue icon-color-white\">\n                    \t<div class=\"icon-placeholder\">18-02 <span>28</span></div>\n                        <div class=\"timeline-bar\"></div>\n                    </div>\n                    <div class=\"timeline-content\">\n                        <h2 class=\"content-title\"> Laravel。 </h2>\n                        <div class=\"content-details\">\n                           <!--  <p>one mans carnival </p> -->\n                        </div>\n                    </div><!-- timeline content -->\n                </div><!-- .timeline-post -->  \n\t\t\t\t\n            <div class=\"timeline-post\">\n                    <div class=\"timeline-meta for-large-icons\">\n                    \t<!-- <div class=\"meta-details\">C S</div> -->\n                    </div> \n                    <div class=\"timeline-icon icon-larger iconbg-green icon-color-white\">\n                    \t<div class=\"icon-placeholder\">18-01 <span>26</span></div>\n                        <div class=\"timeline-bar\"></div>\n                    </div>\n                    <div class=\"timeline-content\">\n                        <h2 class=\"content-title\"> one mans carnival </h2>\n                        <div class=\"content-details\">\n                           <!--  <p>one mans carnival </p> -->\n                        </div>\n                    </div><!-- timeline content -->\n                </div><!-- .timeline-post -->  \n\t\t\t\t\n                <div class=\"timeline-post\">\n                    <div class=\"timeline-meta for-large-icons\">\n                    \t<!-- <div class=\"meta-details\">C S</div> -->\n                    </div> \n                    <div class=\"timeline-icon icon-larger iconbg-turqoise icon-color-white\">\n                    \t<div class=\"icon-placeholder\">17-03 <span>09</span></div>\n                        <div class=\"timeline-bar\"></div>\n                    </div>\n                    <div class=\"timeline-content\">\n                     <!--    <h2 class=\"content-title\"> Christmas Day </h2> -->\n                        <div class=\"content-details\">\n                            <p>有几个老朋友真的很好，很感激一起玩耍到现在的老朋友们，即使以后共同的话题会减少，很多东西也会随着时间慢慢被淡忘 但在最不知所措的时候，最想分享喜悦悲伤的时候，第一个想到的还会是彼此。就像刚刚认识时那样。 </p>\n                        </div>\n                    </div><!-- timeline content -->\n                </div><!-- .timeline-post --> \n\n                                                         \n            </div><!-- .timeline -->\n        </div><!-- .jazz-timeline-wrapper -->    \n\n\n"},{"title":"时光轴","date":"2018-03-26T07:43:23.000Z","layout":"false","_content":"","source":"timeline/index.md","raw":"---\ntitle: 时光轴\ndate: 2018-03-26 15:43:23\nlayout: false\n---\n","updated":"2021-11-25T06:48:49.545Z","path":"timeline/index.html","comments":1,"_id":"ckwn8bfxh000htwnf1os510za","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>","site":{"data":{}},"excerpt":"","more":""},{"_content":"/*! skrollr 0.6.30 (2015-08-12) | Alexander Prinzhorn - https://github.com/Prinzhorn/skrollr | Free to use under terms of MIT license */\n!function(a,b,c){\"use strict\";function d(c){if(e=b.documentElement,f=b.body,T(),ha=this,c=c||{},ma=c.constants||{},c.easing)for(var d in c.easing)W[d]=c.easing[d];ta=c.edgeStrategy||\"set\",ka={beforerender:c.beforerender,render:c.render,keyframe:c.keyframe},la=c.forceHeight!==!1,la&&(Ka=c.scale||1),na=c.mobileDeceleration||y,pa=c.smoothScrolling!==!1,qa=c.smoothScrollingDuration||A,ra={targetTop:ha.getScrollTop()},Sa=(c.mobileCheck||function(){return/Android|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent||navigator.vendor||a.opera)})(),Sa?(ja=b.getElementById(c.skrollrBody||z),ja&&ga(),X(),Ea(e,[s,v],[t])):Ea(e,[s,u],[t]),ha.refresh(),wa(a,\"resize orientationchange\",function(){var a=e.clientWidth,b=e.clientHeight;(b!==Pa||a!==Oa)&&(Pa=b,Oa=a,Qa=!0)});var g=U();return function h(){$(),va=g(h)}(),ha}var e,f,g={get:function(){return ha},init:function(a){return ha||new d(a)},VERSION:\"0.6.30\"},h=Object.prototype.hasOwnProperty,i=a.Math,j=a.getComputedStyle,k=\"touchstart\",l=\"touchmove\",m=\"touchcancel\",n=\"touchend\",o=\"skrollable\",p=o+\"-before\",q=o+\"-between\",r=o+\"-after\",s=\"skrollr\",t=\"no-\"+s,u=s+\"-desktop\",v=s+\"-mobile\",w=\"linear\",x=1e3,y=.004,z=\"skrollr-body\",A=200,B=\"start\",C=\"end\",D=\"center\",E=\"bottom\",F=\"___skrollable_id\",G=/^(?:input|textarea|button|select)$/i,H=/^\\s+|\\s+$/g,I=/^data(?:-(_\\w+))?(?:-?(-?\\d*\\.?\\d+p?))?(?:-?(start|end|top|center|bottom))?(?:-?(top|center|bottom))?$/,J=/\\s*(@?[\\w\\-\\[\\]]+)\\s*:\\s*(.+?)\\s*(?:;|$)/gi,K=/^(@?[a-z\\-]+)\\[(\\w+)\\]$/,L=/-([a-z0-9_])/g,M=function(a,b){return b.toUpperCase()},N=/[\\-+]?[\\d]*\\.?[\\d]+/g,O=/\\{\\?\\}/g,P=/rgba?\\(\\s*-?\\d+\\s*,\\s*-?\\d+\\s*,\\s*-?\\d+/g,Q=/[a-z\\-]+-gradient/g,R=\"\",S=\"\",T=function(){var a=/^(?:O|Moz|webkit|ms)|(?:-(?:o|moz|webkit|ms)-)/;if(j){var b=j(f,null);for(var c in b)if(R=c.match(a)||+c==c&&b[c].match(a))break;if(!R)return void(R=S=\"\");R=R[0],\"-\"===R.slice(0,1)?(S=R,R={\"-webkit-\":\"webkit\",\"-moz-\":\"Moz\",\"-ms-\":\"ms\",\"-o-\":\"O\"}[R]):S=\"-\"+R.toLowerCase()+\"-\"}},U=function(){var b=a.requestAnimationFrame||a[R.toLowerCase()+\"RequestAnimationFrame\"],c=Ha();return(Sa||!b)&&(b=function(b){var d=Ha()-c,e=i.max(0,1e3/60-d);return a.setTimeout(function(){c=Ha(),b()},e)}),b},V=function(){var b=a.cancelAnimationFrame||a[R.toLowerCase()+\"CancelAnimationFrame\"];return(Sa||!b)&&(b=function(b){return a.clearTimeout(b)}),b},W={begin:function(){return 0},end:function(){return 1},linear:function(a){return a},quadratic:function(a){return a*a},cubic:function(a){return a*a*a},swing:function(a){return-i.cos(a*i.PI)/2+.5},sqrt:function(a){return i.sqrt(a)},outCubic:function(a){return i.pow(a-1,3)+1},bounce:function(a){var b;if(.5083>=a)b=3;else if(.8489>=a)b=9;else if(.96208>=a)b=27;else{if(!(.99981>=a))return 1;b=91}return 1-i.abs(3*i.cos(a*b*1.028)/b)}};d.prototype.refresh=function(a){var d,e,f=!1;for(a===c?(f=!0,ia=[],Ra=0,a=b.getElementsByTagName(\"*\")):a.length===c&&(a=[a]),d=0,e=a.length;e>d;d++){var g=a[d],h=g,i=[],j=pa,k=ta,l=!1;if(f&&F in g&&delete g[F],g.attributes){for(var m=0,n=g.attributes.length;n>m;m++){var p=g.attributes[m];if(\"data-anchor-target\"!==p.name)if(\"data-smooth-scrolling\"!==p.name)if(\"data-edge-strategy\"!==p.name)if(\"data-emit-events\"!==p.name){var q=p.name.match(I);if(null!==q){var r={props:p.value,element:g,eventType:p.name.replace(L,M)};i.push(r);var s=q[1];s&&(r.constant=s.substr(1));var t=q[2];/p$/.test(t)?(r.isPercentage=!0,r.offset=(0|t.slice(0,-1))/100):r.offset=0|t;var u=q[3],v=q[4]||u;u&&u!==B&&u!==C?(r.mode=\"relative\",r.anchors=[u,v]):(r.mode=\"absolute\",u===C?r.isEnd=!0:r.isPercentage||(r.offset=r.offset*Ka))}}else l=!0;else k=p.value;else j=\"off\"!==p.value;else if(h=b.querySelector(p.value),null===h)throw'Unable to find anchor target \"'+p.value+'\"'}if(i.length){var w,x,y;!f&&F in g?(y=g[F],w=ia[y].styleAttr,x=ia[y].classAttr):(y=g[F]=Ra++,w=g.style.cssText,x=Da(g)),ia[y]={element:g,styleAttr:w,classAttr:x,anchorTarget:h,keyFrames:i,smoothScrolling:j,edgeStrategy:k,emitEvents:l,lastFrameIndex:-1},Ea(g,[o],[])}}}for(Aa(),d=0,e=a.length;e>d;d++){var z=ia[a[d][F]];z!==c&&(_(z),ba(z))}return ha},d.prototype.relativeToAbsolute=function(a,b,c){var d=e.clientHeight,f=a.getBoundingClientRect(),g=f.top,h=f.bottom-f.top;return b===E?g-=d:b===D&&(g-=d/2),c===E?g+=h:c===D&&(g+=h/2),g+=ha.getScrollTop(),g+.5|0},d.prototype.animateTo=function(a,b){b=b||{};var d=Ha(),e=ha.getScrollTop(),f=b.duration===c?x:b.duration;return oa={startTop:e,topDiff:a-e,targetTop:a,duration:f,startTime:d,endTime:d+f,easing:W[b.easing||w],done:b.done},oa.topDiff||(oa.done&&oa.done.call(ha,!1),oa=c),ha},d.prototype.stopAnimateTo=function(){oa&&oa.done&&oa.done.call(ha,!0),oa=c},d.prototype.isAnimatingTo=function(){return!!oa},d.prototype.isMobile=function(){return Sa},d.prototype.setScrollTop=function(b,c){return sa=c===!0,Sa?Ta=i.min(i.max(b,0),Ja):a.scrollTo(0,b),ha},d.prototype.getScrollTop=function(){return Sa?Ta:a.pageYOffset||e.scrollTop||f.scrollTop||0},d.prototype.getMaxScrollTop=function(){return Ja},d.prototype.on=function(a,b){return ka[a]=b,ha},d.prototype.off=function(a){return delete ka[a],ha},d.prototype.destroy=function(){var a=V();a(va),ya(),Ea(e,[t],[s,u,v]);for(var b=0,d=ia.length;d>b;b++)fa(ia[b].element);e.style.overflow=f.style.overflow=\"\",e.style.height=f.style.height=\"\",ja&&g.setStyle(ja,\"transform\",\"none\"),ha=c,ja=c,ka=c,la=c,Ja=0,Ka=1,ma=c,na=c,La=\"down\",Ma=-1,Oa=0,Pa=0,Qa=!1,oa=c,pa=c,qa=c,ra=c,sa=c,Ra=0,ta=c,Sa=!1,Ta=0,ua=c};var X=function(){var d,g,h,j,o,p,q,r,s,t,u,v;wa(e,[k,l,m,n].join(\" \"),function(a){var e=a.changedTouches[0];for(j=a.target;3===j.nodeType;)j=j.parentNode;switch(o=e.clientY,p=e.clientX,t=a.timeStamp,G.test(j.tagName)||a.preventDefault(),a.type){case k:d&&d.blur(),ha.stopAnimateTo(),d=j,g=q=o,h=p,s=t;break;case l:G.test(j.tagName)&&b.activeElement!==j&&a.preventDefault(),r=o-q,v=t-u,ha.setScrollTop(Ta-r,!0),q=o,u=t;break;default:case m:case n:var f=g-o,w=h-p,x=w*w+f*f;if(49>x){if(!G.test(d.tagName)){d.focus();var y=b.createEvent(\"MouseEvents\");y.initMouseEvent(\"click\",!0,!0,a.view,1,e.screenX,e.screenY,e.clientX,e.clientY,a.ctrlKey,a.altKey,a.shiftKey,a.metaKey,0,null),d.dispatchEvent(y)}return}d=c;var z=r/v;z=i.max(i.min(z,3),-3);var A=i.abs(z/na),B=z*A+.5*na*A*A,C=ha.getScrollTop()-B,D=0;C>Ja?(D=(Ja-C)/B,C=Ja):0>C&&(D=-C/B,C=0),A*=1-D,ha.animateTo(C+.5|0,{easing:\"outCubic\",duration:A})}}),a.scrollTo(0,0),e.style.overflow=f.style.overflow=\"hidden\"},Y=function(){var a,b,c,d,f,g,h,j,k,l,m,n=e.clientHeight,o=Ba();for(j=0,k=ia.length;k>j;j++)for(a=ia[j],b=a.element,c=a.anchorTarget,d=a.keyFrames,f=0,g=d.length;g>f;f++)h=d[f],l=h.offset,m=o[h.constant]||0,h.frame=l,h.isPercentage&&(l*=n,h.frame=l),\"relative\"===h.mode&&(fa(b),h.frame=ha.relativeToAbsolute(c,h.anchors[0],h.anchors[1])-l,fa(b,!0)),h.frame+=m,la&&!h.isEnd&&h.frame>Ja&&(Ja=h.frame);for(Ja=i.max(Ja,Ca()),j=0,k=ia.length;k>j;j++){for(a=ia[j],d=a.keyFrames,f=0,g=d.length;g>f;f++)h=d[f],m=o[h.constant]||0,h.isEnd&&(h.frame=Ja-h.offset+m);a.keyFrames.sort(Ia)}},Z=function(a,b){for(var c=0,d=ia.length;d>c;c++){var e,f,i=ia[c],j=i.element,k=i.smoothScrolling?a:b,l=i.keyFrames,m=l.length,n=l[0],s=l[l.length-1],t=k<n.frame,u=k>s.frame,v=t?n:s,w=i.emitEvents,x=i.lastFrameIndex;if(t||u){if(t&&-1===i.edge||u&&1===i.edge)continue;switch(t?(Ea(j,[p],[r,q]),w&&x>-1&&(za(j,n.eventType,La),i.lastFrameIndex=-1)):(Ea(j,[r],[p,q]),w&&m>x&&(za(j,s.eventType,La),i.lastFrameIndex=m)),i.edge=t?-1:1,i.edgeStrategy){case\"reset\":fa(j);continue;case\"ease\":k=v.frame;break;default:case\"set\":var y=v.props;for(e in y)h.call(y,e)&&(f=ea(y[e].value),0===e.indexOf(\"@\")?j.setAttribute(e.substr(1),f):g.setStyle(j,e,f));continue}}else 0!==i.edge&&(Ea(j,[o,q],[p,r]),i.edge=0);for(var z=0;m-1>z;z++)if(k>=l[z].frame&&k<=l[z+1].frame){var A=l[z],B=l[z+1];for(e in A.props)if(h.call(A.props,e)){var C=(k-A.frame)/(B.frame-A.frame);C=A.props[e].easing(C),f=da(A.props[e].value,B.props[e].value,C),f=ea(f),0===e.indexOf(\"@\")?j.setAttribute(e.substr(1),f):g.setStyle(j,e,f)}w&&x!==z&&(\"down\"===La?za(j,A.eventType,La):za(j,B.eventType,La),i.lastFrameIndex=z);break}}},$=function(){Qa&&(Qa=!1,Aa());var a,b,d=ha.getScrollTop(),e=Ha();if(oa)e>=oa.endTime?(d=oa.targetTop,a=oa.done,oa=c):(b=oa.easing((e-oa.startTime)/oa.duration),d=oa.startTop+b*oa.topDiff|0),ha.setScrollTop(d,!0);else if(!sa){var f=ra.targetTop-d;f&&(ra={startTop:Ma,topDiff:d-Ma,targetTop:d,startTime:Na,endTime:Na+qa}),e<=ra.endTime&&(b=W.sqrt((e-ra.startTime)/qa),d=ra.startTop+b*ra.topDiff|0)}if(sa||Ma!==d){La=d>Ma?\"down\":Ma>d?\"up\":La,sa=!1;var h={curTop:d,lastTop:Ma,maxTop:Ja,direction:La},i=ka.beforerender&&ka.beforerender.call(ha,h);i!==!1&&(Z(d,ha.getScrollTop()),Sa&&ja&&g.setStyle(ja,\"transform\",\"translate(0, \"+-Ta+\"px) \"+ua),Ma=d,ka.render&&ka.render.call(ha,h)),a&&a.call(ha,!1)}Na=e},_=function(a){for(var b=0,c=a.keyFrames.length;c>b;b++){for(var d,e,f,g,h=a.keyFrames[b],i={};null!==(g=J.exec(h.props));)f=g[1],e=g[2],d=f.match(K),null!==d?(f=d[1],d=d[2]):d=w,e=e.indexOf(\"!\")?aa(e):[e.slice(1)],i[f]={value:e,easing:W[d]};h.props=i}},aa=function(a){var b=[];return P.lastIndex=0,a=a.replace(P,function(a){return a.replace(N,function(a){return a/255*100+\"%\"})}),S&&(Q.lastIndex=0,a=a.replace(Q,function(a){return S+a})),a=a.replace(N,function(a){return b.push(+a),\"{?}\"}),b.unshift(a),b},ba=function(a){var b,c,d={};for(b=0,c=a.keyFrames.length;c>b;b++)ca(a.keyFrames[b],d);for(d={},b=a.keyFrames.length-1;b>=0;b--)ca(a.keyFrames[b],d)},ca=function(a,b){var c;for(c in b)h.call(a.props,c)||(a.props[c]=b[c]);for(c in a.props)b[c]=a.props[c]},da=function(a,b,c){var d,e=a.length;if(e!==b.length)throw\"Can't interpolate between \\\"\"+a[0]+'\" and \"'+b[0]+'\"';var f=[a[0]];for(d=1;e>d;d++)f[d]=a[d]+(b[d]-a[d])*c;return f},ea=function(a){var b=1;return O.lastIndex=0,a[0].replace(O,function(){return a[b++]})},fa=function(a,b){a=[].concat(a);for(var c,d,e=0,f=a.length;f>e;e++)d=a[e],c=ia[d[F]],c&&(b?(d.style.cssText=c.dirtyStyleAttr,Ea(d,c.dirtyClassAttr)):(c.dirtyStyleAttr=d.style.cssText,c.dirtyClassAttr=Da(d),d.style.cssText=c.styleAttr,Ea(d,c.classAttr)))},ga=function(){ua=\"translateZ(0)\",g.setStyle(ja,\"transform\",ua);var a=j(ja),b=a.getPropertyValue(\"transform\"),c=a.getPropertyValue(S+\"transform\"),d=b&&\"none\"!==b||c&&\"none\"!==c;d||(ua=\"\")};g.setStyle=function(a,b,c){var d=a.style;if(b=b.replace(L,M).replace(\"-\",\"\"),\"zIndex\"===b)isNaN(c)?d[b]=c:d[b]=\"\"+(0|c);else if(\"float\"===b)d.styleFloat=d.cssFloat=c;else try{R&&(d[R+b.slice(0,1).toUpperCase()+b.slice(1)]=c),d[b]=c}catch(e){}};var ha,ia,ja,ka,la,ma,na,oa,pa,qa,ra,sa,ta,ua,va,wa=g.addEvent=function(b,c,d){var e=function(b){return b=b||a.event,b.target||(b.target=b.srcElement),b.preventDefault||(b.preventDefault=function(){b.returnValue=!1,b.defaultPrevented=!0}),d.call(this,b)};c=c.split(\" \");for(var f,g=0,h=c.length;h>g;g++)f=c[g],b.addEventListener?b.addEventListener(f,d,!1):b.attachEvent(\"on\"+f,e),Ua.push({element:b,name:f,listener:d})},xa=g.removeEvent=function(a,b,c){b=b.split(\" \");for(var d=0,e=b.length;e>d;d++)a.removeEventListener?a.removeEventListener(b[d],c,!1):a.detachEvent(\"on\"+b[d],c)},ya=function(){for(var a,b=0,c=Ua.length;c>b;b++)a=Ua[b],xa(a.element,a.name,a.listener);Ua=[]},za=function(a,b,c){ka.keyframe&&ka.keyframe.call(ha,a,b,c)},Aa=function(){var a=ha.getScrollTop();Ja=0,la&&!Sa&&(f.style.height=\"\"),Y(),la&&!Sa&&(f.style.height=Ja+e.clientHeight+\"px\"),Sa?ha.setScrollTop(i.min(ha.getScrollTop(),Ja)):ha.setScrollTop(a,!0),sa=!0},Ba=function(){var a,b,c=e.clientHeight,d={};for(a in ma)b=ma[a],\"function\"==typeof b?b=b.call(ha):/p$/.test(b)&&(b=b.slice(0,-1)/100*c),d[a]=b;return d},Ca=function(){var a,b=0;return ja&&(b=i.max(ja.offsetHeight,ja.scrollHeight)),a=i.max(b,f.scrollHeight,f.offsetHeight,e.scrollHeight,e.offsetHeight,e.clientHeight),a-e.clientHeight},Da=function(b){var c=\"className\";return a.SVGElement&&b instanceof a.SVGElement&&(b=b[c],c=\"baseVal\"),b[c]},Ea=function(b,d,e){var f=\"className\";if(a.SVGElement&&b instanceof a.SVGElement&&(b=b[f],f=\"baseVal\"),e===c)return void(b[f]=d);for(var g=b[f],h=0,i=e.length;i>h;h++)g=Ga(g).replace(Ga(e[h]),\" \");g=Fa(g);for(var j=0,k=d.length;k>j;j++)-1===Ga(g).indexOf(Ga(d[j]))&&(g+=\" \"+d[j]);b[f]=Fa(g)},Fa=function(a){return a.replace(H,\"\")},Ga=function(a){return\" \"+a+\" \"},Ha=Date.now||function(){return+new Date},Ia=function(a,b){return a.frame-b.frame},Ja=0,Ka=1,La=\"down\",Ma=-1,Na=Ha(),Oa=0,Pa=0,Qa=!1,Ra=0,Sa=!1,Ta=0,Ua=[];\"function\"==typeof define&&define.amd?define([],function(){return g}):\"undefined\"!=typeof module&&module.exports?module.exports=g:a.skrollr=g}(window,document);","source":"timeline/js/skrollr.min.js","raw":"/*! skrollr 0.6.30 (2015-08-12) | Alexander Prinzhorn - https://github.com/Prinzhorn/skrollr | Free to use under terms of MIT license */\n!function(a,b,c){\"use strict\";function d(c){if(e=b.documentElement,f=b.body,T(),ha=this,c=c||{},ma=c.constants||{},c.easing)for(var d in c.easing)W[d]=c.easing[d];ta=c.edgeStrategy||\"set\",ka={beforerender:c.beforerender,render:c.render,keyframe:c.keyframe},la=c.forceHeight!==!1,la&&(Ka=c.scale||1),na=c.mobileDeceleration||y,pa=c.smoothScrolling!==!1,qa=c.smoothScrollingDuration||A,ra={targetTop:ha.getScrollTop()},Sa=(c.mobileCheck||function(){return/Android|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent||navigator.vendor||a.opera)})(),Sa?(ja=b.getElementById(c.skrollrBody||z),ja&&ga(),X(),Ea(e,[s,v],[t])):Ea(e,[s,u],[t]),ha.refresh(),wa(a,\"resize orientationchange\",function(){var a=e.clientWidth,b=e.clientHeight;(b!==Pa||a!==Oa)&&(Pa=b,Oa=a,Qa=!0)});var g=U();return function h(){$(),va=g(h)}(),ha}var e,f,g={get:function(){return ha},init:function(a){return ha||new d(a)},VERSION:\"0.6.30\"},h=Object.prototype.hasOwnProperty,i=a.Math,j=a.getComputedStyle,k=\"touchstart\",l=\"touchmove\",m=\"touchcancel\",n=\"touchend\",o=\"skrollable\",p=o+\"-before\",q=o+\"-between\",r=o+\"-after\",s=\"skrollr\",t=\"no-\"+s,u=s+\"-desktop\",v=s+\"-mobile\",w=\"linear\",x=1e3,y=.004,z=\"skrollr-body\",A=200,B=\"start\",C=\"end\",D=\"center\",E=\"bottom\",F=\"___skrollable_id\",G=/^(?:input|textarea|button|select)$/i,H=/^\\s+|\\s+$/g,I=/^data(?:-(_\\w+))?(?:-?(-?\\d*\\.?\\d+p?))?(?:-?(start|end|top|center|bottom))?(?:-?(top|center|bottom))?$/,J=/\\s*(@?[\\w\\-\\[\\]]+)\\s*:\\s*(.+?)\\s*(?:;|$)/gi,K=/^(@?[a-z\\-]+)\\[(\\w+)\\]$/,L=/-([a-z0-9_])/g,M=function(a,b){return b.toUpperCase()},N=/[\\-+]?[\\d]*\\.?[\\d]+/g,O=/\\{\\?\\}/g,P=/rgba?\\(\\s*-?\\d+\\s*,\\s*-?\\d+\\s*,\\s*-?\\d+/g,Q=/[a-z\\-]+-gradient/g,R=\"\",S=\"\",T=function(){var a=/^(?:O|Moz|webkit|ms)|(?:-(?:o|moz|webkit|ms)-)/;if(j){var b=j(f,null);for(var c in b)if(R=c.match(a)||+c==c&&b[c].match(a))break;if(!R)return void(R=S=\"\");R=R[0],\"-\"===R.slice(0,1)?(S=R,R={\"-webkit-\":\"webkit\",\"-moz-\":\"Moz\",\"-ms-\":\"ms\",\"-o-\":\"O\"}[R]):S=\"-\"+R.toLowerCase()+\"-\"}},U=function(){var b=a.requestAnimationFrame||a[R.toLowerCase()+\"RequestAnimationFrame\"],c=Ha();return(Sa||!b)&&(b=function(b){var d=Ha()-c,e=i.max(0,1e3/60-d);return a.setTimeout(function(){c=Ha(),b()},e)}),b},V=function(){var b=a.cancelAnimationFrame||a[R.toLowerCase()+\"CancelAnimationFrame\"];return(Sa||!b)&&(b=function(b){return a.clearTimeout(b)}),b},W={begin:function(){return 0},end:function(){return 1},linear:function(a){return a},quadratic:function(a){return a*a},cubic:function(a){return a*a*a},swing:function(a){return-i.cos(a*i.PI)/2+.5},sqrt:function(a){return i.sqrt(a)},outCubic:function(a){return i.pow(a-1,3)+1},bounce:function(a){var b;if(.5083>=a)b=3;else if(.8489>=a)b=9;else if(.96208>=a)b=27;else{if(!(.99981>=a))return 1;b=91}return 1-i.abs(3*i.cos(a*b*1.028)/b)}};d.prototype.refresh=function(a){var d,e,f=!1;for(a===c?(f=!0,ia=[],Ra=0,a=b.getElementsByTagName(\"*\")):a.length===c&&(a=[a]),d=0,e=a.length;e>d;d++){var g=a[d],h=g,i=[],j=pa,k=ta,l=!1;if(f&&F in g&&delete g[F],g.attributes){for(var m=0,n=g.attributes.length;n>m;m++){var p=g.attributes[m];if(\"data-anchor-target\"!==p.name)if(\"data-smooth-scrolling\"!==p.name)if(\"data-edge-strategy\"!==p.name)if(\"data-emit-events\"!==p.name){var q=p.name.match(I);if(null!==q){var r={props:p.value,element:g,eventType:p.name.replace(L,M)};i.push(r);var s=q[1];s&&(r.constant=s.substr(1));var t=q[2];/p$/.test(t)?(r.isPercentage=!0,r.offset=(0|t.slice(0,-1))/100):r.offset=0|t;var u=q[3],v=q[4]||u;u&&u!==B&&u!==C?(r.mode=\"relative\",r.anchors=[u,v]):(r.mode=\"absolute\",u===C?r.isEnd=!0:r.isPercentage||(r.offset=r.offset*Ka))}}else l=!0;else k=p.value;else j=\"off\"!==p.value;else if(h=b.querySelector(p.value),null===h)throw'Unable to find anchor target \"'+p.value+'\"'}if(i.length){var w,x,y;!f&&F in g?(y=g[F],w=ia[y].styleAttr,x=ia[y].classAttr):(y=g[F]=Ra++,w=g.style.cssText,x=Da(g)),ia[y]={element:g,styleAttr:w,classAttr:x,anchorTarget:h,keyFrames:i,smoothScrolling:j,edgeStrategy:k,emitEvents:l,lastFrameIndex:-1},Ea(g,[o],[])}}}for(Aa(),d=0,e=a.length;e>d;d++){var z=ia[a[d][F]];z!==c&&(_(z),ba(z))}return ha},d.prototype.relativeToAbsolute=function(a,b,c){var d=e.clientHeight,f=a.getBoundingClientRect(),g=f.top,h=f.bottom-f.top;return b===E?g-=d:b===D&&(g-=d/2),c===E?g+=h:c===D&&(g+=h/2),g+=ha.getScrollTop(),g+.5|0},d.prototype.animateTo=function(a,b){b=b||{};var d=Ha(),e=ha.getScrollTop(),f=b.duration===c?x:b.duration;return oa={startTop:e,topDiff:a-e,targetTop:a,duration:f,startTime:d,endTime:d+f,easing:W[b.easing||w],done:b.done},oa.topDiff||(oa.done&&oa.done.call(ha,!1),oa=c),ha},d.prototype.stopAnimateTo=function(){oa&&oa.done&&oa.done.call(ha,!0),oa=c},d.prototype.isAnimatingTo=function(){return!!oa},d.prototype.isMobile=function(){return Sa},d.prototype.setScrollTop=function(b,c){return sa=c===!0,Sa?Ta=i.min(i.max(b,0),Ja):a.scrollTo(0,b),ha},d.prototype.getScrollTop=function(){return Sa?Ta:a.pageYOffset||e.scrollTop||f.scrollTop||0},d.prototype.getMaxScrollTop=function(){return Ja},d.prototype.on=function(a,b){return ka[a]=b,ha},d.prototype.off=function(a){return delete ka[a],ha},d.prototype.destroy=function(){var a=V();a(va),ya(),Ea(e,[t],[s,u,v]);for(var b=0,d=ia.length;d>b;b++)fa(ia[b].element);e.style.overflow=f.style.overflow=\"\",e.style.height=f.style.height=\"\",ja&&g.setStyle(ja,\"transform\",\"none\"),ha=c,ja=c,ka=c,la=c,Ja=0,Ka=1,ma=c,na=c,La=\"down\",Ma=-1,Oa=0,Pa=0,Qa=!1,oa=c,pa=c,qa=c,ra=c,sa=c,Ra=0,ta=c,Sa=!1,Ta=0,ua=c};var X=function(){var d,g,h,j,o,p,q,r,s,t,u,v;wa(e,[k,l,m,n].join(\" \"),function(a){var e=a.changedTouches[0];for(j=a.target;3===j.nodeType;)j=j.parentNode;switch(o=e.clientY,p=e.clientX,t=a.timeStamp,G.test(j.tagName)||a.preventDefault(),a.type){case k:d&&d.blur(),ha.stopAnimateTo(),d=j,g=q=o,h=p,s=t;break;case l:G.test(j.tagName)&&b.activeElement!==j&&a.preventDefault(),r=o-q,v=t-u,ha.setScrollTop(Ta-r,!0),q=o,u=t;break;default:case m:case n:var f=g-o,w=h-p,x=w*w+f*f;if(49>x){if(!G.test(d.tagName)){d.focus();var y=b.createEvent(\"MouseEvents\");y.initMouseEvent(\"click\",!0,!0,a.view,1,e.screenX,e.screenY,e.clientX,e.clientY,a.ctrlKey,a.altKey,a.shiftKey,a.metaKey,0,null),d.dispatchEvent(y)}return}d=c;var z=r/v;z=i.max(i.min(z,3),-3);var A=i.abs(z/na),B=z*A+.5*na*A*A,C=ha.getScrollTop()-B,D=0;C>Ja?(D=(Ja-C)/B,C=Ja):0>C&&(D=-C/B,C=0),A*=1-D,ha.animateTo(C+.5|0,{easing:\"outCubic\",duration:A})}}),a.scrollTo(0,0),e.style.overflow=f.style.overflow=\"hidden\"},Y=function(){var a,b,c,d,f,g,h,j,k,l,m,n=e.clientHeight,o=Ba();for(j=0,k=ia.length;k>j;j++)for(a=ia[j],b=a.element,c=a.anchorTarget,d=a.keyFrames,f=0,g=d.length;g>f;f++)h=d[f],l=h.offset,m=o[h.constant]||0,h.frame=l,h.isPercentage&&(l*=n,h.frame=l),\"relative\"===h.mode&&(fa(b),h.frame=ha.relativeToAbsolute(c,h.anchors[0],h.anchors[1])-l,fa(b,!0)),h.frame+=m,la&&!h.isEnd&&h.frame>Ja&&(Ja=h.frame);for(Ja=i.max(Ja,Ca()),j=0,k=ia.length;k>j;j++){for(a=ia[j],d=a.keyFrames,f=0,g=d.length;g>f;f++)h=d[f],m=o[h.constant]||0,h.isEnd&&(h.frame=Ja-h.offset+m);a.keyFrames.sort(Ia)}},Z=function(a,b){for(var c=0,d=ia.length;d>c;c++){var e,f,i=ia[c],j=i.element,k=i.smoothScrolling?a:b,l=i.keyFrames,m=l.length,n=l[0],s=l[l.length-1],t=k<n.frame,u=k>s.frame,v=t?n:s,w=i.emitEvents,x=i.lastFrameIndex;if(t||u){if(t&&-1===i.edge||u&&1===i.edge)continue;switch(t?(Ea(j,[p],[r,q]),w&&x>-1&&(za(j,n.eventType,La),i.lastFrameIndex=-1)):(Ea(j,[r],[p,q]),w&&m>x&&(za(j,s.eventType,La),i.lastFrameIndex=m)),i.edge=t?-1:1,i.edgeStrategy){case\"reset\":fa(j);continue;case\"ease\":k=v.frame;break;default:case\"set\":var y=v.props;for(e in y)h.call(y,e)&&(f=ea(y[e].value),0===e.indexOf(\"@\")?j.setAttribute(e.substr(1),f):g.setStyle(j,e,f));continue}}else 0!==i.edge&&(Ea(j,[o,q],[p,r]),i.edge=0);for(var z=0;m-1>z;z++)if(k>=l[z].frame&&k<=l[z+1].frame){var A=l[z],B=l[z+1];for(e in A.props)if(h.call(A.props,e)){var C=(k-A.frame)/(B.frame-A.frame);C=A.props[e].easing(C),f=da(A.props[e].value,B.props[e].value,C),f=ea(f),0===e.indexOf(\"@\")?j.setAttribute(e.substr(1),f):g.setStyle(j,e,f)}w&&x!==z&&(\"down\"===La?za(j,A.eventType,La):za(j,B.eventType,La),i.lastFrameIndex=z);break}}},$=function(){Qa&&(Qa=!1,Aa());var a,b,d=ha.getScrollTop(),e=Ha();if(oa)e>=oa.endTime?(d=oa.targetTop,a=oa.done,oa=c):(b=oa.easing((e-oa.startTime)/oa.duration),d=oa.startTop+b*oa.topDiff|0),ha.setScrollTop(d,!0);else if(!sa){var f=ra.targetTop-d;f&&(ra={startTop:Ma,topDiff:d-Ma,targetTop:d,startTime:Na,endTime:Na+qa}),e<=ra.endTime&&(b=W.sqrt((e-ra.startTime)/qa),d=ra.startTop+b*ra.topDiff|0)}if(sa||Ma!==d){La=d>Ma?\"down\":Ma>d?\"up\":La,sa=!1;var h={curTop:d,lastTop:Ma,maxTop:Ja,direction:La},i=ka.beforerender&&ka.beforerender.call(ha,h);i!==!1&&(Z(d,ha.getScrollTop()),Sa&&ja&&g.setStyle(ja,\"transform\",\"translate(0, \"+-Ta+\"px) \"+ua),Ma=d,ka.render&&ka.render.call(ha,h)),a&&a.call(ha,!1)}Na=e},_=function(a){for(var b=0,c=a.keyFrames.length;c>b;b++){for(var d,e,f,g,h=a.keyFrames[b],i={};null!==(g=J.exec(h.props));)f=g[1],e=g[2],d=f.match(K),null!==d?(f=d[1],d=d[2]):d=w,e=e.indexOf(\"!\")?aa(e):[e.slice(1)],i[f]={value:e,easing:W[d]};h.props=i}},aa=function(a){var b=[];return P.lastIndex=0,a=a.replace(P,function(a){return a.replace(N,function(a){return a/255*100+\"%\"})}),S&&(Q.lastIndex=0,a=a.replace(Q,function(a){return S+a})),a=a.replace(N,function(a){return b.push(+a),\"{?}\"}),b.unshift(a),b},ba=function(a){var b,c,d={};for(b=0,c=a.keyFrames.length;c>b;b++)ca(a.keyFrames[b],d);for(d={},b=a.keyFrames.length-1;b>=0;b--)ca(a.keyFrames[b],d)},ca=function(a,b){var c;for(c in b)h.call(a.props,c)||(a.props[c]=b[c]);for(c in a.props)b[c]=a.props[c]},da=function(a,b,c){var d,e=a.length;if(e!==b.length)throw\"Can't interpolate between \\\"\"+a[0]+'\" and \"'+b[0]+'\"';var f=[a[0]];for(d=1;e>d;d++)f[d]=a[d]+(b[d]-a[d])*c;return f},ea=function(a){var b=1;return O.lastIndex=0,a[0].replace(O,function(){return a[b++]})},fa=function(a,b){a=[].concat(a);for(var c,d,e=0,f=a.length;f>e;e++)d=a[e],c=ia[d[F]],c&&(b?(d.style.cssText=c.dirtyStyleAttr,Ea(d,c.dirtyClassAttr)):(c.dirtyStyleAttr=d.style.cssText,c.dirtyClassAttr=Da(d),d.style.cssText=c.styleAttr,Ea(d,c.classAttr)))},ga=function(){ua=\"translateZ(0)\",g.setStyle(ja,\"transform\",ua);var a=j(ja),b=a.getPropertyValue(\"transform\"),c=a.getPropertyValue(S+\"transform\"),d=b&&\"none\"!==b||c&&\"none\"!==c;d||(ua=\"\")};g.setStyle=function(a,b,c){var d=a.style;if(b=b.replace(L,M).replace(\"-\",\"\"),\"zIndex\"===b)isNaN(c)?d[b]=c:d[b]=\"\"+(0|c);else if(\"float\"===b)d.styleFloat=d.cssFloat=c;else try{R&&(d[R+b.slice(0,1).toUpperCase()+b.slice(1)]=c),d[b]=c}catch(e){}};var ha,ia,ja,ka,la,ma,na,oa,pa,qa,ra,sa,ta,ua,va,wa=g.addEvent=function(b,c,d){var e=function(b){return b=b||a.event,b.target||(b.target=b.srcElement),b.preventDefault||(b.preventDefault=function(){b.returnValue=!1,b.defaultPrevented=!0}),d.call(this,b)};c=c.split(\" \");for(var f,g=0,h=c.length;h>g;g++)f=c[g],b.addEventListener?b.addEventListener(f,d,!1):b.attachEvent(\"on\"+f,e),Ua.push({element:b,name:f,listener:d})},xa=g.removeEvent=function(a,b,c){b=b.split(\" \");for(var d=0,e=b.length;e>d;d++)a.removeEventListener?a.removeEventListener(b[d],c,!1):a.detachEvent(\"on\"+b[d],c)},ya=function(){for(var a,b=0,c=Ua.length;c>b;b++)a=Ua[b],xa(a.element,a.name,a.listener);Ua=[]},za=function(a,b,c){ka.keyframe&&ka.keyframe.call(ha,a,b,c)},Aa=function(){var a=ha.getScrollTop();Ja=0,la&&!Sa&&(f.style.height=\"\"),Y(),la&&!Sa&&(f.style.height=Ja+e.clientHeight+\"px\"),Sa?ha.setScrollTop(i.min(ha.getScrollTop(),Ja)):ha.setScrollTop(a,!0),sa=!0},Ba=function(){var a,b,c=e.clientHeight,d={};for(a in ma)b=ma[a],\"function\"==typeof b?b=b.call(ha):/p$/.test(b)&&(b=b.slice(0,-1)/100*c),d[a]=b;return d},Ca=function(){var a,b=0;return ja&&(b=i.max(ja.offsetHeight,ja.scrollHeight)),a=i.max(b,f.scrollHeight,f.offsetHeight,e.scrollHeight,e.offsetHeight,e.clientHeight),a-e.clientHeight},Da=function(b){var c=\"className\";return a.SVGElement&&b instanceof a.SVGElement&&(b=b[c],c=\"baseVal\"),b[c]},Ea=function(b,d,e){var f=\"className\";if(a.SVGElement&&b instanceof a.SVGElement&&(b=b[f],f=\"baseVal\"),e===c)return void(b[f]=d);for(var g=b[f],h=0,i=e.length;i>h;h++)g=Ga(g).replace(Ga(e[h]),\" \");g=Fa(g);for(var j=0,k=d.length;k>j;j++)-1===Ga(g).indexOf(Ga(d[j]))&&(g+=\" \"+d[j]);b[f]=Fa(g)},Fa=function(a){return a.replace(H,\"\")},Ga=function(a){return\" \"+a+\" \"},Ha=Date.now||function(){return+new Date},Ia=function(a,b){return a.frame-b.frame},Ja=0,Ka=1,La=\"down\",Ma=-1,Na=Ha(),Oa=0,Pa=0,Qa=!1,Ra=0,Sa=!1,Ta=0,Ua=[];\"function\"==typeof define&&define.amd?define([],function(){return g}):\"undefined\"!=typeof module&&module.exports?module.exports=g:a.skrollr=g}(window,document);","date":"2021-11-25T03:28:13.096Z","updated":"2021-11-25T03:28:13.096Z","path":"timeline/js/skrollr.min.js","layout":"false","title":"","comments":1,"_id":"ckwn8bfxk000mtwnf1vum300o","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>/*! skrollr 0.6.30 (2015-08-12) | Alexander Prinzhorn - https://github.com/Prinzhorn/skrollr | Free to use under terms of MIT license */\n!function(a,b,c){\"use strict\";function d(c){if(e=b.documentElement,f=b.body,T(),ha=this,c=c||{},ma=c.constants||{},c.easing)for(var d in c.easing)W[d]=c.easing[d];ta=c.edgeStrategy||\"set\",ka={beforerender:c.beforerender,render:c.render,keyframe:c.keyframe},la=c.forceHeight!==!1,la&&(Ka=c.scale||1),na=c.mobileDeceleration||y,pa=c.smoothScrolling!==!1,qa=c.smoothScrollingDuration||A,ra={targetTop:ha.getScrollTop()},Sa=(c.mobileCheck||function(){return/Android|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent||navigator.vendor||a.opera)})(),Sa?(ja=b.getElementById(c.skrollrBody||z),ja&&ga(),X(),Ea(e,[s,v],[t])):Ea(e,[s,u],[t]),ha.refresh(),wa(a,\"resize orientationchange\",function(){var a=e.clientWidth,b=e.clientHeight;(b!==Pa||a!==Oa)&&(Pa=b,Oa=a,Qa=!0)});var g=U();return function h(){$(),va=g(h)}(),ha}var e,f,g={get:function(){return ha},init:function(a){return ha||new d(a)},VERSION:\"0.6.30\"},h=Object.prototype.hasOwnProperty,i=a.Math,j=a.getComputedStyle,k=\"touchstart\",l=\"touchmove\",m=\"touchcancel\",n=\"touchend\",o=\"skrollable\",p=o+\"-before\",q=o+\"-between\",r=o+\"-after\",s=\"skrollr\",t=\"no-\"+s,u=s+\"-desktop\",v=s+\"-mobile\",w=\"linear\",x=1e3,y=.004,z=\"skrollr-body\",A=200,B=\"start\",C=\"end\",D=\"center\",E=\"bottom\",F=\"___skrollable_id\",G=/^(?:input|textarea|button|select)$/i,H=/^\\s+|\\s+$/g,I=/^data(?:-(_\\w+))?(?:-?(-?\\d*\\.?\\d+p?))?(?:-?(start|end|top|center|bottom))?(?:-?(top|center|bottom))?$/,J=/\\s*(@?[\\w\\-\\[\\]]+)\\s*:\\s*(.+?)\\s*(?:;|$)/gi,K=/^(@?[a-z\\-]+)\\[(\\w+)\\]$/,L=/-([a-z0-9_])/g,M=function(a,b){return b.toUpperCase()},N=/[\\-+]?[\\d]*\\.?[\\d]+/g,O=/\\{\\?\\}/g,P=/rgba?\\(\\s*-?\\d+\\s*,\\s*-?\\d+\\s*,\\s*-?\\d+/g,Q=/[a-z\\-]+-gradient/g,R=\"\",S=\"\",T=function(){var a=/^(?:O|Moz|webkit|ms)|(?:-(?:o|moz|webkit|ms)-)/;if(j){var b=j(f,null);for(var c in b)if(R=c.match(a)||+c==c&&b[c].match(a))break;if(!R)return void(R=S=\"\");R=R[0],\"-\"===R.slice(0,1)?(S=R,R={\"-webkit-\":\"webkit\",\"-moz-\":\"Moz\",\"-ms-\":\"ms\",\"-o-\":\"O\"}[R]):S=\"-\"+R.toLowerCase()+\"-\"}},U=function(){var b=a.requestAnimationFrame||a[R.toLowerCase()+\"RequestAnimationFrame\"],c=Ha();return(Sa||!b)&&(b=function(b){var d=Ha()-c,e=i.max(0,1e3/60-d);return a.setTimeout(function(){c=Ha(),b()},e)}),b},V=function(){var b=a.cancelAnimationFrame||a[R.toLowerCase()+\"CancelAnimationFrame\"];return(Sa||!b)&&(b=function(b){return a.clearTimeout(b)}),b},W={begin:function(){return 0},end:function(){return 1},linear:function(a){return a},quadratic:function(a){return a*a},cubic:function(a){return a*a*a},swing:function(a){return-i.cos(a*i.PI)/2+.5},sqrt:function(a){return i.sqrt(a)},outCubic:function(a){return i.pow(a-1,3)+1},bounce:function(a){var b;if(.5083>=a)b=3;else if(.8489>=a)b=9;else if(.96208>=a)b=27;else{if(!(.99981>=a))return 1;b=91}return 1-i.abs(3*i.cos(a*b*1.028)/b)}};d.prototype.refresh=function(a){var d,e,f=!1;for(a===c?(f=!0,ia=[],Ra=0,a=b.getElementsByTagName(\"*\")):a.length===c&&(a=[a]),d=0,e=a.length;e>d;d++){var g=a[d],h=g,i=[],j=pa,k=ta,l=!1;if(f&&F in g&&delete g[F],g.attributes){for(var m=0,n=g.attributes.length;n>m;m++){var p=g.attributes[m];if(\"data-anchor-target\"!==p.name)if(\"data-smooth-scrolling\"!==p.name)if(\"data-edge-strategy\"!==p.name)if(\"data-emit-events\"!==p.name){var q=p.name.match(I);if(null!==q){var r={props:p.value,element:g,eventType:p.name.replace(L,M)};i.push(r);var s=q[1];s&&(r.constant=s.substr(1));var t=q[2];/p$/.test(t)?(r.isPercentage=!0,r.offset=(0|t.slice(0,-1))/100):r.offset=0|t;var u=q[3],v=q[4]||u;u&&u!==B&&u!==C?(r.mode=\"relative\",r.anchors=[u,v]):(r.mode=\"absolute\",u===C?r.isEnd=!0:r.isPercentage||(r.offset=r.offset*Ka))}}else l=!0;else k=p.value;else j=\"off\"!==p.value;else if(h=b.querySelector(p.value),null===h)throw'Unable to find anchor target \"'+p.value+'\"'}if(i.length){var w,x,y;!f&&F in g?(y=g[F],w=ia[y].styleAttr,x=ia[y].classAttr):(y=g[F]=Ra++,w=g.style.cssText,x=Da(g)),ia[y]={element:g,styleAttr:w,classAttr:x,anchorTarget:h,keyFrames:i,smoothScrolling:j,edgeStrategy:k,emitEvents:l,lastFrameIndex:-1},Ea(g,[o],[])}}}for(Aa(),d=0,e=a.length;e>d;d++){var z=ia[a[d][F]];z!==c&&(_(z),ba(z))}return ha},d.prototype.relativeToAbsolute=function(a,b,c){var d=e.clientHeight,f=a.getBoundingClientRect(),g=f.top,h=f.bottom-f.top;return b===E?g-=d:b===D&&(g-=d/2),c===E?g+=h:c===D&&(g+=h/2),g+=ha.getScrollTop(),g+.5|0},d.prototype.animateTo=function(a,b){b=b||{};var d=Ha(),e=ha.getScrollTop(),f=b.duration===c?x:b.duration;return oa={startTop:e,topDiff:a-e,targetTop:a,duration:f,startTime:d,endTime:d+f,easing:W[b.easing||w],done:b.done},oa.topDiff||(oa.done&&oa.done.call(ha,!1),oa=c),ha},d.prototype.stopAnimateTo=function(){oa&&oa.done&&oa.done.call(ha,!0),oa=c},d.prototype.isAnimatingTo=function(){return!!oa},d.prototype.isMobile=function(){return Sa},d.prototype.setScrollTop=function(b,c){return sa=c===!0,Sa?Ta=i.min(i.max(b,0),Ja):a.scrollTo(0,b),ha},d.prototype.getScrollTop=function(){return Sa?Ta:a.pageYOffset||e.scrollTop||f.scrollTop||0},d.prototype.getMaxScrollTop=function(){return Ja},d.prototype.on=function(a,b){return ka[a]=b,ha},d.prototype.off=function(a){return delete ka[a],ha},d.prototype.destroy=function(){var a=V();a(va),ya(),Ea(e,[t],[s,u,v]);for(var b=0,d=ia.length;d>b;b++)fa(ia[b].element);e.style.overflow=f.style.overflow=\"\",e.style.height=f.style.height=\"\",ja&&g.setStyle(ja,\"transform\",\"none\"),ha=c,ja=c,ka=c,la=c,Ja=0,Ka=1,ma=c,na=c,La=\"down\",Ma=-1,Oa=0,Pa=0,Qa=!1,oa=c,pa=c,qa=c,ra=c,sa=c,Ra=0,ta=c,Sa=!1,Ta=0,ua=c};var X=function(){var d,g,h,j,o,p,q,r,s,t,u,v;wa(e,[k,l,m,n].join(\" \"),function(a){var e=a.changedTouches[0];for(j=a.target;3===j.nodeType;)j=j.parentNode;switch(o=e.clientY,p=e.clientX,t=a.timeStamp,G.test(j.tagName)||a.preventDefault(),a.type){case k:d&&d.blur(),ha.stopAnimateTo(),d=j,g=q=o,h=p,s=t;break;case l:G.test(j.tagName)&&b.activeElement!==j&&a.preventDefault(),r=o-q,v=t-u,ha.setScrollTop(Ta-r,!0),q=o,u=t;break;default:case m:case n:var f=g-o,w=h-p,x=w*w+f*f;if(49>x){if(!G.test(d.tagName)){d.focus();var y=b.createEvent(\"MouseEvents\");y.initMouseEvent(\"click\",!0,!0,a.view,1,e.screenX,e.screenY,e.clientX,e.clientY,a.ctrlKey,a.altKey,a.shiftKey,a.metaKey,0,null),d.dispatchEvent(y)}return}d=c;var z=r/v;z=i.max(i.min(z,3),-3);var A=i.abs(z/na),B=z*A+.5*na*A*A,C=ha.getScrollTop()-B,D=0;C>Ja?(D=(Ja-C)/B,C=Ja):0>C&&(D=-C/B,C=0),A*=1-D,ha.animateTo(C+.5|0,{easing:\"outCubic\",duration:A})}}),a.scrollTo(0,0),e.style.overflow=f.style.overflow=\"hidden\"},Y=function(){var a,b,c,d,f,g,h,j,k,l,m,n=e.clientHeight,o=Ba();for(j=0,k=ia.length;k>j;j++)for(a=ia[j],b=a.element,c=a.anchorTarget,d=a.keyFrames,f=0,g=d.length;g>f;f++)h=d[f],l=h.offset,m=o[h.constant]||0,h.frame=l,h.isPercentage&&(l*=n,h.frame=l),\"relative\"===h.mode&&(fa(b),h.frame=ha.relativeToAbsolute(c,h.anchors[0],h.anchors[1])-l,fa(b,!0)),h.frame+=m,la&&!h.isEnd&&h.frame>Ja&&(Ja=h.frame);for(Ja=i.max(Ja,Ca()),j=0,k=ia.length;k>j;j++){for(a=ia[j],d=a.keyFrames,f=0,g=d.length;g>f;f++)h=d[f],m=o[h.constant]||0,h.isEnd&&(h.frame=Ja-h.offset+m);a.keyFrames.sort(Ia)}},Z=function(a,b){for(var c=0,d=ia.length;d>c;c++){var e,f,i=ia[c],j=i.element,k=i.smoothScrolling?a:b,l=i.keyFrames,m=l.length,n=l[0],s=l[l.length-1],t=k<n.frame,u=k>s.frame,v=t?n:s,w=i.emitEvents,x=i.lastFrameIndex;if(t||u){if(t&&-1===i.edge||u&&1===i.edge)continue;switch(t?(Ea(j,[p],[r,q]),w&&x>-1&&(za(j,n.eventType,La),i.lastFrameIndex=-1)):(Ea(j,[r],[p,q]),w&&m>x&&(za(j,s.eventType,La),i.lastFrameIndex=m)),i.edge=t?-1:1,i.edgeStrategy){case\"reset\":fa(j);continue;case\"ease\":k=v.frame;break;default:case\"set\":var y=v.props;for(e in y)h.call(y,e)&&(f=ea(y[e].value),0===e.indexOf(\"@\")?j.setAttribute(e.substr(1),f):g.setStyle(j,e,f));continue}}else 0!==i.edge&&(Ea(j,[o,q],[p,r]),i.edge=0);for(var z=0;m-1>z;z++)if(k>=l[z].frame&&k<=l[z+1].frame){var A=l[z],B=l[z+1];for(e in A.props)if(h.call(A.props,e)){var C=(k-A.frame)/(B.frame-A.frame);C=A.props[e].easing(C),f=da(A.props[e].value,B.props[e].value,C),f=ea(f),0===e.indexOf(\"@\")?j.setAttribute(e.substr(1),f):g.setStyle(j,e,f)}w&&x!==z&&(\"down\"===La?za(j,A.eventType,La):za(j,B.eventType,La),i.lastFrameIndex=z);break}}},$=function(){Qa&&(Qa=!1,Aa());var a,b,d=ha.getScrollTop(),e=Ha();if(oa)e>=oa.endTime?(d=oa.targetTop,a=oa.done,oa=c):(b=oa.easing((e-oa.startTime)/oa.duration),d=oa.startTop+b*oa.topDiff|0),ha.setScrollTop(d,!0);else if(!sa){var f=ra.targetTop-d;f&&(ra={startTop:Ma,topDiff:d-Ma,targetTop:d,startTime:Na,endTime:Na+qa}),e<=ra.endTime&&(b=W.sqrt((e-ra.startTime)/qa),d=ra.startTop+b*ra.topDiff|0)}if(sa||Ma!==d){La=d>Ma?\"down\":Ma>d?\"up\":La,sa=!1;var h={curTop:d,lastTop:Ma,maxTop:Ja,direction:La},i=ka.beforerender&&ka.beforerender.call(ha,h);i!==!1&&(Z(d,ha.getScrollTop()),Sa&&ja&&g.setStyle(ja,\"transform\",\"translate(0, \"+-Ta+\"px) \"+ua),Ma=d,ka.render&&ka.render.call(ha,h)),a&&a.call(ha,!1)}Na=e},_=function(a){for(var b=0,c=a.keyFrames.length;c>b;b++){for(var d,e,f,g,h=a.keyFrames[b],i={};null!==(g=J.exec(h.props));)f=g[1],e=g[2],d=f.match(K),null!==d?(f=d[1],d=d[2]):d=w,e=e.indexOf(\"!\")?aa(e):[e.slice(1)],i[f]={value:e,easing:W[d]};h.props=i}},aa=function(a){var b=[];return P.lastIndex=0,a=a.replace(P,function(a){return a.replace(N,function(a){return a/255*100+\"%\"})}),S&&(Q.lastIndex=0,a=a.replace(Q,function(a){return S+a})),a=a.replace(N,function(a){return b.push(+a),\"{?}\"}),b.unshift(a),b},ba=function(a){var b,c,d={};for(b=0,c=a.keyFrames.length;c>b;b++)ca(a.keyFrames[b],d);for(d={},b=a.keyFrames.length-1;b>=0;b--)ca(a.keyFrames[b],d)},ca=function(a,b){var c;for(c in b)h.call(a.props,c)||(a.props[c]=b[c]);for(c in a.props)b[c]=a.props[c]},da=function(a,b,c){var d,e=a.length;if(e!==b.length)throw\"Can't interpolate between \\\"\"+a[0]+'\" and \"'+b[0]+'\"';var f=[a[0]];for(d=1;e>d;d++)f[d]=a[d]+(b[d]-a[d])*c;return f},ea=function(a){var b=1;return O.lastIndex=0,a[0].replace(O,function(){return a[b++]})},fa=function(a,b){a=[].concat(a);for(var c,d,e=0,f=a.length;f>e;e++)d=a[e],c=ia[d[F]],c&&(b?(d.style.cssText=c.dirtyStyleAttr,Ea(d,c.dirtyClassAttr)):(c.dirtyStyleAttr=d.style.cssText,c.dirtyClassAttr=Da(d),d.style.cssText=c.styleAttr,Ea(d,c.classAttr)))},ga=function(){ua=\"translateZ(0)\",g.setStyle(ja,\"transform\",ua);var a=j(ja),b=a.getPropertyValue(\"transform\"),c=a.getPropertyValue(S+\"transform\"),d=b&&\"none\"!==b||c&&\"none\"!==c;d||(ua=\"\")};g.setStyle=function(a,b,c){var d=a.style;if(b=b.replace(L,M).replace(\"-\",\"\"),\"zIndex\"===b)isNaN(c)?d[b]=c:d[b]=\"\"+(0|c);else if(\"float\"===b)d.styleFloat=d.cssFloat=c;else try{R&&(d[R+b.slice(0,1).toUpperCase()+b.slice(1)]=c),d[b]=c}catch(e){}};var ha,ia,ja,ka,la,ma,na,oa,pa,qa,ra,sa,ta,ua,va,wa=g.addEvent=function(b,c,d){var e=function(b){return b=b||a.event,b.target||(b.target=b.srcElement),b.preventDefault||(b.preventDefault=function(){b.returnValue=!1,b.defaultPrevented=!0}),d.call(this,b)};c=c.split(\" \");for(var f,g=0,h=c.length;h>g;g++)f=c[g],b.addEventListener?b.addEventListener(f,d,!1):b.attachEvent(\"on\"+f,e),Ua.push({element:b,name:f,listener:d})},xa=g.removeEvent=function(a,b,c){b=b.split(\" \");for(var d=0,e=b.length;e>d;d++)a.removeEventListener?a.removeEventListener(b[d],c,!1):a.detachEvent(\"on\"+b[d],c)},ya=function(){for(var a,b=0,c=Ua.length;c>b;b++)a=Ua[b],xa(a.element,a.name,a.listener);Ua=[]},za=function(a,b,c){ka.keyframe&&ka.keyframe.call(ha,a,b,c)},Aa=function(){var a=ha.getScrollTop();Ja=0,la&&!Sa&&(f.style.height=\"\"),Y(),la&&!Sa&&(f.style.height=Ja+e.clientHeight+\"px\"),Sa?ha.setScrollTop(i.min(ha.getScrollTop(),Ja)):ha.setScrollTop(a,!0),sa=!0},Ba=function(){var a,b,c=e.clientHeight,d={};for(a in ma)b=ma[a],\"function\"==typeof b?b=b.call(ha):/p$/.test(b)&&(b=b.slice(0,-1)/100*c),d[a]=b;return d},Ca=function(){var a,b=0;return ja&&(b=i.max(ja.offsetHeight,ja.scrollHeight)),a=i.max(b,f.scrollHeight,f.offsetHeight,e.scrollHeight,e.offsetHeight,e.clientHeight),a-e.clientHeight},Da=function(b){var c=\"className\";return a.SVGElement&&b instanceof a.SVGElement&&(b=b[c],c=\"baseVal\"),b[c]},Ea=function(b,d,e){var f=\"className\";if(a.SVGElement&&b instanceof a.SVGElement&&(b=b[f],f=\"baseVal\"),e===c)return void(b[f]=d);for(var g=b[f],h=0,i=e.length;i>h;h++)g=Ga(g).replace(Ga(e[h]),\" \");g=Fa(g);for(var j=0,k=d.length;k>j;j++)-1===Ga(g).indexOf(Ga(d[j]))&&(g+=\" \"+d[j]);b[f]=Fa(g)},Fa=function(a){return a.replace(H,\"\")},Ga=function(a){return\" \"+a+\" \"},Ha=Date.now||function(){return+new Date},Ia=function(a,b){return a.frame-b.frame},Ja=0,Ka=1,La=\"down\",Ma=-1,Na=Ha(),Oa=0,Pa=0,Qa=!1,Ra=0,Sa=!1,Ta=0,Ua=[];\"function\"==typeof define&&define.amd?define([],function(){return g}):\"undefined\"!=typeof module&&module.exports?module.exports=g:a.skrollr=g}(window,document);","site":{"data":{}},"excerpt":"","more":"/*! skrollr 0.6.30 (2015-08-12) | Alexander Prinzhorn - https://github.com/Prinzhorn/skrollr | Free to use under terms of MIT license */\n!function(a,b,c){\"use strict\";function d(c){if(e=b.documentElement,f=b.body,T(),ha=this,c=c||{},ma=c.constants||{},c.easing)for(var d in c.easing)W[d]=c.easing[d];ta=c.edgeStrategy||\"set\",ka={beforerender:c.beforerender,render:c.render,keyframe:c.keyframe},la=c.forceHeight!==!1,la&&(Ka=c.scale||1),na=c.mobileDeceleration||y,pa=c.smoothScrolling!==!1,qa=c.smoothScrollingDuration||A,ra={targetTop:ha.getScrollTop()},Sa=(c.mobileCheck||function(){return/Android|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent||navigator.vendor||a.opera)})(),Sa?(ja=b.getElementById(c.skrollrBody||z),ja&&ga(),X(),Ea(e,[s,v],[t])):Ea(e,[s,u],[t]),ha.refresh(),wa(a,\"resize orientationchange\",function(){var a=e.clientWidth,b=e.clientHeight;(b!==Pa||a!==Oa)&&(Pa=b,Oa=a,Qa=!0)});var g=U();return function h(){$(),va=g(h)}(),ha}var e,f,g={get:function(){return ha},init:function(a){return ha||new d(a)},VERSION:\"0.6.30\"},h=Object.prototype.hasOwnProperty,i=a.Math,j=a.getComputedStyle,k=\"touchstart\",l=\"touchmove\",m=\"touchcancel\",n=\"touchend\",o=\"skrollable\",p=o+\"-before\",q=o+\"-between\",r=o+\"-after\",s=\"skrollr\",t=\"no-\"+s,u=s+\"-desktop\",v=s+\"-mobile\",w=\"linear\",x=1e3,y=.004,z=\"skrollr-body\",A=200,B=\"start\",C=\"end\",D=\"center\",E=\"bottom\",F=\"___skrollable_id\",G=/^(?:input|textarea|button|select)$/i,H=/^\\s+|\\s+$/g,I=/^data(?:-(_\\w+))?(?:-?(-?\\d*\\.?\\d+p?))?(?:-?(start|end|top|center|bottom))?(?:-?(top|center|bottom))?$/,J=/\\s*(@?[\\w\\-\\[\\]]+)\\s*:\\s*(.+?)\\s*(?:;|$)/gi,K=/^(@?[a-z\\-]+)\\[(\\w+)\\]$/,L=/-([a-z0-9_])/g,M=function(a,b){return b.toUpperCase()},N=/[\\-+]?[\\d]*\\.?[\\d]+/g,O=/\\{\\?\\}/g,P=/rgba?\\(\\s*-?\\d+\\s*,\\s*-?\\d+\\s*,\\s*-?\\d+/g,Q=/[a-z\\-]+-gradient/g,R=\"\",S=\"\",T=function(){var a=/^(?:O|Moz|webkit|ms)|(?:-(?:o|moz|webkit|ms)-)/;if(j){var b=j(f,null);for(var c in b)if(R=c.match(a)||+c==c&&b[c].match(a))break;if(!R)return void(R=S=\"\");R=R[0],\"-\"===R.slice(0,1)?(S=R,R={\"-webkit-\":\"webkit\",\"-moz-\":\"Moz\",\"-ms-\":\"ms\",\"-o-\":\"O\"}[R]):S=\"-\"+R.toLowerCase()+\"-\"}},U=function(){var b=a.requestAnimationFrame||a[R.toLowerCase()+\"RequestAnimationFrame\"],c=Ha();return(Sa||!b)&&(b=function(b){var d=Ha()-c,e=i.max(0,1e3/60-d);return a.setTimeout(function(){c=Ha(),b()},e)}),b},V=function(){var b=a.cancelAnimationFrame||a[R.toLowerCase()+\"CancelAnimationFrame\"];return(Sa||!b)&&(b=function(b){return a.clearTimeout(b)}),b},W={begin:function(){return 0},end:function(){return 1},linear:function(a){return a},quadratic:function(a){return a*a},cubic:function(a){return a*a*a},swing:function(a){return-i.cos(a*i.PI)/2+.5},sqrt:function(a){return i.sqrt(a)},outCubic:function(a){return i.pow(a-1,3)+1},bounce:function(a){var b;if(.5083>=a)b=3;else if(.8489>=a)b=9;else if(.96208>=a)b=27;else{if(!(.99981>=a))return 1;b=91}return 1-i.abs(3*i.cos(a*b*1.028)/b)}};d.prototype.refresh=function(a){var d,e,f=!1;for(a===c?(f=!0,ia=[],Ra=0,a=b.getElementsByTagName(\"*\")):a.length===c&&(a=[a]),d=0,e=a.length;e>d;d++){var g=a[d],h=g,i=[],j=pa,k=ta,l=!1;if(f&&F in g&&delete g[F],g.attributes){for(var m=0,n=g.attributes.length;n>m;m++){var p=g.attributes[m];if(\"data-anchor-target\"!==p.name)if(\"data-smooth-scrolling\"!==p.name)if(\"data-edge-strategy\"!==p.name)if(\"data-emit-events\"!==p.name){var q=p.name.match(I);if(null!==q){var r={props:p.value,element:g,eventType:p.name.replace(L,M)};i.push(r);var s=q[1];s&&(r.constant=s.substr(1));var t=q[2];/p$/.test(t)?(r.isPercentage=!0,r.offset=(0|t.slice(0,-1))/100):r.offset=0|t;var u=q[3],v=q[4]||u;u&&u!==B&&u!==C?(r.mode=\"relative\",r.anchors=[u,v]):(r.mode=\"absolute\",u===C?r.isEnd=!0:r.isPercentage||(r.offset=r.offset*Ka))}}else l=!0;else k=p.value;else j=\"off\"!==p.value;else if(h=b.querySelector(p.value),null===h)throw'Unable to find anchor target \"'+p.value+'\"'}if(i.length){var w,x,y;!f&&F in g?(y=g[F],w=ia[y].styleAttr,x=ia[y].classAttr):(y=g[F]=Ra++,w=g.style.cssText,x=Da(g)),ia[y]={element:g,styleAttr:w,classAttr:x,anchorTarget:h,keyFrames:i,smoothScrolling:j,edgeStrategy:k,emitEvents:l,lastFrameIndex:-1},Ea(g,[o],[])}}}for(Aa(),d=0,e=a.length;e>d;d++){var z=ia[a[d][F]];z!==c&&(_(z),ba(z))}return ha},d.prototype.relativeToAbsolute=function(a,b,c){var d=e.clientHeight,f=a.getBoundingClientRect(),g=f.top,h=f.bottom-f.top;return b===E?g-=d:b===D&&(g-=d/2),c===E?g+=h:c===D&&(g+=h/2),g+=ha.getScrollTop(),g+.5|0},d.prototype.animateTo=function(a,b){b=b||{};var d=Ha(),e=ha.getScrollTop(),f=b.duration===c?x:b.duration;return oa={startTop:e,topDiff:a-e,targetTop:a,duration:f,startTime:d,endTime:d+f,easing:W[b.easing||w],done:b.done},oa.topDiff||(oa.done&&oa.done.call(ha,!1),oa=c),ha},d.prototype.stopAnimateTo=function(){oa&&oa.done&&oa.done.call(ha,!0),oa=c},d.prototype.isAnimatingTo=function(){return!!oa},d.prototype.isMobile=function(){return Sa},d.prototype.setScrollTop=function(b,c){return sa=c===!0,Sa?Ta=i.min(i.max(b,0),Ja):a.scrollTo(0,b),ha},d.prototype.getScrollTop=function(){return Sa?Ta:a.pageYOffset||e.scrollTop||f.scrollTop||0},d.prototype.getMaxScrollTop=function(){return Ja},d.prototype.on=function(a,b){return ka[a]=b,ha},d.prototype.off=function(a){return delete ka[a],ha},d.prototype.destroy=function(){var a=V();a(va),ya(),Ea(e,[t],[s,u,v]);for(var b=0,d=ia.length;d>b;b++)fa(ia[b].element);e.style.overflow=f.style.overflow=\"\",e.style.height=f.style.height=\"\",ja&&g.setStyle(ja,\"transform\",\"none\"),ha=c,ja=c,ka=c,la=c,Ja=0,Ka=1,ma=c,na=c,La=\"down\",Ma=-1,Oa=0,Pa=0,Qa=!1,oa=c,pa=c,qa=c,ra=c,sa=c,Ra=0,ta=c,Sa=!1,Ta=0,ua=c};var X=function(){var d,g,h,j,o,p,q,r,s,t,u,v;wa(e,[k,l,m,n].join(\" \"),function(a){var e=a.changedTouches[0];for(j=a.target;3===j.nodeType;)j=j.parentNode;switch(o=e.clientY,p=e.clientX,t=a.timeStamp,G.test(j.tagName)||a.preventDefault(),a.type){case k:d&&d.blur(),ha.stopAnimateTo(),d=j,g=q=o,h=p,s=t;break;case l:G.test(j.tagName)&&b.activeElement!==j&&a.preventDefault(),r=o-q,v=t-u,ha.setScrollTop(Ta-r,!0),q=o,u=t;break;default:case m:case n:var f=g-o,w=h-p,x=w*w+f*f;if(49>x){if(!G.test(d.tagName)){d.focus();var y=b.createEvent(\"MouseEvents\");y.initMouseEvent(\"click\",!0,!0,a.view,1,e.screenX,e.screenY,e.clientX,e.clientY,a.ctrlKey,a.altKey,a.shiftKey,a.metaKey,0,null),d.dispatchEvent(y)}return}d=c;var z=r/v;z=i.max(i.min(z,3),-3);var A=i.abs(z/na),B=z*A+.5*na*A*A,C=ha.getScrollTop()-B,D=0;C>Ja?(D=(Ja-C)/B,C=Ja):0>C&&(D=-C/B,C=0),A*=1-D,ha.animateTo(C+.5|0,{easing:\"outCubic\",duration:A})}}),a.scrollTo(0,0),e.style.overflow=f.style.overflow=\"hidden\"},Y=function(){var a,b,c,d,f,g,h,j,k,l,m,n=e.clientHeight,o=Ba();for(j=0,k=ia.length;k>j;j++)for(a=ia[j],b=a.element,c=a.anchorTarget,d=a.keyFrames,f=0,g=d.length;g>f;f++)h=d[f],l=h.offset,m=o[h.constant]||0,h.frame=l,h.isPercentage&&(l*=n,h.frame=l),\"relative\"===h.mode&&(fa(b),h.frame=ha.relativeToAbsolute(c,h.anchors[0],h.anchors[1])-l,fa(b,!0)),h.frame+=m,la&&!h.isEnd&&h.frame>Ja&&(Ja=h.frame);for(Ja=i.max(Ja,Ca()),j=0,k=ia.length;k>j;j++){for(a=ia[j],d=a.keyFrames,f=0,g=d.length;g>f;f++)h=d[f],m=o[h.constant]||0,h.isEnd&&(h.frame=Ja-h.offset+m);a.keyFrames.sort(Ia)}},Z=function(a,b){for(var c=0,d=ia.length;d>c;c++){var e,f,i=ia[c],j=i.element,k=i.smoothScrolling?a:b,l=i.keyFrames,m=l.length,n=l[0],s=l[l.length-1],t=k<n.frame,u=k>s.frame,v=t?n:s,w=i.emitEvents,x=i.lastFrameIndex;if(t||u){if(t&&-1===i.edge||u&&1===i.edge)continue;switch(t?(Ea(j,[p],[r,q]),w&&x>-1&&(za(j,n.eventType,La),i.lastFrameIndex=-1)):(Ea(j,[r],[p,q]),w&&m>x&&(za(j,s.eventType,La),i.lastFrameIndex=m)),i.edge=t?-1:1,i.edgeStrategy){case\"reset\":fa(j);continue;case\"ease\":k=v.frame;break;default:case\"set\":var y=v.props;for(e in y)h.call(y,e)&&(f=ea(y[e].value),0===e.indexOf(\"@\")?j.setAttribute(e.substr(1),f):g.setStyle(j,e,f));continue}}else 0!==i.edge&&(Ea(j,[o,q],[p,r]),i.edge=0);for(var z=0;m-1>z;z++)if(k>=l[z].frame&&k<=l[z+1].frame){var A=l[z],B=l[z+1];for(e in A.props)if(h.call(A.props,e)){var C=(k-A.frame)/(B.frame-A.frame);C=A.props[e].easing(C),f=da(A.props[e].value,B.props[e].value,C),f=ea(f),0===e.indexOf(\"@\")?j.setAttribute(e.substr(1),f):g.setStyle(j,e,f)}w&&x!==z&&(\"down\"===La?za(j,A.eventType,La):za(j,B.eventType,La),i.lastFrameIndex=z);break}}},$=function(){Qa&&(Qa=!1,Aa());var a,b,d=ha.getScrollTop(),e=Ha();if(oa)e>=oa.endTime?(d=oa.targetTop,a=oa.done,oa=c):(b=oa.easing((e-oa.startTime)/oa.duration),d=oa.startTop+b*oa.topDiff|0),ha.setScrollTop(d,!0);else if(!sa){var f=ra.targetTop-d;f&&(ra={startTop:Ma,topDiff:d-Ma,targetTop:d,startTime:Na,endTime:Na+qa}),e<=ra.endTime&&(b=W.sqrt((e-ra.startTime)/qa),d=ra.startTop+b*ra.topDiff|0)}if(sa||Ma!==d){La=d>Ma?\"down\":Ma>d?\"up\":La,sa=!1;var h={curTop:d,lastTop:Ma,maxTop:Ja,direction:La},i=ka.beforerender&&ka.beforerender.call(ha,h);i!==!1&&(Z(d,ha.getScrollTop()),Sa&&ja&&g.setStyle(ja,\"transform\",\"translate(0, \"+-Ta+\"px) \"+ua),Ma=d,ka.render&&ka.render.call(ha,h)),a&&a.call(ha,!1)}Na=e},_=function(a){for(var b=0,c=a.keyFrames.length;c>b;b++){for(var d,e,f,g,h=a.keyFrames[b],i={};null!==(g=J.exec(h.props));)f=g[1],e=g[2],d=f.match(K),null!==d?(f=d[1],d=d[2]):d=w,e=e.indexOf(\"!\")?aa(e):[e.slice(1)],i[f]={value:e,easing:W[d]};h.props=i}},aa=function(a){var b=[];return P.lastIndex=0,a=a.replace(P,function(a){return a.replace(N,function(a){return a/255*100+\"%\"})}),S&&(Q.lastIndex=0,a=a.replace(Q,function(a){return S+a})),a=a.replace(N,function(a){return b.push(+a),\"{?}\"}),b.unshift(a),b},ba=function(a){var b,c,d={};for(b=0,c=a.keyFrames.length;c>b;b++)ca(a.keyFrames[b],d);for(d={},b=a.keyFrames.length-1;b>=0;b--)ca(a.keyFrames[b],d)},ca=function(a,b){var c;for(c in b)h.call(a.props,c)||(a.props[c]=b[c]);for(c in a.props)b[c]=a.props[c]},da=function(a,b,c){var d,e=a.length;if(e!==b.length)throw\"Can't interpolate between \\\"\"+a[0]+'\" and \"'+b[0]+'\"';var f=[a[0]];for(d=1;e>d;d++)f[d]=a[d]+(b[d]-a[d])*c;return f},ea=function(a){var b=1;return O.lastIndex=0,a[0].replace(O,function(){return a[b++]})},fa=function(a,b){a=[].concat(a);for(var c,d,e=0,f=a.length;f>e;e++)d=a[e],c=ia[d[F]],c&&(b?(d.style.cssText=c.dirtyStyleAttr,Ea(d,c.dirtyClassAttr)):(c.dirtyStyleAttr=d.style.cssText,c.dirtyClassAttr=Da(d),d.style.cssText=c.styleAttr,Ea(d,c.classAttr)))},ga=function(){ua=\"translateZ(0)\",g.setStyle(ja,\"transform\",ua);var a=j(ja),b=a.getPropertyValue(\"transform\"),c=a.getPropertyValue(S+\"transform\"),d=b&&\"none\"!==b||c&&\"none\"!==c;d||(ua=\"\")};g.setStyle=function(a,b,c){var d=a.style;if(b=b.replace(L,M).replace(\"-\",\"\"),\"zIndex\"===b)isNaN(c)?d[b]=c:d[b]=\"\"+(0|c);else if(\"float\"===b)d.styleFloat=d.cssFloat=c;else try{R&&(d[R+b.slice(0,1).toUpperCase()+b.slice(1)]=c),d[b]=c}catch(e){}};var ha,ia,ja,ka,la,ma,na,oa,pa,qa,ra,sa,ta,ua,va,wa=g.addEvent=function(b,c,d){var e=function(b){return b=b||a.event,b.target||(b.target=b.srcElement),b.preventDefault||(b.preventDefault=function(){b.returnValue=!1,b.defaultPrevented=!0}),d.call(this,b)};c=c.split(\" \");for(var f,g=0,h=c.length;h>g;g++)f=c[g],b.addEventListener?b.addEventListener(f,d,!1):b.attachEvent(\"on\"+f,e),Ua.push({element:b,name:f,listener:d})},xa=g.removeEvent=function(a,b,c){b=b.split(\" \");for(var d=0,e=b.length;e>d;d++)a.removeEventListener?a.removeEventListener(b[d],c,!1):a.detachEvent(\"on\"+b[d],c)},ya=function(){for(var a,b=0,c=Ua.length;c>b;b++)a=Ua[b],xa(a.element,a.name,a.listener);Ua=[]},za=function(a,b,c){ka.keyframe&&ka.keyframe.call(ha,a,b,c)},Aa=function(){var a=ha.getScrollTop();Ja=0,la&&!Sa&&(f.style.height=\"\"),Y(),la&&!Sa&&(f.style.height=Ja+e.clientHeight+\"px\"),Sa?ha.setScrollTop(i.min(ha.getScrollTop(),Ja)):ha.setScrollTop(a,!0),sa=!0},Ba=function(){var a,b,c=e.clientHeight,d={};for(a in ma)b=ma[a],\"function\"==typeof b?b=b.call(ha):/p$/.test(b)&&(b=b.slice(0,-1)/100*c),d[a]=b;return d},Ca=function(){var a,b=0;return ja&&(b=i.max(ja.offsetHeight,ja.scrollHeight)),a=i.max(b,f.scrollHeight,f.offsetHeight,e.scrollHeight,e.offsetHeight,e.clientHeight),a-e.clientHeight},Da=function(b){var c=\"className\";return a.SVGElement&&b instanceof a.SVGElement&&(b=b[c],c=\"baseVal\"),b[c]},Ea=function(b,d,e){var f=\"className\";if(a.SVGElement&&b instanceof a.SVGElement&&(b=b[f],f=\"baseVal\"),e===c)return void(b[f]=d);for(var g=b[f],h=0,i=e.length;i>h;h++)g=Ga(g).replace(Ga(e[h]),\" \");g=Fa(g);for(var j=0,k=d.length;k>j;j++)-1===Ga(g).indexOf(Ga(d[j]))&&(g+=\" \"+d[j]);b[f]=Fa(g)},Fa=function(a){return a.replace(H,\"\")},Ga=function(a){return\" \"+a+\" \"},Ha=Date.now||function(){return+new Date},Ia=function(a,b){return a.frame-b.frame},Ja=0,Ka=1,La=\"down\",Ma=-1,Na=Ha(),Oa=0,Pa=0,Qa=!1,Ra=0,Sa=!1,Ta=0,Ua=[];\"function\"==typeof define&&define.amd?define([],function(){return g}):\"undefined\"!=typeof module&&module.exports?module.exports=g:a.skrollr=g}(window,document);"},{"_content":"layout: false@import \"https://fonts.useso.com/css?family=Work+Sans:400,300,500\";@import \"https://fonts.useso.com/css?family=Arvo:400,400italic,700\";@import \"https://fonts.googleapis.com/css?family=PT+Serif:400,400italic,700\";@import \"https://fonts.googleapis.com/css?family=Alegreya+Sans:400,300,300italic,400italic,500,500italic,700,700italic\";@font-face{font-family:'FontAwesome';src:url(../fonts/fontawesome/fontawesome-webfont.eot?v=4.5.0);src:url(../fonts/fontawesome/fontawesome-webfont.eot?#iefix&v=4.5.0) format(\"embedded-opentype\"),url(../fonts/fontawesome/fontawesome-webfont.woff2?v=4.5.0) format(\"woff2\"),url(../fonts/fontawesome/fontawesome-webfont.woff?v=4.5.0) format(\"woff\"),url(../fonts/fontawesome/fontawesome-webfont.ttf?v=4.5.0) format(\"truetype\"),url(../fonts/fontawesome/fontawesome-webfont.svg?v=4.5.0#fontawesomeregular) format(\"svg\");font-weight:400;font-style:normal}.fa{display:inline-block;font:normal normal normal 14px/1 FontAwesome;font-size:inherit;text-rendering:auto;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.fa-lg{font-size:1.33333333em;line-height:.75em;vertical-align:-15%}.fa-2x{font-size:2em}.fa-3x{font-size:3em}.fa-4x{font-size:4em}.fa-5x{font-size:5em}.fa-fw{width:1.28571429em;text-align:center}.fa-ul{padding-left:0;margin-left:2.14285714em;list-style-type:none}.fa-ul>li{position:relative}.fa-li{position:absolute;left:-2.14285714em;width:2.14285714em;top:.14285714em;text-align:center}.fa-li.fa-lg{left:-1.85714286em}.fa-border{padding:.2em .25em .15em;border:solid .08em #eee;border-radius:.1em}.fa-pull-left{float:left}.fa-pull-right{float:right}.fa.fa-pull-left{margin-right:.3em}.fa.fa-pull-right{margin-left:.3em}.pull-right{float:right}.pull-left{float:left}.fa.pull-left{margin-right:.3em}.fa.pull-right{margin-left:.3em}.fa-spin{-webkit-animation:fa-spin 2s infinite linear;animation:fa-spin 2s infinite linear}.fa-pulse{-webkit-animation:fa-spin 1s infinite steps(8);animation:fa-spin 1s infinite steps(8)}@-webkit-keyframes fa-spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}@keyframes fa-spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}.fa-rotate-90{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=1);-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg)}.fa-rotate-180{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=2);-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg)}.fa-rotate-270{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=3);-webkit-transform:rotate(270deg);-ms-transform:rotate(270deg);transform:rotate(270deg)}.fa-flip-horizontal{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=0,mirror=1);-webkit-transform:scale(-1,1);-ms-transform:scale(-1,1);transform:scale(-1,1)}.fa-flip-vertical{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=2,mirror=1);-webkit-transform:scale(1,-1);-ms-transform:scale(1,-1);transform:scale(1,-1)}:root .fa-rotate-90,:root .fa-rotate-180,:root .fa-rotate-270,:root .fa-flip-horizontal,:root .fa-flip-vertical{filter:none}.fa-stack{position:relative;display:inline-block;width:2em;height:2em;line-height:2em;vertical-align:middle}.fa-stack-1x,.fa-stack-2x{position:absolute;left:0;width:100%;text-align:center}.fa-stack-1x{line-height:inherit}.fa-stack-2x{font-size:2em}.fa-inverse{color:#fff}.fa-glass:before{content:\"\\f000\"}.fa-music:before{content:\"\\f001\"}.fa-search:before{content:\"\\f002\"}.fa-envelope-o:before{content:\"\\f003\"}.fa-heart:before{content:\"\\f004\"}.fa-star:before{content:\"\\f005\"}.fa-star-o:before{content:\"\\f006\"}.fa-user:before{content:\"\\f007\"}.fa-film:before{content:\"\\f008\"}.fa-th-large:before{content:\"\\f009\"}.fa-th:before{content:\"\\f00a\"}.fa-th-list:before{content:\"\\f00b\"}.fa-check:before{content:\"\\f00c\"}.fa-remove:before,.fa-close:before,.fa-times:before{content:\"\\f00d\"}.fa-search-plus:before{content:\"\\f00e\"}.fa-search-minus:before{content:\"\\f010\"}.fa-power-off:before{content:\"\\f011\"}.fa-signal:before{content:\"\\f012\"}.fa-gear:before,.fa-cog:before{content:\"\\f013\"}.fa-trash-o:before{content:\"\\f014\"}.fa-home:before{content:\"\\f015\"}.fa-file-o:before{content:\"\\f016\"}.fa-clock-o:before{content:\"\\f017\"}.fa-road:before{content:\"\\f018\"}.fa-download:before{content:\"\\f019\"}.fa-arrow-circle-o-down:before{content:\"\\f01a\"}.fa-arrow-circle-o-up:before{content:\"\\f01b\"}.fa-inbox:before{content:\"\\f01c\"}.fa-play-circle-o:before{content:\"\\f01d\"}.fa-rotate-right:before,.fa-repeat:before{content:\"\\f01e\"}.fa-refresh:before{content:\"\\f021\"}.fa-list-alt:before{content:\"\\f022\"}.fa-lock:before{content:\"\\f023\"}.fa-flag:before{content:\"\\f024\"}.fa-headphones:before{content:\"\\f025\"}.fa-volume-off:before{content:\"\\f026\"}.fa-volume-down:before{content:\"\\f027\"}.fa-volume-up:before{content:\"\\f028\"}.fa-qrcode:before{content:\"\\f029\"}.fa-barcode:before{content:\"\\f02a\"}.fa-tag:before{content:\"\\f02b\"}.fa-tags:before{content:\"\\f02c\"}.fa-book:before{content:\"\\f02d\"}.fa-bookmark:before{content:\"\\f02e\"}.fa-print:before{content:\"\\f02f\"}.fa-camera:before{content:\"\\f030\"}.fa-font:before{content:\"\\f031\"}.fa-bold:before{content:\"\\f032\"}.fa-italic:before{content:\"\\f033\"}.fa-text-height:before{content:\"\\f034\"}.fa-text-width:before{content:\"\\f035\"}.fa-align-left:before{content:\"\\f036\"}.fa-align-center:before{content:\"\\f037\"}.fa-align-right:before{content:\"\\f038\"}.fa-align-justify:before{content:\"\\f039\"}.fa-list:before{content:\"\\f03a\"}.fa-dedent:before,.fa-outdent:before{content:\"\\f03b\"}.fa-indent:before{content:\"\\f03c\"}.fa-video-camera:before{content:\"\\f03d\"}.fa-photo:before,.fa-image:before,.fa-picture-o:before{content:\"\\f03e\"}.fa-pencil:before{content:\"\\f040\"}.fa-map-marker:before{content:\"\\f041\"}.fa-adjust:before{content:\"\\f042\"}.fa-tint:before{content:\"\\f043\"}.fa-edit:before,.fa-pencil-square-o:before{content:\"\\f044\"}.fa-share-square-o:before{content:\"\\f045\"}.fa-check-square-o:before{content:\"\\f046\"}.fa-arrows:before{content:\"\\f047\"}.fa-step-backward:before{content:\"\\f048\"}.fa-fast-backward:before{content:\"\\f049\"}.fa-backward:before{content:\"\\f04a\"}.fa-play:before{content:\"\\f04b\"}.fa-pause:before{content:\"\\f04c\"}.fa-stop:before{content:\"\\f04d\"}.fa-forward:before{content:\"\\f04e\"}.fa-fast-forward:before{content:\"\\f050\"}.fa-step-forward:before{content:\"\\f051\"}.fa-eject:before{content:\"\\f052\"}.fa-chevron-left:before{content:\"\\f053\"}.fa-chevron-right:before{content:\"\\f054\"}.fa-plus-circle:before{content:\"\\f055\"}.fa-minus-circle:before{content:\"\\f056\"}.fa-times-circle:before{content:\"\\f057\"}.fa-check-circle:before{content:\"\\f058\"}.fa-question-circle:before{content:\"\\f059\"}.fa-info-circle:before{content:\"\\f05a\"}.fa-crosshairs:before{content:\"\\f05b\"}.fa-times-circle-o:before{content:\"\\f05c\"}.fa-check-circle-o:before{content:\"\\f05d\"}.fa-ban:before{content:\"\\f05e\"}.fa-arrow-left:before{content:\"\\f060\"}.fa-arrow-right:before{content:\"\\f061\"}.fa-arrow-up:before{content:\"\\f062\"}.fa-arrow-down:before{content:\"\\f063\"}.fa-mail-forward:before,.fa-share:before{content:\"\\f064\"}.fa-expand:before{content:\"\\f065\"}.fa-compress:before{content:\"\\f066\"}.fa-plus:before{content:\"\\f067\"}.fa-minus:before{content:\"\\f068\"}.fa-asterisk:before{content:\"\\f069\"}.fa-exclamation-circle:before{content:\"\\f06a\"}.fa-gift:before{content:\"\\f06b\"}.fa-leaf:before{content:\"\\f06c\"}.fa-fire:before{content:\"\\f06d\"}.fa-eye:before{content:\"\\f06e\"}.fa-eye-slash:before{content:\"\\f070\"}.fa-warning:before,.fa-exclamation-triangle:before{content:\"\\f071\"}.fa-plane:before{content:\"\\f072\"}.fa-calendar:before{content:\"\\f073\"}.fa-random:before{content:\"\\f074\"}.fa-comment:before{content:\"\\f075\"}.fa-magnet:before{content:\"\\f076\"}.fa-chevron-up:before{content:\"\\f077\"}.fa-chevron-down:before{content:\"\\f078\"}.fa-retweet:before{content:\"\\f079\"}.fa-shopping-cart:before{content:\"\\f07a\"}.fa-folder:before{content:\"\\f07b\"}.fa-folder-open:before{content:\"\\f07c\"}.fa-arrows-v:before{content:\"\\f07d\"}.fa-arrows-h:before{content:\"\\f07e\"}.fa-bar-chart-o:before,.fa-bar-chart:before{content:\"\\f080\"}.fa-twitter-square:before{content:\"\\f081\"}.fa-facebook-square:before{content:\"\\f082\"}.fa-camera-retro:before{content:\"\\f083\"}.fa-key:before{content:\"\\f084\"}.fa-gears:before,.fa-cogs:before{content:\"\\f085\"}.fa-comments:before{content:\"\\f086\"}.fa-thumbs-o-up:before{content:\"\\f087\"}.fa-thumbs-o-down:before{content:\"\\f088\"}.fa-star-half:before{content:\"\\f089\"}.fa-heart-o:before{content:\"\\f08a\"}.fa-sign-out:before{content:\"\\f08b\"}.fa-linkedin-square:before{content:\"\\f08c\"}.fa-thumb-tack:before{content:\"\\f08d\"}.fa-external-link:before{content:\"\\f08e\"}.fa-sign-in:before{content:\"\\f090\"}.fa-trophy:before{content:\"\\f091\"}.fa-github-square:before{content:\"\\f092\"}.fa-upload:before{content:\"\\f093\"}.fa-lemon-o:before{content:\"\\f094\"}.fa-phone:before{content:\"\\f095\"}.fa-square-o:before{content:\"\\f096\"}.fa-bookmark-o:before{content:\"\\f097\"}.fa-phone-square:before{content:\"\\f098\"}.fa-twitter:before{content:\"\\f099\"}.fa-facebook-f:before,.fa-facebook:before{content:\"\\f09a\"}.fa-github:before{content:\"\\f09b\"}.fa-unlock:before{content:\"\\f09c\"}.fa-credit-card:before{content:\"\\f09d\"}.fa-feed:before,.fa-rss:before{content:\"\\f09e\"}.fa-hdd-o:before{content:\"\\f0a0\"}.fa-bullhorn:before{content:\"\\f0a1\"}.fa-bell:before{content:\"\\f0f3\"}.fa-certificate:before{content:\"\\f0a3\"}.fa-hand-o-right:before{content:\"\\f0a4\"}.fa-hand-o-left:before{content:\"\\f0a5\"}.fa-hand-o-up:before{content:\"\\f0a6\"}.fa-hand-o-down:before{content:\"\\f0a7\"}.fa-arrow-circle-left:before{content:\"\\f0a8\"}.fa-arrow-circle-right:before{content:\"\\f0a9\"}.fa-arrow-circle-up:before{content:\"\\f0aa\"}.fa-arrow-circle-down:before{content:\"\\f0ab\"}.fa-globe:before{content:\"\\f0ac\"}.fa-wrench:before{content:\"\\f0ad\"}.fa-tasks:before{content:\"\\f0ae\"}.fa-filter:before{content:\"\\f0b0\"}.fa-briefcase:before{content:\"\\f0b1\"}.fa-arrows-alt:before{content:\"\\f0b2\"}.fa-group:before,.fa-users:before{content:\"\\f0c0\"}.fa-chain:before,.fa-link:before{content:\"\\f0c1\"}.fa-cloud:before{content:\"\\f0c2\"}.fa-flask:before{content:\"\\f0c3\"}.fa-cut:before,.fa-scissors:before{content:\"\\f0c4\"}.fa-copy:before,.fa-files-o:before{content:\"\\f0c5\"}.fa-paperclip:before{content:\"\\f0c6\"}.fa-save:before,.fa-floppy-o:before{content:\"\\f0c7\"}.fa-square:before{content:\"\\f0c8\"}.fa-navicon:before,.fa-reorder:before,.fa-bars:before{content:\"\\f0c9\"}.fa-list-ul:before{content:\"\\f0ca\"}.fa-list-ol:before{content:\"\\f0cb\"}.fa-strikethrough:before{content:\"\\f0cc\"}.fa-underline:before{content:\"\\f0cd\"}.fa-table:before{content:\"\\f0ce\"}.fa-magic:before{content:\"\\f0d0\"}.fa-truck:before{content:\"\\f0d1\"}.fa-pinterest:before{content:\"\\f0d2\"}.fa-pinterest-square:before{content:\"\\f0d3\"}.fa-google-plus-square:before{content:\"\\f0d4\"}.fa-google-plus:before{content:\"\\f0d5\"}.fa-money:before{content:\"\\f0d6\"}.fa-caret-down:before{content:\"\\f0d7\"}.fa-caret-up:before{content:\"\\f0d8\"}.fa-caret-left:before{content:\"\\f0d9\"}.fa-caret-right:before{content:\"\\f0da\"}.fa-columns:before{content:\"\\f0db\"}.fa-unsorted:before,.fa-sort:before{content:\"\\f0dc\"}.fa-sort-down:before,.fa-sort-desc:before{content:\"\\f0dd\"}.fa-sort-up:before,.fa-sort-asc:before{content:\"\\f0de\"}.fa-envelope:before{content:\"\\f0e0\"}.fa-linkedin:before{content:\"\\f0e1\"}.fa-rotate-left:before,.fa-undo:before{content:\"\\f0e2\"}.fa-legal:before,.fa-gavel:before{content:\"\\f0e3\"}.fa-dashboard:before,.fa-tachometer:before{content:\"\\f0e4\"}.fa-comment-o:before{content:\"\\f0e5\"}.fa-comments-o:before{content:\"\\f0e6\"}.fa-flash:before,.fa-bolt:before{content:\"\\f0e7\"}.fa-sitemap:before{content:\"\\f0e8\"}.fa-umbrella:before{content:\"\\f0e9\"}.fa-paste:before,.fa-clipboard:before{content:\"\\f0ea\"}.fa-lightbulb-o:before{content:\"\\f0eb\"}.fa-exchange:before{content:\"\\f0ec\"}.fa-cloud-download:before{content:\"\\f0ed\"}.fa-cloud-upload:before{content:\"\\f0ee\"}.fa-user-md:before{content:\"\\f0f0\"}.fa-stethoscope:before{content:\"\\f0f1\"}.fa-suitcase:before{content:\"\\f0f2\"}.fa-bell-o:before{content:\"\\f0a2\"}.fa-coffee:before{content:\"\\f0f4\"}.fa-cutlery:before{content:\"\\f0f5\"}.fa-file-text-o:before{content:\"\\f0f6\"}.fa-building-o:before{content:\"\\f0f7\"}.fa-hospital-o:before{content:\"\\f0f8\"}.fa-ambulance:before{content:\"\\f0f9\"}.fa-medkit:before{content:\"\\f0fa\"}.fa-fighter-jet:before{content:\"\\f0fb\"}.fa-beer:before{content:\"\\f0fc\"}.fa-h-square:before{content:\"\\f0fd\"}.fa-plus-square:before{content:\"\\f0fe\"}.fa-angle-double-left:before{content:\"\\f100\"}.fa-angle-double-right:before{content:\"\\f101\"}.fa-angle-double-up:before{content:\"\\f102\"}.fa-angle-double-down:before{content:\"\\f103\"}.fa-angle-left:before{content:\"\\f104\"}.fa-angle-right:before{content:\"\\f105\"}.fa-angle-up:before{content:\"\\f106\"}.fa-angle-down:before{content:\"\\f107\"}.fa-desktop:before{content:\"\\f108\"}.fa-laptop:before{content:\"\\f109\"}.fa-tablet:before{content:\"\\f10a\"}.fa-mobile-phone:before,.fa-mobile:before{content:\"\\f10b\"}.fa-circle-o:before{content:\"\\f10c\"}.fa-quote-left:before{content:\"\\f10d\"}.fa-quote-right:before{content:\"\\f10e\"}.fa-spinner:before{content:\"\\f110\"}.fa-circle:before{content:\"\\f111\"}.fa-mail-reply:before,.fa-reply:before{content:\"\\f112\"}.fa-github-alt:before{content:\"\\f113\"}.fa-folder-o:before{content:\"\\f114\"}.fa-folder-open-o:before{content:\"\\f115\"}.fa-smile-o:before{content:\"\\f118\"}.fa-frown-o:before{content:\"\\f119\"}.fa-meh-o:before{content:\"\\f11a\"}.fa-gamepad:before{content:\"\\f11b\"}.fa-keyboard-o:before{content:\"\\f11c\"}.fa-flag-o:before{content:\"\\f11d\"}.fa-flag-checkered:before{content:\"\\f11e\"}.fa-terminal:before{content:\"\\f120\"}.fa-code:before{content:\"\\f121\"}.fa-mail-reply-all:before,.fa-reply-all:before{content:\"\\f122\"}.fa-star-half-empty:before,.fa-star-half-full:before,.fa-star-half-o:before{content:\"\\f123\"}.fa-location-arrow:before{content:\"\\f124\"}.fa-crop:before{content:\"\\f125\"}.fa-code-fork:before{content:\"\\f126\"}.fa-unlink:before,.fa-chain-broken:before{content:\"\\f127\"}.fa-question:before{content:\"\\f128\"}.fa-info:before{content:\"\\f129\"}.fa-exclamation:before{content:\"\\f12a\"}.fa-superscript:before{content:\"\\f12b\"}.fa-subscript:before{content:\"\\f12c\"}.fa-eraser:before{content:\"\\f12d\"}.fa-puzzle-piece:before{content:\"\\f12e\"}.fa-microphone:before{content:\"\\f130\"}.fa-microphone-slash:before{content:\"\\f131\"}.fa-shield:before{content:\"\\f132\"}.fa-calendar-o:before{content:\"\\f133\"}.fa-fire-extinguisher:before{content:\"\\f134\"}.fa-rocket:before{content:\"\\f135\"}.fa-maxcdn:before{content:\"\\f136\"}.fa-chevron-circle-left:before{content:\"\\f137\"}.fa-chevron-circle-right:before{content:\"\\f138\"}.fa-chevron-circle-up:before{content:\"\\f139\"}.fa-chevron-circle-down:before{content:\"\\f13a\"}.fa-html5:before{content:\"\\f13b\"}.fa-css3:before{content:\"\\f13c\"}.fa-anchor:before{content:\"\\f13d\"}.fa-unlock-alt:before{content:\"\\f13e\"}.fa-bullseye:before{content:\"\\f140\"}.fa-ellipsis-h:before{content:\"\\f141\"}.fa-ellipsis-v:before{content:\"\\f142\"}.fa-rss-square:before{content:\"\\f143\"}.fa-play-circle:before{content:\"\\f144\"}.fa-ticket:before{content:\"\\f145\"}.fa-minus-square:before{content:\"\\f146\"}.fa-minus-square-o:before{content:\"\\f147\"}.fa-level-up:before{content:\"\\f148\"}.fa-level-down:before{content:\"\\f149\"}.fa-check-square:before{content:\"\\f14a\"}.fa-pencil-square:before{content:\"\\f14b\"}.fa-external-link-square:before{content:\"\\f14c\"}.fa-share-square:before{content:\"\\f14d\"}.fa-compass:before{content:\"\\f14e\"}.fa-toggle-down:before,.fa-caret-square-o-down:before{content:\"\\f150\"}.fa-toggle-up:before,.fa-caret-square-o-up:before{content:\"\\f151\"}.fa-toggle-right:before,.fa-caret-square-o-right:before{content:\"\\f152\"}.fa-euro:before,.fa-eur:before{content:\"\\f153\"}.fa-gbp:before{content:\"\\f154\"}.fa-dollar:before,.fa-usd:before{content:\"\\f155\"}.fa-rupee:before,.fa-inr:before{content:\"\\f156\"}.fa-cny:before,.fa-rmb:before,.fa-yen:before,.fa-jpy:before{content:\"\\f157\"}.fa-ruble:before,.fa-rouble:before,.fa-rub:before{content:\"\\f158\"}.fa-won:before,.fa-krw:before{content:\"\\f159\"}.fa-bitcoin:before,.fa-btc:before{content:\"\\f15a\"}.fa-file:before{content:\"\\f15b\"}.fa-file-text:before{content:\"\\f15c\"}.fa-sort-alpha-asc:before{content:\"\\f15d\"}.fa-sort-alpha-desc:before{content:\"\\f15e\"}.fa-sort-amount-asc:before{content:\"\\f160\"}.fa-sort-amount-desc:before{content:\"\\f161\"}.fa-sort-numeric-asc:before{content:\"\\f162\"}.fa-sort-numeric-desc:before{content:\"\\f163\"}.fa-thumbs-up:before{content:\"\\f164\"}.fa-thumbs-down:before{content:\"\\f165\"}.fa-youtube-square:before{content:\"\\f166\"}.fa-youtube:before{content:\"\\f167\"}.fa-xing:before{content:\"\\f168\"}.fa-xing-square:before{content:\"\\f169\"}.fa-youtube-play:before{content:\"\\f16a\"}.fa-dropbox:before{content:\"\\f16b\"}.fa-stack-overflow:before{content:\"\\f16c\"}.fa-instagram:before{content:\"\\f16d\"}.fa-flickr:before{content:\"\\f16e\"}.fa-adn:before{content:\"\\f170\"}.fa-bitbucket:before{content:\"\\f171\"}.fa-bitbucket-square:before{content:\"\\f172\"}.fa-tumblr:before{content:\"\\f173\"}.fa-tumblr-square:before{content:\"\\f174\"}.fa-long-arrow-down:before{content:\"\\f175\"}.fa-long-arrow-up:before{content:\"\\f176\"}.fa-long-arrow-left:before{content:\"\\f177\"}.fa-long-arrow-right:before{content:\"\\f178\"}.fa-apple:before{content:\"\\f179\"}.fa-windows:before{content:\"\\f17a\"}.fa-android:before{content:\"\\f17b\"}.fa-linux:before{content:\"\\f17c\"}.fa-dribbble:before{content:\"\\f17d\"}.fa-skype:before{content:\"\\f17e\"}.fa-foursquare:before{content:\"\\f180\"}.fa-trello:before{content:\"\\f181\"}.fa-female:before{content:\"\\f182\"}.fa-male:before{content:\"\\f183\"}.fa-gittip:before,.fa-gratipay:before{content:\"\\f184\"}.fa-sun-o:before{content:\"\\f185\"}.fa-moon-o:before{content:\"\\f186\"}.fa-archive:before{content:\"\\f187\"}.fa-bug:before{content:\"\\f188\"}.fa-vk:before{content:\"\\f189\"}.fa-weibo:before{content:\"\\f18a\"}.fa-renren:before{content:\"\\f18b\"}.fa-pagelines:before{content:\"\\f18c\"}.fa-stack-exchange:before{content:\"\\f18d\"}.fa-arrow-circle-o-right:before{content:\"\\f18e\"}.fa-arrow-circle-o-left:before{content:\"\\f190\"}.fa-toggle-left:before,.fa-caret-square-o-left:before{content:\"\\f191\"}.fa-dot-circle-o:before{content:\"\\f192\"}.fa-wheelchair:before{content:\"\\f193\"}.fa-vimeo-square:before{content:\"\\f194\"}.fa-turkish-lira:before,.fa-try:before{content:\"\\f195\"}.fa-plus-square-o:before{content:\"\\f196\"}.fa-space-shuttle:before{content:\"\\f197\"}.fa-slack:before{content:\"\\f198\"}.fa-envelope-square:before{content:\"\\f199\"}.fa-wordpress:before{content:\"\\f19a\"}.fa-openid:before{content:\"\\f19b\"}.fa-institution:before,.fa-bank:before,.fa-university:before{content:\"\\f19c\"}.fa-mortar-board:before,.fa-graduation-cap:before{content:\"\\f19d\"}.fa-yahoo:before{content:\"\\f19e\"}.fa-google:before{content:\"\\f1a0\"}.fa-reddit:before{content:\"\\f1a1\"}.fa-reddit-square:before{content:\"\\f1a2\"}.fa-stumbleupon-circle:before{content:\"\\f1a3\"}.fa-stumbleupon:before{content:\"\\f1a4\"}.fa-delicious:before{content:\"\\f1a5\"}.fa-digg:before{content:\"\\f1a6\"}.fa-pied-piper:before{content:\"\\f1a7\"}.fa-pied-piper-alt:before{content:\"\\f1a8\"}.fa-drupal:before{content:\"\\f1a9\"}.fa-joomla:before{content:\"\\f1aa\"}.fa-language:before{content:\"\\f1ab\"}.fa-fax:before{content:\"\\f1ac\"}.fa-building:before{content:\"\\f1ad\"}.fa-child:before{content:\"\\f1ae\"}.fa-paw:before{content:\"\\f1b0\"}.fa-spoon:before{content:\"\\f1b1\"}.fa-cube:before{content:\"\\f1b2\"}.fa-cubes:before{content:\"\\f1b3\"}.fa-behance:before{content:\"\\f1b4\"}.fa-behance-square:before{content:\"\\f1b5\"}.fa-steam:before{content:\"\\f1b6\"}.fa-steam-square:before{content:\"\\f1b7\"}.fa-recycle:before{content:\"\\f1b8\"}.fa-automobile:before,.fa-car:before{content:\"\\f1b9\"}.fa-cab:before,.fa-taxi:before{content:\"\\f1ba\"}.fa-tree:before{content:\"\\f1bb\"}.fa-spotify:before{content:\"\\f1bc\"}.fa-deviantart:before{content:\"\\f1bd\"}.fa-soundcloud:before{content:\"\\f1be\"}.fa-database:before{content:\"\\f1c0\"}.fa-file-pdf-o:before{content:\"\\f1c1\"}.fa-file-word-o:before{content:\"\\f1c2\"}.fa-file-excel-o:before{content:\"\\f1c3\"}.fa-file-powerpoint-o:before{content:\"\\f1c4\"}.fa-file-photo-o:before,.fa-file-picture-o:before,.fa-file-image-o:before{content:\"\\f1c5\"}.fa-file-zip-o:before,.fa-file-archive-o:before{content:\"\\f1c6\"}.fa-file-sound-o:before,.fa-file-audio-o:before{content:\"\\f1c7\"}.fa-file-movie-o:before,.fa-file-video-o:before{content:\"\\f1c8\"}.fa-file-code-o:before{content:\"\\f1c9\"}.fa-vine:before{content:\"\\f1ca\"}.fa-codepen:before{content:\"\\f1cb\"}.fa-jsfiddle:before{content:\"\\f1cc\"}.fa-life-bouy:before,.fa-life-buoy:before,.fa-life-saver:before,.fa-support:before,.fa-life-ring:before{content:\"\\f1cd\"}.fa-circle-o-notch:before{content:\"\\f1ce\"}.fa-ra:before,.fa-rebel:before{content:\"\\f1d0\"}.fa-ge:before,.fa-empire:before{content:\"\\f1d1\"}.fa-git-square:before{content:\"\\f1d2\"}.fa-git:before{content:\"\\f1d3\"}.fa-y-combinator-square:before,.fa-yc-square:before,.fa-hacker-news:before{content:\"\\f1d4\"}.fa-tencent-weibo:before{content:\"\\f1d5\"}.fa-qq:before{content:\"\\f1d6\"}.fa-wechat:before,.fa-weixin:before{content:\"\\f1d7\"}.fa-send:before,.fa-paper-plane:before{content:\"\\f1d8\"}.fa-send-o:before,.fa-paper-plane-o:before{content:\"\\f1d9\"}.fa-history:before{content:\"\\f1da\"}.fa-circle-thin:before{content:\"\\f1db\"}.fa-header:before{content:\"\\f1dc\"}.fa-paragraph:before{content:\"\\f1dd\"}.fa-sliders:before{content:\"\\f1de\"}.fa-share-alt:before{content:\"\\f1e0\"}.fa-share-alt-square:before{content:\"\\f1e1\"}.fa-bomb:before{content:\"\\f1e2\"}.fa-soccer-ball-o:before,.fa-futbol-o:before{content:\"\\f1e3\"}.fa-tty:before{content:\"\\f1e4\"}.fa-binoculars:before{content:\"\\f1e5\"}.fa-plug:before{content:\"\\f1e6\"}.fa-slideshare:before{content:\"\\f1e7\"}.fa-twitch:before{content:\"\\f1e8\"}.fa-yelp:before{content:\"\\f1e9\"}.fa-newspaper-o:before{content:\"\\f1ea\"}.fa-wifi:before{content:\"\\f1eb\"}.fa-calculator:before{content:\"\\f1ec\"}.fa-paypal:before{content:\"\\f1ed\"}.fa-google-wallet:before{content:\"\\f1ee\"}.fa-cc-visa:before{content:\"\\f1f0\"}.fa-cc-mastercard:before{content:\"\\f1f1\"}.fa-cc-discover:before{content:\"\\f1f2\"}.fa-cc-amex:before{content:\"\\f1f3\"}.fa-cc-paypal:before{content:\"\\f1f4\"}.fa-cc-stripe:before{content:\"\\f1f5\"}.fa-bell-slash:before{content:\"\\f1f6\"}.fa-bell-slash-o:before{content:\"\\f1f7\"}.fa-trash:before{content:\"\\f1f8\"}.fa-copyright:before{content:\"\\f1f9\"}.fa-at:before{content:\"\\f1fa\"}.fa-eyedropper:before{content:\"\\f1fb\"}.fa-paint-brush:before{content:\"\\f1fc\"}.fa-birthday-cake:before{content:\"\\f1fd\"}.fa-area-chart:before{content:\"\\f1fe\"}.fa-pie-chart:before{content:\"\\f200\"}.fa-line-chart:before{content:\"\\f201\"}.fa-lastfm:before{content:\"\\f202\"}.fa-lastfm-square:before{content:\"\\f203\"}.fa-toggle-off:before{content:\"\\f204\"}.fa-toggle-on:before{content:\"\\f205\"}.fa-bicycle:before{content:\"\\f206\"}.fa-bus:before{content:\"\\f207\"}.fa-ioxhost:before{content:\"\\f208\"}.fa-angellist:before{content:\"\\f209\"}.fa-cc:before{content:\"\\f20a\"}.fa-shekel:before,.fa-sheqel:before,.fa-ils:before{content:\"\\f20b\"}.fa-meanpath:before{content:\"\\f20c\"}.fa-buysellads:before{content:\"\\f20d\"}.fa-connectdevelop:before{content:\"\\f20e\"}.fa-dashcube:before{content:\"\\f210\"}.fa-forumbee:before{content:\"\\f211\"}.fa-leanpub:before{content:\"\\f212\"}.fa-sellsy:before{content:\"\\f213\"}.fa-shirtsinbulk:before{content:\"\\f214\"}.fa-simplybuilt:before{content:\"\\f215\"}.fa-skyatlas:before{content:\"\\f216\"}.fa-cart-plus:before{content:\"\\f217\"}.fa-cart-arrow-down:before{content:\"\\f218\"}.fa-diamond:before{content:\"\\f219\"}.fa-ship:before{content:\"\\f21a\"}.fa-user-secret:before{content:\"\\f21b\"}.fa-motorcycle:before{content:\"\\f21c\"}.fa-street-view:before{content:\"\\f21d\"}.fa-heartbeat:before{content:\"\\f21e\"}.fa-venus:before{content:\"\\f221\"}.fa-mars:before{content:\"\\f222\"}.fa-mercury:before{content:\"\\f223\"}.fa-intersex:before,.fa-transgender:before{content:\"\\f224\"}.fa-transgender-alt:before{content:\"\\f225\"}.fa-venus-double:before{content:\"\\f226\"}.fa-mars-double:before{content:\"\\f227\"}.fa-venus-mars:before{content:\"\\f228\"}.fa-mars-stroke:before{content:\"\\f229\"}.fa-mars-stroke-v:before{content:\"\\f22a\"}.fa-mars-stroke-h:before{content:\"\\f22b\"}.fa-neuter:before{content:\"\\f22c\"}.fa-genderless:before{content:\"\\f22d\"}.fa-facebook-official:before{content:\"\\f230\"}.fa-pinterest-p:before{content:\"\\f231\"}.fa-whatsapp:before{content:\"\\f232\"}.fa-server:before{content:\"\\f233\"}.fa-user-plus:before{content:\"\\f234\"}.fa-user-times:before{content:\"\\f235\"}.fa-hotel:before,.fa-bed:before{content:\"\\f236\"}.fa-viacoin:before{content:\"\\f237\"}.fa-train:before{content:\"\\f238\"}.fa-subway:before{content:\"\\f239\"}.fa-medium:before{content:\"\\f23a\"}.fa-yc:before,.fa-y-combinator:before{content:\"\\f23b\"}.fa-optin-monster:before{content:\"\\f23c\"}.fa-opencart:before{content:\"\\f23d\"}.fa-expeditedssl:before{content:\"\\f23e\"}.fa-battery-4:before,.fa-battery-full:before{content:\"\\f240\"}.fa-battery-3:before,.fa-battery-three-quarters:before{content:\"\\f241\"}.fa-battery-2:before,.fa-battery-half:before{content:\"\\f242\"}.fa-battery-1:before,.fa-battery-quarter:before{content:\"\\f243\"}.fa-battery-0:before,.fa-battery-empty:before{content:\"\\f244\"}.fa-mouse-pointer:before{content:\"\\f245\"}.fa-i-cursor:before{content:\"\\f246\"}.fa-object-group:before{content:\"\\f247\"}.fa-object-ungroup:before{content:\"\\f248\"}.fa-sticky-note:before{content:\"\\f249\"}.fa-sticky-note-o:before{content:\"\\f24a\"}.fa-cc-jcb:before{content:\"\\f24b\"}.fa-cc-diners-club:before{content:\"\\f24c\"}.fa-clone:before{content:\"\\f24d\"}.fa-balance-scale:before{content:\"\\f24e\"}.fa-hourglass-o:before{content:\"\\f250\"}.fa-hourglass-1:before,.fa-hourglass-start:before{content:\"\\f251\"}.fa-hourglass-2:before,.fa-hourglass-half:before{content:\"\\f252\"}.fa-hourglass-3:before,.fa-hourglass-end:before{content:\"\\f253\"}.fa-hourglass:before{content:\"\\f254\"}.fa-hand-grab-o:before,.fa-hand-rock-o:before{content:\"\\f255\"}.fa-hand-stop-o:before,.fa-hand-paper-o:before{content:\"\\f256\"}.fa-hand-scissors-o:before{content:\"\\f257\"}.fa-hand-lizard-o:before{content:\"\\f258\"}.fa-hand-spock-o:before{content:\"\\f259\"}.fa-hand-pointer-o:before{content:\"\\f25a\"}.fa-hand-peace-o:before{content:\"\\f25b\"}.fa-trademark:before{content:\"\\f25c\"}.fa-registered:before{content:\"\\f25d\"}.fa-creative-commons:before{content:\"\\f25e\"}.fa-gg:before{content:\"\\f260\"}.fa-gg-circle:before{content:\"\\f261\"}.fa-tripadvisor:before{content:\"\\f262\"}.fa-odnoklassniki:before{content:\"\\f263\"}.fa-odnoklassniki-square:before{content:\"\\f264\"}.fa-get-pocket:before{content:\"\\f265\"}.fa-wikipedia-w:before{content:\"\\f266\"}.fa-safari:before{content:\"\\f267\"}.fa-chrome:before{content:\"\\f268\"}.fa-firefox:before{content:\"\\f269\"}.fa-opera:before{content:\"\\f26a\"}.fa-internet-explorer:before{content:\"\\f26b\"}.fa-tv:before,.fa-television:before{content:\"\\f26c\"}.fa-contao:before{content:\"\\f26d\"}.fa-500px:before{content:\"\\f26e\"}.fa-amazon:before{content:\"\\f270\"}.fa-calendar-plus-o:before{content:\"\\f271\"}.fa-calendar-minus-o:before{content:\"\\f272\"}.fa-calendar-times-o:before{content:\"\\f273\"}.fa-calendar-check-o:before{content:\"\\f274\"}.fa-industry:before{content:\"\\f275\"}.fa-map-pin:before{content:\"\\f276\"}.fa-map-signs:before{content:\"\\f277\"}.fa-map-o:before{content:\"\\f278\"}.fa-map:before{content:\"\\f279\"}.fa-commenting:before{content:\"\\f27a\"}.fa-commenting-o:before{content:\"\\f27b\"}.fa-houzz:before{content:\"\\f27c\"}.fa-vimeo:before{content:\"\\f27d\"}.fa-black-tie:before{content:\"\\f27e\"}.fa-fonticons:before{content:\"\\f280\"}.fa-reddit-alien:before{content:\"\\f281\"}.fa-edge:before{content:\"\\f282\"}.fa-credit-card-alt:before{content:\"\\f283\"}.fa-codiepie:before{content:\"\\f284\"}.fa-modx:before{content:\"\\f285\"}.fa-fort-awesome:before{content:\"\\f286\"}.fa-usb:before{content:\"\\f287\"}.fa-product-hunt:before{content:\"\\f288\"}.fa-mixcloud:before{content:\"\\f289\"}.fa-scribd:before{content:\"\\f28a\"}.fa-pause-circle:before{content:\"\\f28b\"}.fa-pause-circle-o:before{content:\"\\f28c\"}.fa-stop-circle:before{content:\"\\f28d\"}.fa-stop-circle-o:before{content:\"\\f28e\"}.fa-shopping-bag:before{content:\"\\f290\"}.fa-shopping-basket:before{content:\"\\f291\"}.fa-hashtag:before{content:\"\\f292\"}.fa-bluetooth:before{content:\"\\f293\"}.fa-bluetooth-b:before{content:\"\\f294\"}.fa-percent:before{content:\"\\f295\"}.custom-bg{background:#EAF0F2}.custom-bg-dark{background:#1C1F23}.jazz-timeline-wrapper,.jazz-timeline-wrapper *{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;padding:0;margin:0}.jazz-timeline-wrapper{width:90%;max-width:1024px;margin:4em auto;font-family:\"Alegreya Sans\",Arial,Helvetica,sans-serif;font-weight:400}.jazz-timeline{padding:20px 0;position:relative}.jazz-timeline:before,.multiline-timeline .timeline-post:before{content:\"\";background-color:#C1C1C1;background-image:-webkit-linear-gradient(top,#EAF0F2 0%,#C1C1C1 8%,#C1C1C1 92%,#EAF0F2 100%);background-image:-moz-linear-gradient(top,#EAF0F2 0%,#C1C1C1 8%,#C1C1C1 92%,#EAF0F2 100%);background-image:-ms-linear-gradient(top,#EAF0F2 0%,#C1C1C1 8%,#C1C1C1 92%,#EAF0F2 100%);*/-webkit-border-radius:2px;-moz-border-radius:2px;border-radius:2px;margin-left:-2px;position:absolute;display:block;height:100%;width:4px;left:50%;top:0}.multiline-timeline .timeline-post:before{background-image:none;-webkit-border-radius:0;-moz-border-radius:0;border-radius:0}.multiline-timeline:before{display:none}.thin-timeline:before,.multiline-timeline.thin-timeline .timeline-post:before{margin-left:-1px;width:2px}.multiline-timeline .timeline-post{position:relative}.jazz-timeline .timeline-post{margin:0;border:0 none;padding:0 60px 5px 0;width:50%}.jazz-timeline .timeline-post:nth-child(even){margin-left:50%;padding:0 0 5px 60px}.jazz-timeline .timeline-post:last-child,.jazz-timeline .timeline-post:nth-child(even):last-child{padding-bottom:0}.jazz-timeline .timeline-post .timeline-meta{left:50%;color:#999;margin:28px 0 0 50px;position:absolute;font-weight:500}.jazz-timeline .timeline-post:nth-child(even) .timeline-meta{left:auto;margin:25px 50px 0 0;text-align:right;right:50%}.jazz-timeline .timeline-post .timeline-meta .meta-details{color:#6A7686}.jazz-timeline .timeline-post .for-large-icons{margin:45px 0 0 50px}.jazz-timeline .timeline-post:nth-child(even) .for-large-icons{margin:45px 50px 0 0}.jazz-timeline.one-sided:before{left:0}.jazz-timeline.one-sided .timeline-post,.jazz-timeline.one-sided .timeline-post:nth-child(even){margin:0;padding:0 0 30px 60px;width:100%}.jazz-timeline.one-sided .timeline-post .timeline-time,.jazz-timeline.one-sided .timeline-post:nth-child(even) .timeline-time{left:0;right:0;margin:0 0 5px;position:relative;text-align:left}.jazz-timeline.one-sided .timeline-post .timeline-icon{left:0;margin:22px 0 0 -35px}.jazz-timeline.one-sided .timeline-post .timeline-meta,.jazz-timeline.one-sided .timeline-post:nth-child(even) .timeline-meta{left:0;right:0;margin:0 0 10px;position:relative;text-align:left}.jazz-timeline .timeline-post .timeline-icon{background:#fff;line-height:70px;position:absolute;text-align:center;margin:22px 0 0 -35px;-webkit-border-radius:40px;-moz-border-radius:40px;border-radius:40px;color:#171717;font-size:18px;height:70px;width:70px;left:50%;z-index:10}.jazz-timeline .timeline-post .timeline-icon .icon-placeholder{line-height:30px;font-weight:500;font-size:13px;padding:5px 0}.jazz-timeline .timeline-post .timeline-icon .icon-placeholder span{display:block;font-family:\"Alegreya Sans\",Arial,Helvetica,sans-serif;line-height:12px;font-weight:700;font-size:30px}.jazz-timeline .timeline-post .timeline-icon .icon-placeholder i{font-size:28px;position:relative;line-height:62px}.jazz-timeline .timeline-post .icon-dot,.jazz-timeline.one-sided .timeline-post .icon-dot{background:#EAF0F2;-webkit-border-radius:20px;-moz-border-radius:20px;border-radius:20px;margin:30px 0 0 -7px;height:14px;width:14px}.jazz-timeline .timeline-post .icon-dot .timeline-bar,.jazz-timeline.one-sided .timeline-post .icon-dot .timeline-bar{height:4px;width:4px;background:#C1C1C1;position:absolute;left:5px;top:5px}.jazz-timeline .timeline-post .icon-dot,.jazz-timeline.one-sided .timeline-post .icon-dot,.jazz-timeline .timeline-post .icon-dot .timeline-bar,.jazz-timeline.one-sided .timeline-post .icon-dot .timeline-bar{-webkit-border-radius:20px;-moz-border-radius:20px;border-radius:20px}.jazz-timeline .timeline-post .icon-dot-full,.jazz-timeline.one-sided .timeline-post .icon-dot-full{background:#C1C1C1;margin:30px 0 0 -7px;-webkit-border-radius:20px;-moz-border-radius:20px;border-radius:20px;height:14px;width:14px}.jazz-timeline .timeline-post .icon-dot-full-white,.jazz-timeline.one-sided .timeline-post .icon-dot-full-white{background:#FFF;margin:30px 0 0 -7px;-webkit-box-shadow:0 0 0 2px rgba(0,0,0,0.2);-moz-box-shadow:0 0 0 2px rgba(0,0,0,0.2);box-shadow:0 0 0 2px rgba(0,0,0,0.2);-webkit-border-radius:20px;-moz-border-radius:20px;border-radius:20px;height:14px;width:14px}.jazz-timeline .timeline-post .icon-dot-full-white .timeline-bar,.jazz-timeline.one-sided .timeline-post .icon-dot-full-white .timeline-bar{height:4px;width:4px;background:#C1C1C1;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;position:absolute;left:5px;top:5px}.jazz-timeline .timeline-post .iconbg-red{background:#F25B5A}.jazz-timeline .timeline-post .iconbg-opal{background:#76BBDA}.jazz-timeline .timeline-post .iconbg-blue{background:#2196F3}.jazz-timeline .timeline-post .iconbg-grey{background:#7E8DA3}.jazz-timeline .timeline-post .iconbg-pink{background:#F282C7}.jazz-timeline .timeline-post .iconbg-black{background:#2F3949}.jazz-timeline .timeline-post .iconbg-green{background:#75CE66}.jazz-timeline .timeline-post .iconbg-brown{background:#E46D2B}.jazz-timeline .timeline-post .iconbg-white{background:#FFF}.jazz-timeline .timeline-post .iconbg-purple{background:#9C27B0}.jazz-timeline .timeline-post .iconbg-indigo{background:#3F51B5}.jazz-timeline .timeline-post .iconbg-orange{background:#F0CA45}.jazz-timeline .timeline-post .iconbg-turqoise{background:#28C0C6}.jazz-timeline .timeline-post .iconbg-red,.jazz-timeline .timeline-post .iconbg-opal,.jazz-timeline .timeline-post .iconbg-blue,.jazz-timeline .timeline-post .iconbg-grey,.jazz-timeline .timeline-post .iconbg-pink,.jazz-timeline .timeline-post .iconbg-green,.jazz-timeline .timeline-post .iconbg-black,.jazz-timeline .timeline-post .iconbg-brown,.jazz-timeline .timeline-post .iconbg-white,.jazz-timeline .timeline-post .iconbg-purple,.jazz-timeline .timeline-post .iconbg-indigo,.jazz-timeline .timeline-post .iconbg-orange,.jazz-timeline .timeline-post .iconbg-turqoise{-webkit-box-shadow:0 0 0 4px white,inset 0 2px 0 rgba(0,0,0,0.15),0 3px 0 4px rgba(0,0,0,0.15);-moz-box-shadow:0 0 0 4px white,inset 0 2px 0 rgba(0,0,0,0.15),0 3px 0 4px rgba(0,0,0,0.15);box-shadow:0 0 0 4px white,inset 0 2px 0 rgba(0,0,0,0.15),0 3px 0 4px rgba(0,0,0,0.15)}.jazz-timeline .timeline-post .icon-color-white{color:#FFF}.jazz-timeline .timeline-post .icon-color-black{color:#000}.jazz-timeline .timeline-post .timeline-content{background:#fff;position:relative;border:1px solid #fff;-webkit-transition:all .4s;-moz-transition:all .4s;transition:all .4s;-webkit-border-radius:5px;-moz-border-radius:5px;border-radius:5px;padding:30px}.jazz-timeline .timeline-post.no-padding .timeline-content{padding:0}.jazz-timeline .timeline-post .timeline-content p{margin:15px 0 10px;line-height:25px;font-size:16px;font-weight:400}.jazz-timeline .timeline-post .timeline-content .content-title{font-size:24px;font-family:\"Alegreya Sans\",Arial,Helvetica,sans-serif;margin:0 0 10px;color:#27ACCE;font-weight:500}.jazz-timeline .timeline-post .timeline-content .content-title span{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.jazz-timeline .timeline-post .timeline-content .content-details{margin:0}.jazz-timeline .timeline-post .timeline-content:before,.jazz-timeline .timeline-post .timeline-content:after{content:\"\";display:block;border:15px solid transparent;border-left-color:#fff;position:absolute;right:-30px;top:26px}.jazz-timeline .timeline-post .timeline-content:after{border:14px solid transparent;border-left-color:#fff;right:-28px;top:27px}.jazz-timeline .timeline-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#fff;left:-30px;right:auto}.jazz-timeline .timeline-post:nth-child(even) .timeline-content:after{border:14px solid transparent;border-right-color:#fff;left:-28px;right:auto}.jazz-timeline.one-sided .timeline-post .timeline-content:after,.jazz-timeline.one-sided .timeline-post .timeline-content:before{border:15px solid transparent;border-right-color:#fff;left:-30px;right:auto}.jazz-timeline.one-sided .timeline-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .timeline-post:nth-child(even) .timeline-content:before{border:14px solid transparent;border-right-color:#fff;left:-28px;right:auto}.jazz-timeline .red-post .timeline-content{background:#F25B5A;border:1px solid #F25B5A;color:#fff}.jazz-timeline .red-post .timeline-content .content-title{color:#fff}.jazz-timeline .red-post .timeline-content:after,.jazz-timeline .red-post .timeline-content:before{border-left-color:#F25B5A}.jazz-timeline .red-post:nth-child(even) .timeline-content:after,.jazz-timeline .red-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .red-post .timeline-content:after,.jazz-timeline.one-sided .red-post .timeline-content:before,.jazz-timeline.one-sided .red-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .red-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#F25B5A}.jazz-timeline .opal-post .timeline-content{background:#76BBDA;border:1px solid #76BBDA;color:#fff}.jazz-timeline .opal-post .timeline-content .content-title{color:#fff}.jazz-timeline .opal-post .timeline-content:after,.jazz-timeline .opal-post .timeline-content:before{border-left-color:#76BBDA}.jazz-timeline .opal-post:nth-child(even) .timeline-content:after,.jazz-timeline .opal-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .opal-post .timeline-content:after,.jazz-timeline.one-sided .opal-post .timeline-content:before,.jazz-timeline.one-sided .opal-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .opal-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#76BBDA}.jazz-timeline .blue-post .timeline-content{background:#2196F3;border:1px solid #2196F3;color:#fff}.jazz-timeline .blue-post .timeline-content .content-title{color:#fff}.jazz-timeline .blue-post .timeline-content:after,.jazz-timeline .blue-post .timeline-content:before{border-left-color:#2196F3}.jazz-timeline .blue-post:nth-child(even) .timeline-content:after,.jazz-timeline .blue-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .blue-post .timeline-content:after,.jazz-timeline.one-sided .blue-post .timeline-content:before,.jazz-timeline.one-sided .blue-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .blue-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#2196F3}.jazz-timeline .grey-post .timeline-content{background:#7E8DA3;border:1px solid #7E8DA3;color:#fff}.jazz-timeline .grey-post .timeline-content .content-title{color:#fff}.jazz-timeline .grey-post .timeline-content:after,.jazz-timeline .grey-post .timeline-content:before{border-left-color:#7E8DA3}.jazz-timeline .grey-post:nth-child(even) .timeline-content:after,.jazz-timeline .grey-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .grey-post .timeline-content:after,.jazz-timeline.one-sided .grey-post .timeline-content:before,.jazz-timeline.one-sided .grey-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .grey-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#7E8DA3}.jazz-timeline .pink-post .timeline-content{background:#F282C7;border:1px solid #F282C7;color:#fff}.jazz-timeline .pink-post .timeline-content .content-title{color:#fff}.jazz-timeline .pink-post .timeline-content:after,.jazz-timeline .pink-post .timeline-content:before{border-left-color:#F282C7}.jazz-timeline .pink-post:nth-child(even) .timeline-content:after,.jazz-timeline .pink-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .pink-post .timeline-content:after,.jazz-timeline.one-sided .pink-post .timeline-content:before,.jazz-timeline.one-sided .pink-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .pink-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#F282C7}.jazz-timeline .green-post .timeline-content{background:#75CE66;border:1px solid #75CE66;color:#fff}.jazz-timeline .green-post .timeline-content .content-title{color:#fff}.jazz-timeline .green-post .timeline-content:after,.jazz-timeline .green-post .timeline-content:before{border-left-color:#75CE66}.jazz-timeline .green-post:nth-child(even) .timeline-content:after,.jazz-timeline .green-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .green-post .timeline-content:after,.jazz-timeline.one-sided .green-post .timeline-content:before,.jazz-timeline.one-sided .green-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .green-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#75CE66}.jazz-timeline .white-post .timeline-content{background:#FFF;border:1px solid #FFF}.jazz-timeline .white-post .timeline-content:after,.jazz-timeline .white-post .timeline-content:before{border-left-color:#FFF}.jazz-timeline .white-post:nth-child(even) .timeline-content:after,.jazz-timeline .white-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .white-post .timeline-content:after,.jazz-timeline.one-sided .white-post .timeline-content:before,.jazz-timeline.one-sided .white-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .white-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#FFF}.jazz-timeline .purple-post .timeline-content{background:#9C27B0;border:1px solid #9C27B0;color:#fff}.jazz-timeline .purple-post .timeline-content .content-title{color:#fff}.jazz-timeline .purple-post .timeline-content:after,.jazz-timeline .purple-post .timeline-content:before{border-left-color:#9C27B0}.jazz-timeline .purple-post:nth-child(even) .timeline-content:after,.jazz-timeline .purple-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .purple-post .timeline-content:after,.jazz-timeline.one-sided .purple-post .timeline-content:before,.jazz-timeline.one-sided .purple-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .purple-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#9C27B0}.jazz-timeline .indigo-post .timeline-content{background:#3F51B5;border:1px solid #3F51B5;color:#fff}.jazz-timeline .indigo-post .timeline-content .content-title{color:#fff}.jazz-timeline .indigo-post .timeline-content:after,.jazz-timeline .indigo-post .timeline-content:before{border-left-color:#3F51B5}.jazz-timeline .indigo-post:nth-child(even) .timeline-content:after,.jazz-timeline .indigo-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .indigo-post .timeline-content:after,.jazz-timeline.one-sided .indigo-post .timeline-content:before,.jazz-timeline.one-sided .indigo-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .indigo-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#3F51B5}.jazz-timeline .orange-post .timeline-content{background:#F0CA45;border:1px solid #F0CA45;color:#fff}.jazz-timeline .orange-post .timeline-content .content-title{color:#fff}.jazz-timeline .orange-post .timeline-content:after,.jazz-timeline .orange-post .timeline-content:before{border-left-color:#F0CA45}.jazz-timeline .orange-post:nth-child(even) .timeline-content:after,.jazz-timeline .orange-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .orange-post .timeline-content:after,.jazz-timeline.one-sided .orange-post .timeline-content:before,.jazz-timeline.one-sided .orange-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .orange-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#F0CA45}.jazz-timeline .turqoise-post .timeline-content{background:#28C0C6;border:1px solid #28C0C6;color:#fff}.jazz-timeline .turqoise-post .timeline-content .content-title{color:#fff}.jazz-timeline .turqoise-post .timeline-content:after,.jazz-timeline .turqoise-post .timeline-content:before{border-left-color:#28C0C6}.jazz-timeline .turqoise-post:nth-child(even) .timeline-content:after,.jazz-timeline .turqoise-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .turqoise-post .timeline-content:after,.jazz-timeline.one-sided .turqoise-post .timeline-content:before,.jazz-timeline.one-sided .turqoise-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .turqoise-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#28C0C6}.jazz-timeline .brown-post .timeline-content{background:#E46D2B;border:1px solid #E46D2B;color:#fff}.jazz-timeline .brown-post .timeline-content .content-title{color:#fff}.jazz-timeline .brown-post .timeline-content:after,.jazz-timeline .brown-post .timeline-content:before{border-left-color:#E46D2B}.jazz-timeline .brown-post:nth-child(even) .timeline-content:after,.jazz-timeline .brown-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .brown-post .timeline-content:after,.jazz-timeline.one-sided .brown-post .timeline-content:before,.jazz-timeline.one-sided .brown-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .brown-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#E46D2B}.jazz-timeline .black-post .timeline-content{background:#2F3949;border:1px solid #2F3949;color:#fff}.jazz-timeline .black-post .timeline-content .content-title{color:#fff}.jazz-timeline .black-post .timeline-content:after,.jazz-timeline .black-post .timeline-content:before{border-left-color:#2F3949}.jazz-timeline .black-post:nth-child(even) .timeline-content:after,.jazz-timeline .black-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .black-post .timeline-content:after,.jazz-timeline.one-sided .black-post .timeline-content:before,.jazz-timeline.one-sided .black-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .black-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#2F3949}.jazz-timeline .light-grey-post .timeline-content{background:#F0F2F4;border:1px solid #F0F2F4;-webkit-border-radius:8px 8px 5px 5px;-moz-border-radius:8px 8px 5px 5px;border-radius:8px 8px 5px 5px;color:#474B51}.jazz-timeline .light-grey-post .timeline-content .content-title{color:#fff;-webkit-border-radius:4px 4px 0 0;-moz-border-radius:4px 4px 0 0;border-radius:4px 4px 0 0}.solid-shadow .timeline-post .timeline-content{-webkit-box-shadow:0 4px rgba(0,0,0,0.2);-moz-box-shadow:0 4px rgba(0,0,0,0.2);box-shadow:0 4px rgba(0,0,0,0.2)}.solid-shadow .timeline-post .timeline-content:before{border:15px solid transparent;border-left-color:rgba(0,0,0,0.2);right:-31px;top:29px}.solid-shadow .timeline-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:rgba(0,0,0,0.2);left:-31px;top:30px}.bordered-timeline .timeline-post .timeline-content{border:1px solid #ccc}.bordered-timeline .timeline-post .timeline-content:before{border:15px solid transparent;border-left-color:#bbb;right:-30px;top:26px}.bordered-timeline .timeline-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#bbb;left:-30px;top:26px}.jazz-timeline.bordered-timeline.one-sided .timeline-post .timeline-content:after,.jazz-timeline.bordered-timeline.one-sided .timeline-post:nth-child(even) .timeline-content:after{border:14px solid transparent;border-right-color:#fff;left:-28px;right:auto}.jazz-timeline.bordered-timeline.one-sided .timeline-post .timeline-content:before,.jazz-timeline.bordered-timeline.one-sided .timeline-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#aaa;left:-30px;top:26px}.dark-timeline:before,.dark-timeline.ultimate-style:before,.jazz-timeline.dark-timeline.one-sided:before{background-color:#32363B;background-image:-webkit-linear-gradient(top,#1C1F23 0%,#32363B 8%,#32363B 92%,#1C1F23 100%);background-image:-moz-linear-gradient(top,#1C1F23 0%,#32363B 8%,#32363B 92%,#1C1F23 100%);background-image:-ms-linear-gradient(top,#1C1F23 0%,#32363B 8%,#32363B 92%,#1C1F23 100%)}.dark-timeline .timeline-post .icon-dot-full,.dark-timeline .timeline-post .icon-dot .timeline-bar,.jazz-timeline.dark-timeline.one-sided .timeline-post .icon-dot-full,.dark-timeline.ultimate-style .timeline-post .icon-dot .timeline-bar,.jazz-timeline.dark-timeline.one-sided .timeline-post .icon-dot .timeline-bar,.dark-timeline.ultimate-style .timeline-post .icon-dot-full-white .timeline-bar,.jazz-timeline.dark-timeline.one-sided .timeline-post .icon-dot-full-white .timeline-bar{background:#32363B}.dark-timeline .timeline-post .icon-dot,.dark-timeline.ultimate-style .timeline-post .icon-dot,.jazz-timeline.dark-timeline.one-sided .timeline-post .icon-dot{background:#1C1F23}.dark-timeline .timeline-post .iconbg-red,.dark-timeline .timeline-post .iconbg-opal,.dark-timeline .timeline-post .iconbg-blue,.dark-timeline .timeline-post .iconbg-grey,.dark-timeline .timeline-post .iconbg-pink,.dark-timeline .timeline-post .iconbg-green,.dark-timeline .timeline-post .iconbg-black,.dark-timeline .timeline-post .iconbg-brown,.dark-timeline .timeline-post .iconbg-white,.dark-timeline .timeline-post .iconbg-purple,.dark-timeline .timeline-post .iconbg-indigo,.dark-timeline .timeline-post .iconbg-orange,.dark-timeline .timeline-post .iconbg-turqoise{-webkit-box-shadow:0 0 0 4px #fff,inset 0 2px 0 rgba(0,0,0,0),0 3px 0 4px rgba(0,0,0,0);-moz-box-shadow:0 0 0 4px #fff,inset 0 2px 0 rgba(0,0,0,0),0 3px 0 4px rgba(0,0,0,0);box-shadow:0 0 0 4px #fff,inset 0 2px 0 rgba(0,0,0,0),0 3px 0 4px rgba(0,0,0,0)}.white-timeline:before,.jazz-timeline.white-timeline.one-sided:before{background-color:#32363B;background-image:-webkit-linear-gradient(top,#FFF 0%,#C1C1C1 8%,#C1C1C1 92%,#FFF 100%);background-image:-moz-linear-gradient(top,#FFF 0%,#C1C1C1 8%,#C1C1C1 92%,#FFF 100%);background-image:-ms-linear-gradient(top,#FFF 0%,#C1C1C1 8%,#C1C1C1 92%,#FFF 100%)}.white-timeline .timeline-post .icon-dot-full,.white-timeline .timeline-post .icon-dot .timeline-bar,.jazz-timeline.white-timeline.one-sided .timeline-post .icon-dot-full,.white-timeline .timeline-post .icon-dot-full-white .timeline-bar,.jazz-timeline.white-timeline.one-sided .timeline-post .icon-dot .timeline-bar,.jazz-timeline.white-timeline.one-sided .timeline-post .icon-dot-full-white .timeline-bar{background:#C1C1C1}.white-timeline .timeline-post .icon-dot,.jazz-timeline.white-timeline.one-sided .timeline-post .icon-dot{background:#FFF}.white-timeline .timeline-post .iconbg-red,.white-timeline .timeline-post .iconbg-opal,.white-timeline .timeline-post .iconbg-blue,.white-timeline .timeline-post .iconbg-grey,.white-timeline .timeline-post .iconbg-pink,.white-timeline .timeline-post .iconbg-green,.white-timeline .timeline-post .iconbg-black,.white-timeline .timeline-post .iconbg-brown,.white-timeline .timeline-post .iconbg-white,.white-timeline .timeline-post .iconbg-purple,.white-timeline .timeline-post .iconbg-indigo,.white-timeline .timeline-post .iconbg-orange,.white-timeline .timeline-post .iconbg-turqoise{-webkit-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0.05),0 0 0 8px rgba(0,0,0,0.2);-moz-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0.05),0 0 0 8px rgba(0,0,0,0.2);box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0.05),0 0 0 8px rgba(0,0,0,0.2)}.ultimate-style .timeline-post .timeline-content{padding:0;border:0}.ultimate-style .timeline-post .timeline-content:before,.ultimate-style .timeline-post .timeline-content:after{display:none}.ultimate-style .timeline-post .timeline-content .content-details{padding:30px;padding-top:20px}.ultimate-style .timeline-post .timeline-content .content-title{margin:0;padding:18px 30px;-webkit-border-radius:5px 5px 0 0;-moz-border-radius:5px 5px 0 0;border-radius:5px 5px 0 0;position:relative}.ultimate-style .timeline-post .red-title{background:#DC4747;color:#fff}.ultimate-style .timeline-post .opal-title{background:#49A7CF;color:#fff}.ultimate-style .timeline-post .blue-title{background:#0D83E3;color:#fff}.ultimate-style .timeline-post .grey-title{background:#697892;color:#fff}.ultimate-style .timeline-post .pink-title{background:#EC4AAF;color:#fff}.ultimate-style .timeline-post .black-title{background:#28313E;color:#fff}.ultimate-style .timeline-post .green-title{background:#4EB83A;color:#fff}.ultimate-style .timeline-post .brown-title{background:#D75E1C;color:#fff}.ultimate-style .timeline-post .white-title{background:#FFF;color:#fff}.ultimate-style .timeline-post .purple-title{background:#872299;color:#fff}.ultimate-style .timeline-post .indigo-title{background:#3848A0;color:#fff}.ultimate-style .timeline-post .orange-title{background:#E6B613;color:#fff}.ultimate-style .timeline-post .turqoise-title{background:#25ACB4;color:#fff}.ultimate-style .timeline-post .timeline-content .content-title:before{content:\"\";display:block;border:15px solid transparent;border-left-color:#fff;position:absolute;right:-24px;top:20px}.ultimate-style .timeline-post:nth-child(even) .timeline-content .content-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .content-title:before{border:15px solid transparent;border-right-color:#fff;left:-24px;right:auto}.ultimate-style .timeline-post .timeline-content .turqoise-title:before{border-left-color:#25ACB4}.ultimate-style .timeline-post:nth-child(even) .timeline-content .turqoise-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .turqoise-title:before{border-right-color:#25ACB4}.ultimate-style .timeline-post .timeline-content .orange-title:before{border-left-color:#E6B613}.ultimate-style .timeline-post:nth-child(even) .timeline-content .orange-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .orange-title:before{border-right-color:#E6B613}.ultimate-style .timeline-post .timeline-content .indigo-title:before{border-left-color:#3848A0}.ultimate-style .timeline-post:nth-child(even) .timeline-content .indigo-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .indigo-title:before{border-right-color:#3848A0}.ultimate-style .timeline-post .timeline-content .purple-title:before{border-left-color:#872299}.ultimate-style .timeline-post:nth-child(even) .timeline-content .purple-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .purple-title:before{border-right-color:#872299}.ultimate-style .timeline-post .timeline-content .white-title:before{border-left-color:#FFF}.ultimate-style .timeline-post:nth-child(even) .timeline-content .white-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .white-title:before{border-right-color:#FFF}.ultimate-style .timeline-post .timeline-content .brown-title:before{border-left-color:#D75E1C}.ultimate-style .timeline-post:nth-child(even) .timeline-content .brown-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .brown-title:before{border-right-color:#D75E1C}.ultimate-style .timeline-post .timeline-content .green-title:before{border-left-color:#4EB83A}.ultimate-style .timeline-post:nth-child(even) .timeline-content .green-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .green-title:before{border-right-color:#4EB83A}.ultimate-style .timeline-post .timeline-content .black-title:before{border-left-color:#28313E}.ultimate-style .timeline-post:nth-child(even) .timeline-content .black-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .black-title:before{border-right-color:#28313E}.ultimate-style .timeline-post .timeline-content .pink-title:before{border-left-color:#EC4AAF}.ultimate-style .timeline-post:nth-child(even) .timeline-content .pink-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .pink-title:before{border-right-color:#EC4AAF}.ultimate-style .timeline-post .timeline-content .grey-title:before{border-left-color:#697892}.ultimate-style .timeline-post:nth-child(even) .timeline-content .grey-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .grey-title:before{border-right-color:#697892}.ultimate-style .timeline-post .timeline-content .blue-title:before{border-left-color:#0D83E3}.ultimate-style .timeline-post:nth-child(even) .timeline-content .blue-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .blue-title:before{border-right-color:#0D83E3}.ultimate-style .timeline-post .timeline-content .opal-title:before{border-left-color:#49A7CF}.ultimate-style .timeline-post:nth-child(even) .timeline-content .opal-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .opal-title:before{border-right-color:#49A7CF}.ultimate-style .timeline-post .timeline-content .red-title:before{border-left-color:#DC4747}.ultimate-style .timeline-post:nth-child(even) .timeline-content .red-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .red-title:before{border-right-color:#DC4747}.multiline-timeline .timeline-post .iconbg-red,.multiline-timeline .timeline-post .iconbg-opal,.multiline-timeline .timeline-post .iconbg-blue,.multiline-timeline .timeline-post .iconbg-grey,.multiline-timeline .timeline-post .iconbg-pink,.multiline-timeline .timeline-post .iconbg-green,.multiline-timeline .timeline-post .iconbg-black,.multiline-timeline .timeline-post .iconbg-brown,.multiline-timeline .timeline-post .iconbg-white,.multiline-timeline .timeline-post .iconbg-purple,.multiline-timeline .timeline-post .iconbg-indigo,.multiline-timeline .timeline-post .iconbg-orange,.multiline-timeline .timeline-post .iconbg-turqoise{-webkit-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0.05),0 0 0 8px #C1C1C1;-moz-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0.05),0 0 0 8px #C1C1C1;box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0.05),0 0 0 8px #C1C1C1}.multiline-timeline .timeline-post:before,.multiline-timeline .timeline-post .timeline-icon,.multiline-timeline .timeline-post .timeline-meta{left:100%}.multiline-timeline.one-sided .timeline-post:before,.multiline-timeline .timeline-post:nth-child(even):before,.multiline-timeline .timeline-post:nth-child(even) .timeline-icon,.multiline-timeline.one-sided .timeline-post:nth-child(even):before{left:0}.multiline-timeline .timeline-post:nth-child(even) .timeline-meta{right:100%}.multiline-timeline .timeline-post .timeline-meta .meta-details{white-space:nowrap}.multiline-timeline .turqoise-trail:before,.multiline-timeline .turqoise-trail .icon-dot-full,.multiline-timeline .turqoise-trail .icon-dot-full-white .timeline-bar,.multiline-timeline.one-sided .timeline-post.turqoise-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.turqoise-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.turqoise-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .turqoise-trail .icon-dot .timeline-bar{background:#28C0C6}.multiline-timeline .turqoise-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.turqoise-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #28C0C6;-moz-box-shadow:0 0 0 2px #28C0C6;box-shadow:0 0 0 2px #28C0C6}.multiline-timeline .turqoise-trail .iconbg-turqoise{-webkit-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #28C0C6;-moz-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #28C0C6;box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #28C0C6}.multiline-timeline .black-trail:before,.multiline-timeline .black-trail .icon-dot-full,.multiline-timeline .black-trail .icon-dot-full-white .timeline-bar,.multiline-timeline.one-sided .timeline-post.black-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.black-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.black-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .black-trail .icon-dot .timeline-bar{background:#2F3949}.multiline-timeline .black-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.black-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #2F3949;-moz-box-shadow:0 0 0 2px #2F3949;box-shadow:0 0 0 2px #2F3949}.multiline-timeline .black-trail .iconbg-black{-webkit-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #2F3949;-moz-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #2F3949;box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #2F3949}.multiline-timeline .brown-trail:before,.multiline-timeline .brown-trail .icon-dot-full,.multiline-timeline .brown-trail .icon-dot-full-white .timeline-bar,.multiline-timeline.one-sided .timeline-post.brown-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.brown-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.brown-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .brown-trail .icon-dot .timeline-bar{background:#E46D2B}.multiline-timeline .brown-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.brown-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #E46D2B;-moz-box-shadow:0 0 0 2px #E46D2B;box-shadow:0 0 0 2px #E46D2B}.multiline-timeline .brown-trail .iconbg-brown{-webkit-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #E46D2B;-moz-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #E46D2B;box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #E46D2B}.multiline-timeline .indigo-trail:before,.multiline-timeline .indigo-trail .icon-dot-full,.multiline-timeline .indigo-trail .icon-dot-full-white .timeline-bar,.multiline-timeline.one-sided .timeline-post.indigo-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.indigo-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.indigo-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .indigo-trail .icon-dot .timeline-bar{background:#3F51B5}.multiline-timeline .indigo-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.indigo-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #3F51B5;-moz-box-shadow:0 0 0 2px #3F51B5;box-shadow:0 0 0 2px #3F51B5}.multiline-timeline .indigo-trail .iconbg-indigo{-webkit-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #3F51B5;-moz-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #3F51B5;box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #3F51B5}.multiline-timeline .purple-trail:before,.multiline-timeline .purple-trail .icon-dot-full,.multiline-timeline .purple-trail .icon-dot-full-white .timeline-bar,.multiline-timeline.one-sided .timeline-post.purple-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.purple-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.purple-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .purple-trail .icon-dot .timeline-bar{background:#9C27B0}.multiline-timeline .purple-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.purple-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #9C27B0;-moz-box-shadow:0 0 0 2px #9C27B0;box-shadow:0 0 0 2px #9C27B0}.multiline-timeline .purple-trail .iconbg-purple{-webkit-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #9C27B0;-moz-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #9C27B0;box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #9C27B0}.multiline-timeline .grey-trail:before,.multiline-timeline .grey-trail .icon-dot-full,.multiline-timeline .grey-trail .icon-dot-full-white .timeline-bar,.multiline-timeline.one-sided .timeline-post.grey-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.grey-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.grey-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .grey-trail .icon-dot .timeline-bar{background:#7E8DA3}.multiline-timeline .grey-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.grey-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #7E8DA3;-moz-box-shadow:0 0 0 2px #7E8DA3;box-shadow:0 0 0 2px #7E8DA3}.multiline-timeline .grey-trail .iconbg-grey{-webkit-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #7E8DA3;-moz-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #7E8DA3;box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #7E8DA3}.multiline-timeline .blue-trail:before,.multiline-timeline .blue-trail .icon-dot-full,.multiline-timeline .blue-trail .icon-dot-full-white .timeline-bar,.multiline-timeline.one-sided .timeline-post.blue-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.blue-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.blue-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .blue-trail .icon-dot .timeline-bar{background:#2196F3}.multiline-timeline .blue-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.blue-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #2196F3;-moz-box-shadow:0 0 0 2px #2196F3;box-shadow:0 0 0 2px #2196F3}.multiline-timeline .blue-trail .iconbg-blue{-webkit-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #2196F3;-moz-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #2196F3;box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #2196F3}.multiline-timeline .red-trail:before,.multiline-timeline .red-trail .icon-dot-full,.multiline-timeline .red-trail .icon-dot-full-white .timeline-bar,.multiline-timeline.one-sided .timeline-post.red-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.red-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.red-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .red-trail .icon-dot .timeline-bar{background:#F25B5A}.multiline-timeline .red-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.red-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #F25B5A;-moz-box-shadow:0 0 0 2px #F25B5A;box-shadow:0 0 0 2px #F25B5A}.multiline-timeline .red-trail .iconbg-red{-webkit-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #F25B5A;-moz-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #F25B5A;box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #F25B5A}.multiline-timeline .orange-trail:before,.multiline-timeline .orange-trail .icon-dot-full,.multiline-timeline .orange-trail .icon-dot-full-white .timeline-bar,.multiline-timeline.one-sided .timeline-post.orange-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.orange-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.orange-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .orange-trail .icon-dot .timeline-bar{background:#F0CA45}.multiline-timeline .orange-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.orange-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #F0CA45;-moz-box-shadow:0 0 0 2px #F0CA45;box-shadow:0 0 0 2px #F0CA45}.multiline-timeline .orange-trail .iconbg-orange{-webkit-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #F0CA45;-moz-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #F0CA45;box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #F0CA45}.multiline-timeline .opal-trail:before,.multiline-timeline .opal-trail .icon-dot-full,.multiline-timeline .opal-trail .icon-dot-full-white .timeline-bar,.multiline-timeline.one-sided .timeline-post.opal-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.opal-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.opal-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .opal-trail .icon-dot .timeline-bar{background:#76BBDA}.multiline-timeline .opal-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.opal-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #76BBDA;-moz-box-shadow:0 0 0 2px #76BBDA;box-shadow:0 0 0 2px #76BBDA}.multiline-timeline .opal-trail .iconbg-opal{-webkit-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #76BBDA;-moz-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #76BBDA;box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #76BBDA}.multiline-timeline .green-trail:before,.multiline-timeline .green-trail .icon-dot-full,.multiline-timeline .green-trail .icon-dot-full-white .timeline-bar,.multiline-timeline.one-sided .timeline-post.green-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.green-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.green-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .green-trail .icon-dot .timeline-bar{background:#75CE66}.multiline-timeline .green-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.green-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #75CE66;-moz-box-shadow:0 0 0 2px #75CE66;box-shadow:0 0 0 2px #75CE66}.multiline-timeline .green-trail .iconbg-green{-webkit-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #75CE66;-moz-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #75CE66;box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #75CE66}.multiline-timeline .pink-trail:before,.multiline-timeline .pink-trail .icon-dot-full,.multiline-timeline .pink-trail .icon-dot-full-white .timeline-bar,.multiline-timeline.one-sided .timeline-post.pink-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.pink-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.pink-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .pink-trail .icon-dot .timeline-bar{background:#F282C7}.multiline-timeline .pink-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.pink-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #F282C7;-moz-box-shadow:0 0 0 2px #F282C7;box-shadow:0 0 0 2px #F282C7}.multiline-timeline .pink-trail .iconbg-pink{-webkit-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #F282C7;-moz-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #F282C7;box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #F282C7}.jazz-timeline .timeline-post .timeline-content .video-box:last-child,.jazz-timeline .timeline-post .timeline-content blockquote:last-child{margin-bottom:0}.jazz-timeline .timeline-post .timeline-content img{max-width:100%;display:block;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}.jazz-timeline .timeline-post .content-details .map{display:block;height:200px;width:100%}.jazz-timeline .timeline-post .content-details .map-wrap{width:240px;overflow:hidden}.jazz-timeline .timeline-post .content-details .map-wrap .map-title{font-size:14px;text-transform:uppercase;line-height:normal;padding-bottom:4px;display:block;color:#27ACCE;width:100%;margin:0}.jazz-timeline .timeline-post .content-details .map-wrap p{clear:both;font-size:14px;display:block;padding-bottom:2px;color:#999;margin:0}.jazz-timeline .timeline-post .content-details .map-wrap .map-info{font-size:12px;margin-top:5px;color:#444}.jazz-timeline .timeline-post .content-details .map-wrap .map-info i{margin-right:5px;font-size:14px}.jazz-timeline .timeline-post .content-details .map,.jazz-timeline .timeline-post .content-details .media-container{margin-top:10px;border:5px solid #fff;-webkit-box-shadow:0 0 4px rgba(0,0,0,0.3);-moz-box-shadow:0 0 4px rgba(0,0,0,0.3);box-shadow:0 0 4px rgba(0,0,0,0.3)}.jazz-timeline .timeline-post .content-details .media-box{float:none;clear:both;width:100%;position:relative;padding-bottom:56.25%;padding-top:25px;height:0}.jazz-timeline .timeline-post .content-details .media-box iframe,.jazz-timeline .timeline-post .content-details .media-box object,.jazz-timeline .timeline-post .content-details .media-box embed,.jazz-timeline .timeline-post .content-details .media-box video{position:absolute;width:100%!important;height:100%!important;border:0;left:0;top:0}.jazz-timeline .timeline-post .content-details .audio-box iframe{width:100%!important;height:100%!important;display:block;margin:0;border:0}@media (max-width: 860px){.jazz-timeline:before,.multiline-timeline .timeline-post:before{left:16px}.jazz-timeline .timeline-post,.jazz-timeline .timeline-post:nth-child(even){margin:0;padding:0 0 30px 60px;width:100%}.jazz-timeline .timeline-post .timeline-meta,.jazz-timeline .timeline-post:nth-child(even) .timeline-meta{left:0;right:0;margin:0 0 5px;position:relative;text-align:left}.jazz-timeline .timeline-post .timeline-icon{left:0;margin:22px 0 0}.jazz-timeline .timeline-post .timeline-content:before,.jazz-timeline .timeline-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#fff;left:-30px;right:auto}.jazz-timeline .timeline-post .timeline-content:after,.jazz-timeline .timeline-post:nth-child(even) .timeline-content:after{border:14px solid transparent;border-right-color:#fff;left:-28px;right:auto}.jazz-timeline .red-post .timeline-content:after,.jazz-timeline .red-post .timeline-content:before,.jazz-timeline .red-post:nth-child(even) .timeline-content:after,.jazz-timeline .red-post:nth-child(even) .timeline-content:before{border-right-color:#F25B5A}.jazz-timeline .opal-post .timeline-content:after,.jazz-timeline .opal-post .timeline-content:before,.jazz-timeline .opal-post:nth-child(even) .timeline-content:after,.jazz-timeline .opal-post:nth-child(even) .timeline-content:before{border-right-color:#76BBDA}.jazz-timeline .blue-post .timeline-content:after,.jazz-timeline .blue-post .timeline-content:before,.jazz-timeline .blue-post:nth-child(even) .timeline-content:after,.jazz-timeline .blue-post:nth-child(even) .timeline-content:before{border-right-color:#2196F3}.jazz-timeline .grey-post .timeline-content:after,.jazz-timeline .grey-post .timeline-content:before,.jazz-timeline .grey-post:nth-child(even) .timeline-content:after,.jazz-timeline .grey-post:nth-child(even) .timeline-content:before{border-right-color:#7E8DA3}.jazz-timeline .pink-post .timeline-content:after,.jazz-timeline .pink-post .timeline-content:before,.jazz-timeline .pink-post:nth-child(even) .timeline-content:after,.jazz-timeline .pink-post:nth-child(even) .timeline-content:before{border-right-color:#F282C7}.jazz-timeline .green-post .timeline-content:after,.jazz-timeline .green-post .timeline-content:before,.jazz-timeline .green-post:nth-child(even) .timeline-content:after,.jazz-timeline .green-post:nth-child(even) .timeline-content:before{border-right-color:#75CE66}.jazz-timeline .white-post .timeline-content:after,.jazz-timeline .white-post .timeline-content:before,.jazz-timeline .white-post:nth-child(even) .timeline-content:after,.jazz-timeline .white-post:nth-child(even) .timeline-content:before{border-right-color:#FFF}.jazz-timeline .purple-post .timeline-content:after,.jazz-timeline .purple-post .timeline-content:before,.jazz-timeline .purple-post:nth-child(even) .timeline-content:after,.jazz-timeline .purple-post:nth-child(even) .timeline-content:before{border-right-color:#9C27B0}.jazz-timeline .indigo-post .timeline-content:after,.jazz-timeline .indigo-post .timeline-content:before,.jazz-timeline .indigo-post:nth-child(even) .timeline-content:after,.jazz-timeline .indigo-post:nth-child(even) .timeline-content:before{border-right-color:#3F51B5}.jazz-timeline .orange-post .timeline-content:after,.jazz-timeline .orange-post .timeline-content:before,.jazz-timeline .orange-post:nth-child(even) .timeline-content:after,.jazz-timeline .orange-post:nth-child(even) .timeline-content:before{border-right-color:#F0CA45}.jazz-timeline .turqoise-post .timeline-content:after,.jazz-timeline .turqoise-post .timeline-content:before,.jazz-timeline .turqoise-post:nth-child(even) .timeline-content:after,.jazz-timeline .turqoise-post:nth-child(even) .timeline-content:before{border-right-color:#28C0C6}.jazz-timeline .brown-post .timeline-content:after,.jazz-timeline .brown-post .timeline-content:before,.jazz-timeline .brown-post:nth-child(even) .timeline-content:after,.jazz-timeline .brown-post:nth-child(even) .timeline-content:before{border-right-color:#E46D2B}.jazz-timeline .black-post .timeline-content:after,.jazz-timeline .black-post .timeline-content:before,.jazz-timeline .black-post:nth-child(even) .timeline-content:after,.jazz-timeline .black-post:nth-child(even) .timeline-content:before{border-right-color:#2F3949}.solid-shadow .timeline-post .timeline-content:before,.solid-shadow .timeline-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:rgba(0,0,0,0.2);left:-31px;top:29px}.jazz-timeline .timeline-post .timeline-content .content-details img{width:100%}.jazz-timeline .timeline-post .icon-dot .timeline-bar{left:4px}.jazz-timeline .timeline-post .icon-dot{margin:30px 0 0 10px;height:14px;width:14px}.bordered-timeline .timeline-post .timeline-content:before,.bordered-timeline .timeline-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#bbb;left:-30px;top:26px}.jazz-timeline .timeline-post .icon-dot-full,.jazz-timeline .timeline-post .icon-dot-full-white{margin:30px 0 0 9px}.jazz-timeline .timeline-post .icon-larger,.jazz-timeline.one-sided .timeline-post .icon-larger{left:0;margin:22px 0 0 -10px;line-height:50px;height:50px;width:50px}.jazz-timeline.one-sided .timeline-post .icon-larger{margin:22px 0 0 -25px}.jazz-timeline.one-sided .timeline-post,.jazz-timeline.one-sided .timeline-post:nth-child(even){padding:0 0 30px 50px}.jazz-timeline .timeline-post .icon-larger .icon-placeholder{padding:2px 0}.jazz-timeline .timeline-post .icon-larger .icon-placeholder i{line-height:48px}.jazz-timeline .timeline-post .icon-larger .icon-placeholder span{line-height:0;font-weight:700;font-size:18px}.ultimate-style .timeline-post .timeline-content .content-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .content-title:before{content:\"\";display:block;border:15px solid transparent;border-right-color:#fff;position:absolute;left:-24px;right:auto;top:20px}.multiline-timeline .timeline-post:before,.multiline-timeline .timeline-post .timeline-icon,.multiline-timeline .timeline-post .timeline-meta,.multiline-timeline .timeline-post:nth-child(even):before,.multiline-timeline .timeline-post:nth-child(even) .timeline-meta,.multiline-timeline .timeline-post:nth-child(even) .timeline-icon{left:0;right:auto}.multiline-timeline .timeline-post .timeline-icon,.multiline-timeline .timeline-post:nth-child(even) .timeline-icon{margin:22px 0 0 -25px}.multiline-timeline .timeline-post .icon-dot,.multiline-timeline .timeline-post:nth-child(even) .icon-dot{margin:30px 0 0 -6px}.multiline-timeline .timeline-post .icon-dot-full,.multiline-timeline .timeline-post .icon-dot-full-white,.multiline-timeline .timeline-post:nth-child(even) .icon-dot-full,.multiline-timeline .timeline-post:nth-child(even) .icon-dot-full-white{margin:30px 0 0 -7px}.ultimate-style .timeline-post .timeline-content .turqoise-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .turqoise-title:before{border-right-color:#25ACB4}.ultimate-style .timeline-post .timeline-content .orange-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .orange-title:before{border-right-color:#E6B613}.ultimate-style .timeline-post .timeline-content .indigo-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .indigo-title:before{border-right-color:#3848A0}.ultimate-style .timeline-post .timeline-content .purple-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .purple-title:before{border-right-color:#872299}.ultimate-style .timeline-post .timeline-content .white-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .white-title:before{border-right-color:#FFF}.ultimate-style .timeline-post .timeline-content .brown-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .brown-title:before{border-right-color:#D75E1C}.ultimate-style .timeline-post .timeline-content .green-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .green-title:before{border-right-color:#4EB83A}.ultimate-style .timeline-post .timeline-content .black-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .black-title:before{border-right-color:#28313E}.ultimate-style .timeline-post .timeline-content .pink-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .pink-title:before{border-right-color:#EC4AAF}.ultimate-style .timeline-post .timeline-content .grey-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .grey-title:before{border-right-color:#697892}.ultimate-style .timeline-post .timeline-content .blue-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .blue-title:before{border-right-color:#0D83E3}.ultimate-style .timeline-post .timeline-content .opal-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .opal-title:before{border-right-color:#49A7CF}.ultimate-style .timeline-post .timeline-content .red-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .red-title:before{border-right-color:#DC4747}}","source":"timeline/css/jazz-timeline.css","raw":"layout: false@import \"https://fonts.useso.com/css?family=Work+Sans:400,300,500\";@import \"https://fonts.useso.com/css?family=Arvo:400,400italic,700\";@import \"https://fonts.googleapis.com/css?family=PT+Serif:400,400italic,700\";@import \"https://fonts.googleapis.com/css?family=Alegreya+Sans:400,300,300italic,400italic,500,500italic,700,700italic\";@font-face{font-family:'FontAwesome';src:url(../fonts/fontawesome/fontawesome-webfont.eot?v=4.5.0);src:url(../fonts/fontawesome/fontawesome-webfont.eot?#iefix&v=4.5.0) format(\"embedded-opentype\"),url(../fonts/fontawesome/fontawesome-webfont.woff2?v=4.5.0) format(\"woff2\"),url(../fonts/fontawesome/fontawesome-webfont.woff?v=4.5.0) format(\"woff\"),url(../fonts/fontawesome/fontawesome-webfont.ttf?v=4.5.0) format(\"truetype\"),url(../fonts/fontawesome/fontawesome-webfont.svg?v=4.5.0#fontawesomeregular) format(\"svg\");font-weight:400;font-style:normal}.fa{display:inline-block;font:normal normal normal 14px/1 FontAwesome;font-size:inherit;text-rendering:auto;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.fa-lg{font-size:1.33333333em;line-height:.75em;vertical-align:-15%}.fa-2x{font-size:2em}.fa-3x{font-size:3em}.fa-4x{font-size:4em}.fa-5x{font-size:5em}.fa-fw{width:1.28571429em;text-align:center}.fa-ul{padding-left:0;margin-left:2.14285714em;list-style-type:none}.fa-ul>li{position:relative}.fa-li{position:absolute;left:-2.14285714em;width:2.14285714em;top:.14285714em;text-align:center}.fa-li.fa-lg{left:-1.85714286em}.fa-border{padding:.2em .25em .15em;border:solid .08em #eee;border-radius:.1em}.fa-pull-left{float:left}.fa-pull-right{float:right}.fa.fa-pull-left{margin-right:.3em}.fa.fa-pull-right{margin-left:.3em}.pull-right{float:right}.pull-left{float:left}.fa.pull-left{margin-right:.3em}.fa.pull-right{margin-left:.3em}.fa-spin{-webkit-animation:fa-spin 2s infinite linear;animation:fa-spin 2s infinite linear}.fa-pulse{-webkit-animation:fa-spin 1s infinite steps(8);animation:fa-spin 1s infinite steps(8)}@-webkit-keyframes fa-spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}@keyframes fa-spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}.fa-rotate-90{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=1);-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg)}.fa-rotate-180{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=2);-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg)}.fa-rotate-270{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=3);-webkit-transform:rotate(270deg);-ms-transform:rotate(270deg);transform:rotate(270deg)}.fa-flip-horizontal{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=0,mirror=1);-webkit-transform:scale(-1,1);-ms-transform:scale(-1,1);transform:scale(-1,1)}.fa-flip-vertical{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=2,mirror=1);-webkit-transform:scale(1,-1);-ms-transform:scale(1,-1);transform:scale(1,-1)}:root .fa-rotate-90,:root .fa-rotate-180,:root .fa-rotate-270,:root .fa-flip-horizontal,:root .fa-flip-vertical{filter:none}.fa-stack{position:relative;display:inline-block;width:2em;height:2em;line-height:2em;vertical-align:middle}.fa-stack-1x,.fa-stack-2x{position:absolute;left:0;width:100%;text-align:center}.fa-stack-1x{line-height:inherit}.fa-stack-2x{font-size:2em}.fa-inverse{color:#fff}.fa-glass:before{content:\"\\f000\"}.fa-music:before{content:\"\\f001\"}.fa-search:before{content:\"\\f002\"}.fa-envelope-o:before{content:\"\\f003\"}.fa-heart:before{content:\"\\f004\"}.fa-star:before{content:\"\\f005\"}.fa-star-o:before{content:\"\\f006\"}.fa-user:before{content:\"\\f007\"}.fa-film:before{content:\"\\f008\"}.fa-th-large:before{content:\"\\f009\"}.fa-th:before{content:\"\\f00a\"}.fa-th-list:before{content:\"\\f00b\"}.fa-check:before{content:\"\\f00c\"}.fa-remove:before,.fa-close:before,.fa-times:before{content:\"\\f00d\"}.fa-search-plus:before{content:\"\\f00e\"}.fa-search-minus:before{content:\"\\f010\"}.fa-power-off:before{content:\"\\f011\"}.fa-signal:before{content:\"\\f012\"}.fa-gear:before,.fa-cog:before{content:\"\\f013\"}.fa-trash-o:before{content:\"\\f014\"}.fa-home:before{content:\"\\f015\"}.fa-file-o:before{content:\"\\f016\"}.fa-clock-o:before{content:\"\\f017\"}.fa-road:before{content:\"\\f018\"}.fa-download:before{content:\"\\f019\"}.fa-arrow-circle-o-down:before{content:\"\\f01a\"}.fa-arrow-circle-o-up:before{content:\"\\f01b\"}.fa-inbox:before{content:\"\\f01c\"}.fa-play-circle-o:before{content:\"\\f01d\"}.fa-rotate-right:before,.fa-repeat:before{content:\"\\f01e\"}.fa-refresh:before{content:\"\\f021\"}.fa-list-alt:before{content:\"\\f022\"}.fa-lock:before{content:\"\\f023\"}.fa-flag:before{content:\"\\f024\"}.fa-headphones:before{content:\"\\f025\"}.fa-volume-off:before{content:\"\\f026\"}.fa-volume-down:before{content:\"\\f027\"}.fa-volume-up:before{content:\"\\f028\"}.fa-qrcode:before{content:\"\\f029\"}.fa-barcode:before{content:\"\\f02a\"}.fa-tag:before{content:\"\\f02b\"}.fa-tags:before{content:\"\\f02c\"}.fa-book:before{content:\"\\f02d\"}.fa-bookmark:before{content:\"\\f02e\"}.fa-print:before{content:\"\\f02f\"}.fa-camera:before{content:\"\\f030\"}.fa-font:before{content:\"\\f031\"}.fa-bold:before{content:\"\\f032\"}.fa-italic:before{content:\"\\f033\"}.fa-text-height:before{content:\"\\f034\"}.fa-text-width:before{content:\"\\f035\"}.fa-align-left:before{content:\"\\f036\"}.fa-align-center:before{content:\"\\f037\"}.fa-align-right:before{content:\"\\f038\"}.fa-align-justify:before{content:\"\\f039\"}.fa-list:before{content:\"\\f03a\"}.fa-dedent:before,.fa-outdent:before{content:\"\\f03b\"}.fa-indent:before{content:\"\\f03c\"}.fa-video-camera:before{content:\"\\f03d\"}.fa-photo:before,.fa-image:before,.fa-picture-o:before{content:\"\\f03e\"}.fa-pencil:before{content:\"\\f040\"}.fa-map-marker:before{content:\"\\f041\"}.fa-adjust:before{content:\"\\f042\"}.fa-tint:before{content:\"\\f043\"}.fa-edit:before,.fa-pencil-square-o:before{content:\"\\f044\"}.fa-share-square-o:before{content:\"\\f045\"}.fa-check-square-o:before{content:\"\\f046\"}.fa-arrows:before{content:\"\\f047\"}.fa-step-backward:before{content:\"\\f048\"}.fa-fast-backward:before{content:\"\\f049\"}.fa-backward:before{content:\"\\f04a\"}.fa-play:before{content:\"\\f04b\"}.fa-pause:before{content:\"\\f04c\"}.fa-stop:before{content:\"\\f04d\"}.fa-forward:before{content:\"\\f04e\"}.fa-fast-forward:before{content:\"\\f050\"}.fa-step-forward:before{content:\"\\f051\"}.fa-eject:before{content:\"\\f052\"}.fa-chevron-left:before{content:\"\\f053\"}.fa-chevron-right:before{content:\"\\f054\"}.fa-plus-circle:before{content:\"\\f055\"}.fa-minus-circle:before{content:\"\\f056\"}.fa-times-circle:before{content:\"\\f057\"}.fa-check-circle:before{content:\"\\f058\"}.fa-question-circle:before{content:\"\\f059\"}.fa-info-circle:before{content:\"\\f05a\"}.fa-crosshairs:before{content:\"\\f05b\"}.fa-times-circle-o:before{content:\"\\f05c\"}.fa-check-circle-o:before{content:\"\\f05d\"}.fa-ban:before{content:\"\\f05e\"}.fa-arrow-left:before{content:\"\\f060\"}.fa-arrow-right:before{content:\"\\f061\"}.fa-arrow-up:before{content:\"\\f062\"}.fa-arrow-down:before{content:\"\\f063\"}.fa-mail-forward:before,.fa-share:before{content:\"\\f064\"}.fa-expand:before{content:\"\\f065\"}.fa-compress:before{content:\"\\f066\"}.fa-plus:before{content:\"\\f067\"}.fa-minus:before{content:\"\\f068\"}.fa-asterisk:before{content:\"\\f069\"}.fa-exclamation-circle:before{content:\"\\f06a\"}.fa-gift:before{content:\"\\f06b\"}.fa-leaf:before{content:\"\\f06c\"}.fa-fire:before{content:\"\\f06d\"}.fa-eye:before{content:\"\\f06e\"}.fa-eye-slash:before{content:\"\\f070\"}.fa-warning:before,.fa-exclamation-triangle:before{content:\"\\f071\"}.fa-plane:before{content:\"\\f072\"}.fa-calendar:before{content:\"\\f073\"}.fa-random:before{content:\"\\f074\"}.fa-comment:before{content:\"\\f075\"}.fa-magnet:before{content:\"\\f076\"}.fa-chevron-up:before{content:\"\\f077\"}.fa-chevron-down:before{content:\"\\f078\"}.fa-retweet:before{content:\"\\f079\"}.fa-shopping-cart:before{content:\"\\f07a\"}.fa-folder:before{content:\"\\f07b\"}.fa-folder-open:before{content:\"\\f07c\"}.fa-arrows-v:before{content:\"\\f07d\"}.fa-arrows-h:before{content:\"\\f07e\"}.fa-bar-chart-o:before,.fa-bar-chart:before{content:\"\\f080\"}.fa-twitter-square:before{content:\"\\f081\"}.fa-facebook-square:before{content:\"\\f082\"}.fa-camera-retro:before{content:\"\\f083\"}.fa-key:before{content:\"\\f084\"}.fa-gears:before,.fa-cogs:before{content:\"\\f085\"}.fa-comments:before{content:\"\\f086\"}.fa-thumbs-o-up:before{content:\"\\f087\"}.fa-thumbs-o-down:before{content:\"\\f088\"}.fa-star-half:before{content:\"\\f089\"}.fa-heart-o:before{content:\"\\f08a\"}.fa-sign-out:before{content:\"\\f08b\"}.fa-linkedin-square:before{content:\"\\f08c\"}.fa-thumb-tack:before{content:\"\\f08d\"}.fa-external-link:before{content:\"\\f08e\"}.fa-sign-in:before{content:\"\\f090\"}.fa-trophy:before{content:\"\\f091\"}.fa-github-square:before{content:\"\\f092\"}.fa-upload:before{content:\"\\f093\"}.fa-lemon-o:before{content:\"\\f094\"}.fa-phone:before{content:\"\\f095\"}.fa-square-o:before{content:\"\\f096\"}.fa-bookmark-o:before{content:\"\\f097\"}.fa-phone-square:before{content:\"\\f098\"}.fa-twitter:before{content:\"\\f099\"}.fa-facebook-f:before,.fa-facebook:before{content:\"\\f09a\"}.fa-github:before{content:\"\\f09b\"}.fa-unlock:before{content:\"\\f09c\"}.fa-credit-card:before{content:\"\\f09d\"}.fa-feed:before,.fa-rss:before{content:\"\\f09e\"}.fa-hdd-o:before{content:\"\\f0a0\"}.fa-bullhorn:before{content:\"\\f0a1\"}.fa-bell:before{content:\"\\f0f3\"}.fa-certificate:before{content:\"\\f0a3\"}.fa-hand-o-right:before{content:\"\\f0a4\"}.fa-hand-o-left:before{content:\"\\f0a5\"}.fa-hand-o-up:before{content:\"\\f0a6\"}.fa-hand-o-down:before{content:\"\\f0a7\"}.fa-arrow-circle-left:before{content:\"\\f0a8\"}.fa-arrow-circle-right:before{content:\"\\f0a9\"}.fa-arrow-circle-up:before{content:\"\\f0aa\"}.fa-arrow-circle-down:before{content:\"\\f0ab\"}.fa-globe:before{content:\"\\f0ac\"}.fa-wrench:before{content:\"\\f0ad\"}.fa-tasks:before{content:\"\\f0ae\"}.fa-filter:before{content:\"\\f0b0\"}.fa-briefcase:before{content:\"\\f0b1\"}.fa-arrows-alt:before{content:\"\\f0b2\"}.fa-group:before,.fa-users:before{content:\"\\f0c0\"}.fa-chain:before,.fa-link:before{content:\"\\f0c1\"}.fa-cloud:before{content:\"\\f0c2\"}.fa-flask:before{content:\"\\f0c3\"}.fa-cut:before,.fa-scissors:before{content:\"\\f0c4\"}.fa-copy:before,.fa-files-o:before{content:\"\\f0c5\"}.fa-paperclip:before{content:\"\\f0c6\"}.fa-save:before,.fa-floppy-o:before{content:\"\\f0c7\"}.fa-square:before{content:\"\\f0c8\"}.fa-navicon:before,.fa-reorder:before,.fa-bars:before{content:\"\\f0c9\"}.fa-list-ul:before{content:\"\\f0ca\"}.fa-list-ol:before{content:\"\\f0cb\"}.fa-strikethrough:before{content:\"\\f0cc\"}.fa-underline:before{content:\"\\f0cd\"}.fa-table:before{content:\"\\f0ce\"}.fa-magic:before{content:\"\\f0d0\"}.fa-truck:before{content:\"\\f0d1\"}.fa-pinterest:before{content:\"\\f0d2\"}.fa-pinterest-square:before{content:\"\\f0d3\"}.fa-google-plus-square:before{content:\"\\f0d4\"}.fa-google-plus:before{content:\"\\f0d5\"}.fa-money:before{content:\"\\f0d6\"}.fa-caret-down:before{content:\"\\f0d7\"}.fa-caret-up:before{content:\"\\f0d8\"}.fa-caret-left:before{content:\"\\f0d9\"}.fa-caret-right:before{content:\"\\f0da\"}.fa-columns:before{content:\"\\f0db\"}.fa-unsorted:before,.fa-sort:before{content:\"\\f0dc\"}.fa-sort-down:before,.fa-sort-desc:before{content:\"\\f0dd\"}.fa-sort-up:before,.fa-sort-asc:before{content:\"\\f0de\"}.fa-envelope:before{content:\"\\f0e0\"}.fa-linkedin:before{content:\"\\f0e1\"}.fa-rotate-left:before,.fa-undo:before{content:\"\\f0e2\"}.fa-legal:before,.fa-gavel:before{content:\"\\f0e3\"}.fa-dashboard:before,.fa-tachometer:before{content:\"\\f0e4\"}.fa-comment-o:before{content:\"\\f0e5\"}.fa-comments-o:before{content:\"\\f0e6\"}.fa-flash:before,.fa-bolt:before{content:\"\\f0e7\"}.fa-sitemap:before{content:\"\\f0e8\"}.fa-umbrella:before{content:\"\\f0e9\"}.fa-paste:before,.fa-clipboard:before{content:\"\\f0ea\"}.fa-lightbulb-o:before{content:\"\\f0eb\"}.fa-exchange:before{content:\"\\f0ec\"}.fa-cloud-download:before{content:\"\\f0ed\"}.fa-cloud-upload:before{content:\"\\f0ee\"}.fa-user-md:before{content:\"\\f0f0\"}.fa-stethoscope:before{content:\"\\f0f1\"}.fa-suitcase:before{content:\"\\f0f2\"}.fa-bell-o:before{content:\"\\f0a2\"}.fa-coffee:before{content:\"\\f0f4\"}.fa-cutlery:before{content:\"\\f0f5\"}.fa-file-text-o:before{content:\"\\f0f6\"}.fa-building-o:before{content:\"\\f0f7\"}.fa-hospital-o:before{content:\"\\f0f8\"}.fa-ambulance:before{content:\"\\f0f9\"}.fa-medkit:before{content:\"\\f0fa\"}.fa-fighter-jet:before{content:\"\\f0fb\"}.fa-beer:before{content:\"\\f0fc\"}.fa-h-square:before{content:\"\\f0fd\"}.fa-plus-square:before{content:\"\\f0fe\"}.fa-angle-double-left:before{content:\"\\f100\"}.fa-angle-double-right:before{content:\"\\f101\"}.fa-angle-double-up:before{content:\"\\f102\"}.fa-angle-double-down:before{content:\"\\f103\"}.fa-angle-left:before{content:\"\\f104\"}.fa-angle-right:before{content:\"\\f105\"}.fa-angle-up:before{content:\"\\f106\"}.fa-angle-down:before{content:\"\\f107\"}.fa-desktop:before{content:\"\\f108\"}.fa-laptop:before{content:\"\\f109\"}.fa-tablet:before{content:\"\\f10a\"}.fa-mobile-phone:before,.fa-mobile:before{content:\"\\f10b\"}.fa-circle-o:before{content:\"\\f10c\"}.fa-quote-left:before{content:\"\\f10d\"}.fa-quote-right:before{content:\"\\f10e\"}.fa-spinner:before{content:\"\\f110\"}.fa-circle:before{content:\"\\f111\"}.fa-mail-reply:before,.fa-reply:before{content:\"\\f112\"}.fa-github-alt:before{content:\"\\f113\"}.fa-folder-o:before{content:\"\\f114\"}.fa-folder-open-o:before{content:\"\\f115\"}.fa-smile-o:before{content:\"\\f118\"}.fa-frown-o:before{content:\"\\f119\"}.fa-meh-o:before{content:\"\\f11a\"}.fa-gamepad:before{content:\"\\f11b\"}.fa-keyboard-o:before{content:\"\\f11c\"}.fa-flag-o:before{content:\"\\f11d\"}.fa-flag-checkered:before{content:\"\\f11e\"}.fa-terminal:before{content:\"\\f120\"}.fa-code:before{content:\"\\f121\"}.fa-mail-reply-all:before,.fa-reply-all:before{content:\"\\f122\"}.fa-star-half-empty:before,.fa-star-half-full:before,.fa-star-half-o:before{content:\"\\f123\"}.fa-location-arrow:before{content:\"\\f124\"}.fa-crop:before{content:\"\\f125\"}.fa-code-fork:before{content:\"\\f126\"}.fa-unlink:before,.fa-chain-broken:before{content:\"\\f127\"}.fa-question:before{content:\"\\f128\"}.fa-info:before{content:\"\\f129\"}.fa-exclamation:before{content:\"\\f12a\"}.fa-superscript:before{content:\"\\f12b\"}.fa-subscript:before{content:\"\\f12c\"}.fa-eraser:before{content:\"\\f12d\"}.fa-puzzle-piece:before{content:\"\\f12e\"}.fa-microphone:before{content:\"\\f130\"}.fa-microphone-slash:before{content:\"\\f131\"}.fa-shield:before{content:\"\\f132\"}.fa-calendar-o:before{content:\"\\f133\"}.fa-fire-extinguisher:before{content:\"\\f134\"}.fa-rocket:before{content:\"\\f135\"}.fa-maxcdn:before{content:\"\\f136\"}.fa-chevron-circle-left:before{content:\"\\f137\"}.fa-chevron-circle-right:before{content:\"\\f138\"}.fa-chevron-circle-up:before{content:\"\\f139\"}.fa-chevron-circle-down:before{content:\"\\f13a\"}.fa-html5:before{content:\"\\f13b\"}.fa-css3:before{content:\"\\f13c\"}.fa-anchor:before{content:\"\\f13d\"}.fa-unlock-alt:before{content:\"\\f13e\"}.fa-bullseye:before{content:\"\\f140\"}.fa-ellipsis-h:before{content:\"\\f141\"}.fa-ellipsis-v:before{content:\"\\f142\"}.fa-rss-square:before{content:\"\\f143\"}.fa-play-circle:before{content:\"\\f144\"}.fa-ticket:before{content:\"\\f145\"}.fa-minus-square:before{content:\"\\f146\"}.fa-minus-square-o:before{content:\"\\f147\"}.fa-level-up:before{content:\"\\f148\"}.fa-level-down:before{content:\"\\f149\"}.fa-check-square:before{content:\"\\f14a\"}.fa-pencil-square:before{content:\"\\f14b\"}.fa-external-link-square:before{content:\"\\f14c\"}.fa-share-square:before{content:\"\\f14d\"}.fa-compass:before{content:\"\\f14e\"}.fa-toggle-down:before,.fa-caret-square-o-down:before{content:\"\\f150\"}.fa-toggle-up:before,.fa-caret-square-o-up:before{content:\"\\f151\"}.fa-toggle-right:before,.fa-caret-square-o-right:before{content:\"\\f152\"}.fa-euro:before,.fa-eur:before{content:\"\\f153\"}.fa-gbp:before{content:\"\\f154\"}.fa-dollar:before,.fa-usd:before{content:\"\\f155\"}.fa-rupee:before,.fa-inr:before{content:\"\\f156\"}.fa-cny:before,.fa-rmb:before,.fa-yen:before,.fa-jpy:before{content:\"\\f157\"}.fa-ruble:before,.fa-rouble:before,.fa-rub:before{content:\"\\f158\"}.fa-won:before,.fa-krw:before{content:\"\\f159\"}.fa-bitcoin:before,.fa-btc:before{content:\"\\f15a\"}.fa-file:before{content:\"\\f15b\"}.fa-file-text:before{content:\"\\f15c\"}.fa-sort-alpha-asc:before{content:\"\\f15d\"}.fa-sort-alpha-desc:before{content:\"\\f15e\"}.fa-sort-amount-asc:before{content:\"\\f160\"}.fa-sort-amount-desc:before{content:\"\\f161\"}.fa-sort-numeric-asc:before{content:\"\\f162\"}.fa-sort-numeric-desc:before{content:\"\\f163\"}.fa-thumbs-up:before{content:\"\\f164\"}.fa-thumbs-down:before{content:\"\\f165\"}.fa-youtube-square:before{content:\"\\f166\"}.fa-youtube:before{content:\"\\f167\"}.fa-xing:before{content:\"\\f168\"}.fa-xing-square:before{content:\"\\f169\"}.fa-youtube-play:before{content:\"\\f16a\"}.fa-dropbox:before{content:\"\\f16b\"}.fa-stack-overflow:before{content:\"\\f16c\"}.fa-instagram:before{content:\"\\f16d\"}.fa-flickr:before{content:\"\\f16e\"}.fa-adn:before{content:\"\\f170\"}.fa-bitbucket:before{content:\"\\f171\"}.fa-bitbucket-square:before{content:\"\\f172\"}.fa-tumblr:before{content:\"\\f173\"}.fa-tumblr-square:before{content:\"\\f174\"}.fa-long-arrow-down:before{content:\"\\f175\"}.fa-long-arrow-up:before{content:\"\\f176\"}.fa-long-arrow-left:before{content:\"\\f177\"}.fa-long-arrow-right:before{content:\"\\f178\"}.fa-apple:before{content:\"\\f179\"}.fa-windows:before{content:\"\\f17a\"}.fa-android:before{content:\"\\f17b\"}.fa-linux:before{content:\"\\f17c\"}.fa-dribbble:before{content:\"\\f17d\"}.fa-skype:before{content:\"\\f17e\"}.fa-foursquare:before{content:\"\\f180\"}.fa-trello:before{content:\"\\f181\"}.fa-female:before{content:\"\\f182\"}.fa-male:before{content:\"\\f183\"}.fa-gittip:before,.fa-gratipay:before{content:\"\\f184\"}.fa-sun-o:before{content:\"\\f185\"}.fa-moon-o:before{content:\"\\f186\"}.fa-archive:before{content:\"\\f187\"}.fa-bug:before{content:\"\\f188\"}.fa-vk:before{content:\"\\f189\"}.fa-weibo:before{content:\"\\f18a\"}.fa-renren:before{content:\"\\f18b\"}.fa-pagelines:before{content:\"\\f18c\"}.fa-stack-exchange:before{content:\"\\f18d\"}.fa-arrow-circle-o-right:before{content:\"\\f18e\"}.fa-arrow-circle-o-left:before{content:\"\\f190\"}.fa-toggle-left:before,.fa-caret-square-o-left:before{content:\"\\f191\"}.fa-dot-circle-o:before{content:\"\\f192\"}.fa-wheelchair:before{content:\"\\f193\"}.fa-vimeo-square:before{content:\"\\f194\"}.fa-turkish-lira:before,.fa-try:before{content:\"\\f195\"}.fa-plus-square-o:before{content:\"\\f196\"}.fa-space-shuttle:before{content:\"\\f197\"}.fa-slack:before{content:\"\\f198\"}.fa-envelope-square:before{content:\"\\f199\"}.fa-wordpress:before{content:\"\\f19a\"}.fa-openid:before{content:\"\\f19b\"}.fa-institution:before,.fa-bank:before,.fa-university:before{content:\"\\f19c\"}.fa-mortar-board:before,.fa-graduation-cap:before{content:\"\\f19d\"}.fa-yahoo:before{content:\"\\f19e\"}.fa-google:before{content:\"\\f1a0\"}.fa-reddit:before{content:\"\\f1a1\"}.fa-reddit-square:before{content:\"\\f1a2\"}.fa-stumbleupon-circle:before{content:\"\\f1a3\"}.fa-stumbleupon:before{content:\"\\f1a4\"}.fa-delicious:before{content:\"\\f1a5\"}.fa-digg:before{content:\"\\f1a6\"}.fa-pied-piper:before{content:\"\\f1a7\"}.fa-pied-piper-alt:before{content:\"\\f1a8\"}.fa-drupal:before{content:\"\\f1a9\"}.fa-joomla:before{content:\"\\f1aa\"}.fa-language:before{content:\"\\f1ab\"}.fa-fax:before{content:\"\\f1ac\"}.fa-building:before{content:\"\\f1ad\"}.fa-child:before{content:\"\\f1ae\"}.fa-paw:before{content:\"\\f1b0\"}.fa-spoon:before{content:\"\\f1b1\"}.fa-cube:before{content:\"\\f1b2\"}.fa-cubes:before{content:\"\\f1b3\"}.fa-behance:before{content:\"\\f1b4\"}.fa-behance-square:before{content:\"\\f1b5\"}.fa-steam:before{content:\"\\f1b6\"}.fa-steam-square:before{content:\"\\f1b7\"}.fa-recycle:before{content:\"\\f1b8\"}.fa-automobile:before,.fa-car:before{content:\"\\f1b9\"}.fa-cab:before,.fa-taxi:before{content:\"\\f1ba\"}.fa-tree:before{content:\"\\f1bb\"}.fa-spotify:before{content:\"\\f1bc\"}.fa-deviantart:before{content:\"\\f1bd\"}.fa-soundcloud:before{content:\"\\f1be\"}.fa-database:before{content:\"\\f1c0\"}.fa-file-pdf-o:before{content:\"\\f1c1\"}.fa-file-word-o:before{content:\"\\f1c2\"}.fa-file-excel-o:before{content:\"\\f1c3\"}.fa-file-powerpoint-o:before{content:\"\\f1c4\"}.fa-file-photo-o:before,.fa-file-picture-o:before,.fa-file-image-o:before{content:\"\\f1c5\"}.fa-file-zip-o:before,.fa-file-archive-o:before{content:\"\\f1c6\"}.fa-file-sound-o:before,.fa-file-audio-o:before{content:\"\\f1c7\"}.fa-file-movie-o:before,.fa-file-video-o:before{content:\"\\f1c8\"}.fa-file-code-o:before{content:\"\\f1c9\"}.fa-vine:before{content:\"\\f1ca\"}.fa-codepen:before{content:\"\\f1cb\"}.fa-jsfiddle:before{content:\"\\f1cc\"}.fa-life-bouy:before,.fa-life-buoy:before,.fa-life-saver:before,.fa-support:before,.fa-life-ring:before{content:\"\\f1cd\"}.fa-circle-o-notch:before{content:\"\\f1ce\"}.fa-ra:before,.fa-rebel:before{content:\"\\f1d0\"}.fa-ge:before,.fa-empire:before{content:\"\\f1d1\"}.fa-git-square:before{content:\"\\f1d2\"}.fa-git:before{content:\"\\f1d3\"}.fa-y-combinator-square:before,.fa-yc-square:before,.fa-hacker-news:before{content:\"\\f1d4\"}.fa-tencent-weibo:before{content:\"\\f1d5\"}.fa-qq:before{content:\"\\f1d6\"}.fa-wechat:before,.fa-weixin:before{content:\"\\f1d7\"}.fa-send:before,.fa-paper-plane:before{content:\"\\f1d8\"}.fa-send-o:before,.fa-paper-plane-o:before{content:\"\\f1d9\"}.fa-history:before{content:\"\\f1da\"}.fa-circle-thin:before{content:\"\\f1db\"}.fa-header:before{content:\"\\f1dc\"}.fa-paragraph:before{content:\"\\f1dd\"}.fa-sliders:before{content:\"\\f1de\"}.fa-share-alt:before{content:\"\\f1e0\"}.fa-share-alt-square:before{content:\"\\f1e1\"}.fa-bomb:before{content:\"\\f1e2\"}.fa-soccer-ball-o:before,.fa-futbol-o:before{content:\"\\f1e3\"}.fa-tty:before{content:\"\\f1e4\"}.fa-binoculars:before{content:\"\\f1e5\"}.fa-plug:before{content:\"\\f1e6\"}.fa-slideshare:before{content:\"\\f1e7\"}.fa-twitch:before{content:\"\\f1e8\"}.fa-yelp:before{content:\"\\f1e9\"}.fa-newspaper-o:before{content:\"\\f1ea\"}.fa-wifi:before{content:\"\\f1eb\"}.fa-calculator:before{content:\"\\f1ec\"}.fa-paypal:before{content:\"\\f1ed\"}.fa-google-wallet:before{content:\"\\f1ee\"}.fa-cc-visa:before{content:\"\\f1f0\"}.fa-cc-mastercard:before{content:\"\\f1f1\"}.fa-cc-discover:before{content:\"\\f1f2\"}.fa-cc-amex:before{content:\"\\f1f3\"}.fa-cc-paypal:before{content:\"\\f1f4\"}.fa-cc-stripe:before{content:\"\\f1f5\"}.fa-bell-slash:before{content:\"\\f1f6\"}.fa-bell-slash-o:before{content:\"\\f1f7\"}.fa-trash:before{content:\"\\f1f8\"}.fa-copyright:before{content:\"\\f1f9\"}.fa-at:before{content:\"\\f1fa\"}.fa-eyedropper:before{content:\"\\f1fb\"}.fa-paint-brush:before{content:\"\\f1fc\"}.fa-birthday-cake:before{content:\"\\f1fd\"}.fa-area-chart:before{content:\"\\f1fe\"}.fa-pie-chart:before{content:\"\\f200\"}.fa-line-chart:before{content:\"\\f201\"}.fa-lastfm:before{content:\"\\f202\"}.fa-lastfm-square:before{content:\"\\f203\"}.fa-toggle-off:before{content:\"\\f204\"}.fa-toggle-on:before{content:\"\\f205\"}.fa-bicycle:before{content:\"\\f206\"}.fa-bus:before{content:\"\\f207\"}.fa-ioxhost:before{content:\"\\f208\"}.fa-angellist:before{content:\"\\f209\"}.fa-cc:before{content:\"\\f20a\"}.fa-shekel:before,.fa-sheqel:before,.fa-ils:before{content:\"\\f20b\"}.fa-meanpath:before{content:\"\\f20c\"}.fa-buysellads:before{content:\"\\f20d\"}.fa-connectdevelop:before{content:\"\\f20e\"}.fa-dashcube:before{content:\"\\f210\"}.fa-forumbee:before{content:\"\\f211\"}.fa-leanpub:before{content:\"\\f212\"}.fa-sellsy:before{content:\"\\f213\"}.fa-shirtsinbulk:before{content:\"\\f214\"}.fa-simplybuilt:before{content:\"\\f215\"}.fa-skyatlas:before{content:\"\\f216\"}.fa-cart-plus:before{content:\"\\f217\"}.fa-cart-arrow-down:before{content:\"\\f218\"}.fa-diamond:before{content:\"\\f219\"}.fa-ship:before{content:\"\\f21a\"}.fa-user-secret:before{content:\"\\f21b\"}.fa-motorcycle:before{content:\"\\f21c\"}.fa-street-view:before{content:\"\\f21d\"}.fa-heartbeat:before{content:\"\\f21e\"}.fa-venus:before{content:\"\\f221\"}.fa-mars:before{content:\"\\f222\"}.fa-mercury:before{content:\"\\f223\"}.fa-intersex:before,.fa-transgender:before{content:\"\\f224\"}.fa-transgender-alt:before{content:\"\\f225\"}.fa-venus-double:before{content:\"\\f226\"}.fa-mars-double:before{content:\"\\f227\"}.fa-venus-mars:before{content:\"\\f228\"}.fa-mars-stroke:before{content:\"\\f229\"}.fa-mars-stroke-v:before{content:\"\\f22a\"}.fa-mars-stroke-h:before{content:\"\\f22b\"}.fa-neuter:before{content:\"\\f22c\"}.fa-genderless:before{content:\"\\f22d\"}.fa-facebook-official:before{content:\"\\f230\"}.fa-pinterest-p:before{content:\"\\f231\"}.fa-whatsapp:before{content:\"\\f232\"}.fa-server:before{content:\"\\f233\"}.fa-user-plus:before{content:\"\\f234\"}.fa-user-times:before{content:\"\\f235\"}.fa-hotel:before,.fa-bed:before{content:\"\\f236\"}.fa-viacoin:before{content:\"\\f237\"}.fa-train:before{content:\"\\f238\"}.fa-subway:before{content:\"\\f239\"}.fa-medium:before{content:\"\\f23a\"}.fa-yc:before,.fa-y-combinator:before{content:\"\\f23b\"}.fa-optin-monster:before{content:\"\\f23c\"}.fa-opencart:before{content:\"\\f23d\"}.fa-expeditedssl:before{content:\"\\f23e\"}.fa-battery-4:before,.fa-battery-full:before{content:\"\\f240\"}.fa-battery-3:before,.fa-battery-three-quarters:before{content:\"\\f241\"}.fa-battery-2:before,.fa-battery-half:before{content:\"\\f242\"}.fa-battery-1:before,.fa-battery-quarter:before{content:\"\\f243\"}.fa-battery-0:before,.fa-battery-empty:before{content:\"\\f244\"}.fa-mouse-pointer:before{content:\"\\f245\"}.fa-i-cursor:before{content:\"\\f246\"}.fa-object-group:before{content:\"\\f247\"}.fa-object-ungroup:before{content:\"\\f248\"}.fa-sticky-note:before{content:\"\\f249\"}.fa-sticky-note-o:before{content:\"\\f24a\"}.fa-cc-jcb:before{content:\"\\f24b\"}.fa-cc-diners-club:before{content:\"\\f24c\"}.fa-clone:before{content:\"\\f24d\"}.fa-balance-scale:before{content:\"\\f24e\"}.fa-hourglass-o:before{content:\"\\f250\"}.fa-hourglass-1:before,.fa-hourglass-start:before{content:\"\\f251\"}.fa-hourglass-2:before,.fa-hourglass-half:before{content:\"\\f252\"}.fa-hourglass-3:before,.fa-hourglass-end:before{content:\"\\f253\"}.fa-hourglass:before{content:\"\\f254\"}.fa-hand-grab-o:before,.fa-hand-rock-o:before{content:\"\\f255\"}.fa-hand-stop-o:before,.fa-hand-paper-o:before{content:\"\\f256\"}.fa-hand-scissors-o:before{content:\"\\f257\"}.fa-hand-lizard-o:before{content:\"\\f258\"}.fa-hand-spock-o:before{content:\"\\f259\"}.fa-hand-pointer-o:before{content:\"\\f25a\"}.fa-hand-peace-o:before{content:\"\\f25b\"}.fa-trademark:before{content:\"\\f25c\"}.fa-registered:before{content:\"\\f25d\"}.fa-creative-commons:before{content:\"\\f25e\"}.fa-gg:before{content:\"\\f260\"}.fa-gg-circle:before{content:\"\\f261\"}.fa-tripadvisor:before{content:\"\\f262\"}.fa-odnoklassniki:before{content:\"\\f263\"}.fa-odnoklassniki-square:before{content:\"\\f264\"}.fa-get-pocket:before{content:\"\\f265\"}.fa-wikipedia-w:before{content:\"\\f266\"}.fa-safari:before{content:\"\\f267\"}.fa-chrome:before{content:\"\\f268\"}.fa-firefox:before{content:\"\\f269\"}.fa-opera:before{content:\"\\f26a\"}.fa-internet-explorer:before{content:\"\\f26b\"}.fa-tv:before,.fa-television:before{content:\"\\f26c\"}.fa-contao:before{content:\"\\f26d\"}.fa-500px:before{content:\"\\f26e\"}.fa-amazon:before{content:\"\\f270\"}.fa-calendar-plus-o:before{content:\"\\f271\"}.fa-calendar-minus-o:before{content:\"\\f272\"}.fa-calendar-times-o:before{content:\"\\f273\"}.fa-calendar-check-o:before{content:\"\\f274\"}.fa-industry:before{content:\"\\f275\"}.fa-map-pin:before{content:\"\\f276\"}.fa-map-signs:before{content:\"\\f277\"}.fa-map-o:before{content:\"\\f278\"}.fa-map:before{content:\"\\f279\"}.fa-commenting:before{content:\"\\f27a\"}.fa-commenting-o:before{content:\"\\f27b\"}.fa-houzz:before{content:\"\\f27c\"}.fa-vimeo:before{content:\"\\f27d\"}.fa-black-tie:before{content:\"\\f27e\"}.fa-fonticons:before{content:\"\\f280\"}.fa-reddit-alien:before{content:\"\\f281\"}.fa-edge:before{content:\"\\f282\"}.fa-credit-card-alt:before{content:\"\\f283\"}.fa-codiepie:before{content:\"\\f284\"}.fa-modx:before{content:\"\\f285\"}.fa-fort-awesome:before{content:\"\\f286\"}.fa-usb:before{content:\"\\f287\"}.fa-product-hunt:before{content:\"\\f288\"}.fa-mixcloud:before{content:\"\\f289\"}.fa-scribd:before{content:\"\\f28a\"}.fa-pause-circle:before{content:\"\\f28b\"}.fa-pause-circle-o:before{content:\"\\f28c\"}.fa-stop-circle:before{content:\"\\f28d\"}.fa-stop-circle-o:before{content:\"\\f28e\"}.fa-shopping-bag:before{content:\"\\f290\"}.fa-shopping-basket:before{content:\"\\f291\"}.fa-hashtag:before{content:\"\\f292\"}.fa-bluetooth:before{content:\"\\f293\"}.fa-bluetooth-b:before{content:\"\\f294\"}.fa-percent:before{content:\"\\f295\"}.custom-bg{background:#EAF0F2}.custom-bg-dark{background:#1C1F23}.jazz-timeline-wrapper,.jazz-timeline-wrapper *{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;padding:0;margin:0}.jazz-timeline-wrapper{width:90%;max-width:1024px;margin:4em auto;font-family:\"Alegreya Sans\",Arial,Helvetica,sans-serif;font-weight:400}.jazz-timeline{padding:20px 0;position:relative}.jazz-timeline:before,.multiline-timeline .timeline-post:before{content:\"\";background-color:#C1C1C1;background-image:-webkit-linear-gradient(top,#EAF0F2 0%,#C1C1C1 8%,#C1C1C1 92%,#EAF0F2 100%);background-image:-moz-linear-gradient(top,#EAF0F2 0%,#C1C1C1 8%,#C1C1C1 92%,#EAF0F2 100%);background-image:-ms-linear-gradient(top,#EAF0F2 0%,#C1C1C1 8%,#C1C1C1 92%,#EAF0F2 100%);*/-webkit-border-radius:2px;-moz-border-radius:2px;border-radius:2px;margin-left:-2px;position:absolute;display:block;height:100%;width:4px;left:50%;top:0}.multiline-timeline .timeline-post:before{background-image:none;-webkit-border-radius:0;-moz-border-radius:0;border-radius:0}.multiline-timeline:before{display:none}.thin-timeline:before,.multiline-timeline.thin-timeline .timeline-post:before{margin-left:-1px;width:2px}.multiline-timeline .timeline-post{position:relative}.jazz-timeline .timeline-post{margin:0;border:0 none;padding:0 60px 5px 0;width:50%}.jazz-timeline .timeline-post:nth-child(even){margin-left:50%;padding:0 0 5px 60px}.jazz-timeline .timeline-post:last-child,.jazz-timeline .timeline-post:nth-child(even):last-child{padding-bottom:0}.jazz-timeline .timeline-post .timeline-meta{left:50%;color:#999;margin:28px 0 0 50px;position:absolute;font-weight:500}.jazz-timeline .timeline-post:nth-child(even) .timeline-meta{left:auto;margin:25px 50px 0 0;text-align:right;right:50%}.jazz-timeline .timeline-post .timeline-meta .meta-details{color:#6A7686}.jazz-timeline .timeline-post .for-large-icons{margin:45px 0 0 50px}.jazz-timeline .timeline-post:nth-child(even) .for-large-icons{margin:45px 50px 0 0}.jazz-timeline.one-sided:before{left:0}.jazz-timeline.one-sided .timeline-post,.jazz-timeline.one-sided .timeline-post:nth-child(even){margin:0;padding:0 0 30px 60px;width:100%}.jazz-timeline.one-sided .timeline-post .timeline-time,.jazz-timeline.one-sided .timeline-post:nth-child(even) .timeline-time{left:0;right:0;margin:0 0 5px;position:relative;text-align:left}.jazz-timeline.one-sided .timeline-post .timeline-icon{left:0;margin:22px 0 0 -35px}.jazz-timeline.one-sided .timeline-post .timeline-meta,.jazz-timeline.one-sided .timeline-post:nth-child(even) .timeline-meta{left:0;right:0;margin:0 0 10px;position:relative;text-align:left}.jazz-timeline .timeline-post .timeline-icon{background:#fff;line-height:70px;position:absolute;text-align:center;margin:22px 0 0 -35px;-webkit-border-radius:40px;-moz-border-radius:40px;border-radius:40px;color:#171717;font-size:18px;height:70px;width:70px;left:50%;z-index:10}.jazz-timeline .timeline-post .timeline-icon .icon-placeholder{line-height:30px;font-weight:500;font-size:13px;padding:5px 0}.jazz-timeline .timeline-post .timeline-icon .icon-placeholder span{display:block;font-family:\"Alegreya Sans\",Arial,Helvetica,sans-serif;line-height:12px;font-weight:700;font-size:30px}.jazz-timeline .timeline-post .timeline-icon .icon-placeholder i{font-size:28px;position:relative;line-height:62px}.jazz-timeline .timeline-post .icon-dot,.jazz-timeline.one-sided .timeline-post .icon-dot{background:#EAF0F2;-webkit-border-radius:20px;-moz-border-radius:20px;border-radius:20px;margin:30px 0 0 -7px;height:14px;width:14px}.jazz-timeline .timeline-post .icon-dot .timeline-bar,.jazz-timeline.one-sided .timeline-post .icon-dot .timeline-bar{height:4px;width:4px;background:#C1C1C1;position:absolute;left:5px;top:5px}.jazz-timeline .timeline-post .icon-dot,.jazz-timeline.one-sided .timeline-post .icon-dot,.jazz-timeline .timeline-post .icon-dot .timeline-bar,.jazz-timeline.one-sided .timeline-post .icon-dot .timeline-bar{-webkit-border-radius:20px;-moz-border-radius:20px;border-radius:20px}.jazz-timeline .timeline-post .icon-dot-full,.jazz-timeline.one-sided .timeline-post .icon-dot-full{background:#C1C1C1;margin:30px 0 0 -7px;-webkit-border-radius:20px;-moz-border-radius:20px;border-radius:20px;height:14px;width:14px}.jazz-timeline .timeline-post .icon-dot-full-white,.jazz-timeline.one-sided .timeline-post .icon-dot-full-white{background:#FFF;margin:30px 0 0 -7px;-webkit-box-shadow:0 0 0 2px rgba(0,0,0,0.2);-moz-box-shadow:0 0 0 2px rgba(0,0,0,0.2);box-shadow:0 0 0 2px rgba(0,0,0,0.2);-webkit-border-radius:20px;-moz-border-radius:20px;border-radius:20px;height:14px;width:14px}.jazz-timeline .timeline-post .icon-dot-full-white .timeline-bar,.jazz-timeline.one-sided .timeline-post .icon-dot-full-white .timeline-bar{height:4px;width:4px;background:#C1C1C1;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;position:absolute;left:5px;top:5px}.jazz-timeline .timeline-post .iconbg-red{background:#F25B5A}.jazz-timeline .timeline-post .iconbg-opal{background:#76BBDA}.jazz-timeline .timeline-post .iconbg-blue{background:#2196F3}.jazz-timeline .timeline-post .iconbg-grey{background:#7E8DA3}.jazz-timeline .timeline-post .iconbg-pink{background:#F282C7}.jazz-timeline .timeline-post .iconbg-black{background:#2F3949}.jazz-timeline .timeline-post .iconbg-green{background:#75CE66}.jazz-timeline .timeline-post .iconbg-brown{background:#E46D2B}.jazz-timeline .timeline-post .iconbg-white{background:#FFF}.jazz-timeline .timeline-post .iconbg-purple{background:#9C27B0}.jazz-timeline .timeline-post .iconbg-indigo{background:#3F51B5}.jazz-timeline .timeline-post .iconbg-orange{background:#F0CA45}.jazz-timeline .timeline-post .iconbg-turqoise{background:#28C0C6}.jazz-timeline .timeline-post .iconbg-red,.jazz-timeline .timeline-post .iconbg-opal,.jazz-timeline .timeline-post .iconbg-blue,.jazz-timeline .timeline-post .iconbg-grey,.jazz-timeline .timeline-post .iconbg-pink,.jazz-timeline .timeline-post .iconbg-green,.jazz-timeline .timeline-post .iconbg-black,.jazz-timeline .timeline-post .iconbg-brown,.jazz-timeline .timeline-post .iconbg-white,.jazz-timeline .timeline-post .iconbg-purple,.jazz-timeline .timeline-post .iconbg-indigo,.jazz-timeline .timeline-post .iconbg-orange,.jazz-timeline .timeline-post .iconbg-turqoise{-webkit-box-shadow:0 0 0 4px white,inset 0 2px 0 rgba(0,0,0,0.15),0 3px 0 4px rgba(0,0,0,0.15);-moz-box-shadow:0 0 0 4px white,inset 0 2px 0 rgba(0,0,0,0.15),0 3px 0 4px rgba(0,0,0,0.15);box-shadow:0 0 0 4px white,inset 0 2px 0 rgba(0,0,0,0.15),0 3px 0 4px rgba(0,0,0,0.15)}.jazz-timeline .timeline-post .icon-color-white{color:#FFF}.jazz-timeline .timeline-post .icon-color-black{color:#000}.jazz-timeline .timeline-post .timeline-content{background:#fff;position:relative;border:1px solid #fff;-webkit-transition:all .4s;-moz-transition:all .4s;transition:all .4s;-webkit-border-radius:5px;-moz-border-radius:5px;border-radius:5px;padding:30px}.jazz-timeline .timeline-post.no-padding .timeline-content{padding:0}.jazz-timeline .timeline-post .timeline-content p{margin:15px 0 10px;line-height:25px;font-size:16px;font-weight:400}.jazz-timeline .timeline-post .timeline-content .content-title{font-size:24px;font-family:\"Alegreya Sans\",Arial,Helvetica,sans-serif;margin:0 0 10px;color:#27ACCE;font-weight:500}.jazz-timeline .timeline-post .timeline-content .content-title span{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.jazz-timeline .timeline-post .timeline-content .content-details{margin:0}.jazz-timeline .timeline-post .timeline-content:before,.jazz-timeline .timeline-post .timeline-content:after{content:\"\";display:block;border:15px solid transparent;border-left-color:#fff;position:absolute;right:-30px;top:26px}.jazz-timeline .timeline-post .timeline-content:after{border:14px solid transparent;border-left-color:#fff;right:-28px;top:27px}.jazz-timeline .timeline-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#fff;left:-30px;right:auto}.jazz-timeline .timeline-post:nth-child(even) .timeline-content:after{border:14px solid transparent;border-right-color:#fff;left:-28px;right:auto}.jazz-timeline.one-sided .timeline-post .timeline-content:after,.jazz-timeline.one-sided .timeline-post .timeline-content:before{border:15px solid transparent;border-right-color:#fff;left:-30px;right:auto}.jazz-timeline.one-sided .timeline-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .timeline-post:nth-child(even) .timeline-content:before{border:14px solid transparent;border-right-color:#fff;left:-28px;right:auto}.jazz-timeline .red-post .timeline-content{background:#F25B5A;border:1px solid #F25B5A;color:#fff}.jazz-timeline .red-post .timeline-content .content-title{color:#fff}.jazz-timeline .red-post .timeline-content:after,.jazz-timeline .red-post .timeline-content:before{border-left-color:#F25B5A}.jazz-timeline .red-post:nth-child(even) .timeline-content:after,.jazz-timeline .red-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .red-post .timeline-content:after,.jazz-timeline.one-sided .red-post .timeline-content:before,.jazz-timeline.one-sided .red-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .red-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#F25B5A}.jazz-timeline .opal-post .timeline-content{background:#76BBDA;border:1px solid #76BBDA;color:#fff}.jazz-timeline .opal-post .timeline-content .content-title{color:#fff}.jazz-timeline .opal-post .timeline-content:after,.jazz-timeline .opal-post .timeline-content:before{border-left-color:#76BBDA}.jazz-timeline .opal-post:nth-child(even) .timeline-content:after,.jazz-timeline .opal-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .opal-post .timeline-content:after,.jazz-timeline.one-sided .opal-post .timeline-content:before,.jazz-timeline.one-sided .opal-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .opal-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#76BBDA}.jazz-timeline .blue-post .timeline-content{background:#2196F3;border:1px solid #2196F3;color:#fff}.jazz-timeline .blue-post .timeline-content .content-title{color:#fff}.jazz-timeline .blue-post .timeline-content:after,.jazz-timeline .blue-post .timeline-content:before{border-left-color:#2196F3}.jazz-timeline .blue-post:nth-child(even) .timeline-content:after,.jazz-timeline .blue-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .blue-post .timeline-content:after,.jazz-timeline.one-sided .blue-post .timeline-content:before,.jazz-timeline.one-sided .blue-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .blue-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#2196F3}.jazz-timeline .grey-post .timeline-content{background:#7E8DA3;border:1px solid #7E8DA3;color:#fff}.jazz-timeline .grey-post .timeline-content .content-title{color:#fff}.jazz-timeline .grey-post .timeline-content:after,.jazz-timeline .grey-post .timeline-content:before{border-left-color:#7E8DA3}.jazz-timeline .grey-post:nth-child(even) .timeline-content:after,.jazz-timeline .grey-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .grey-post .timeline-content:after,.jazz-timeline.one-sided .grey-post .timeline-content:before,.jazz-timeline.one-sided .grey-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .grey-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#7E8DA3}.jazz-timeline .pink-post .timeline-content{background:#F282C7;border:1px solid #F282C7;color:#fff}.jazz-timeline .pink-post .timeline-content .content-title{color:#fff}.jazz-timeline .pink-post .timeline-content:after,.jazz-timeline .pink-post .timeline-content:before{border-left-color:#F282C7}.jazz-timeline .pink-post:nth-child(even) .timeline-content:after,.jazz-timeline .pink-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .pink-post .timeline-content:after,.jazz-timeline.one-sided .pink-post .timeline-content:before,.jazz-timeline.one-sided .pink-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .pink-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#F282C7}.jazz-timeline .green-post .timeline-content{background:#75CE66;border:1px solid #75CE66;color:#fff}.jazz-timeline .green-post .timeline-content .content-title{color:#fff}.jazz-timeline .green-post .timeline-content:after,.jazz-timeline .green-post .timeline-content:before{border-left-color:#75CE66}.jazz-timeline .green-post:nth-child(even) .timeline-content:after,.jazz-timeline .green-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .green-post .timeline-content:after,.jazz-timeline.one-sided .green-post .timeline-content:before,.jazz-timeline.one-sided .green-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .green-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#75CE66}.jazz-timeline .white-post .timeline-content{background:#FFF;border:1px solid #FFF}.jazz-timeline .white-post .timeline-content:after,.jazz-timeline .white-post .timeline-content:before{border-left-color:#FFF}.jazz-timeline .white-post:nth-child(even) .timeline-content:after,.jazz-timeline .white-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .white-post .timeline-content:after,.jazz-timeline.one-sided .white-post .timeline-content:before,.jazz-timeline.one-sided .white-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .white-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#FFF}.jazz-timeline .purple-post .timeline-content{background:#9C27B0;border:1px solid #9C27B0;color:#fff}.jazz-timeline .purple-post .timeline-content .content-title{color:#fff}.jazz-timeline .purple-post .timeline-content:after,.jazz-timeline .purple-post .timeline-content:before{border-left-color:#9C27B0}.jazz-timeline .purple-post:nth-child(even) .timeline-content:after,.jazz-timeline .purple-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .purple-post .timeline-content:after,.jazz-timeline.one-sided .purple-post .timeline-content:before,.jazz-timeline.one-sided .purple-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .purple-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#9C27B0}.jazz-timeline .indigo-post .timeline-content{background:#3F51B5;border:1px solid #3F51B5;color:#fff}.jazz-timeline .indigo-post .timeline-content .content-title{color:#fff}.jazz-timeline .indigo-post .timeline-content:after,.jazz-timeline .indigo-post .timeline-content:before{border-left-color:#3F51B5}.jazz-timeline .indigo-post:nth-child(even) .timeline-content:after,.jazz-timeline .indigo-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .indigo-post .timeline-content:after,.jazz-timeline.one-sided .indigo-post .timeline-content:before,.jazz-timeline.one-sided .indigo-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .indigo-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#3F51B5}.jazz-timeline .orange-post .timeline-content{background:#F0CA45;border:1px solid #F0CA45;color:#fff}.jazz-timeline .orange-post .timeline-content .content-title{color:#fff}.jazz-timeline .orange-post .timeline-content:after,.jazz-timeline .orange-post .timeline-content:before{border-left-color:#F0CA45}.jazz-timeline .orange-post:nth-child(even) .timeline-content:after,.jazz-timeline .orange-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .orange-post .timeline-content:after,.jazz-timeline.one-sided .orange-post .timeline-content:before,.jazz-timeline.one-sided .orange-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .orange-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#F0CA45}.jazz-timeline .turqoise-post .timeline-content{background:#28C0C6;border:1px solid #28C0C6;color:#fff}.jazz-timeline .turqoise-post .timeline-content .content-title{color:#fff}.jazz-timeline .turqoise-post .timeline-content:after,.jazz-timeline .turqoise-post .timeline-content:before{border-left-color:#28C0C6}.jazz-timeline .turqoise-post:nth-child(even) .timeline-content:after,.jazz-timeline .turqoise-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .turqoise-post .timeline-content:after,.jazz-timeline.one-sided .turqoise-post .timeline-content:before,.jazz-timeline.one-sided .turqoise-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .turqoise-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#28C0C6}.jazz-timeline .brown-post .timeline-content{background:#E46D2B;border:1px solid #E46D2B;color:#fff}.jazz-timeline .brown-post .timeline-content .content-title{color:#fff}.jazz-timeline .brown-post .timeline-content:after,.jazz-timeline .brown-post .timeline-content:before{border-left-color:#E46D2B}.jazz-timeline .brown-post:nth-child(even) .timeline-content:after,.jazz-timeline .brown-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .brown-post .timeline-content:after,.jazz-timeline.one-sided .brown-post .timeline-content:before,.jazz-timeline.one-sided .brown-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .brown-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#E46D2B}.jazz-timeline .black-post .timeline-content{background:#2F3949;border:1px solid #2F3949;color:#fff}.jazz-timeline .black-post .timeline-content .content-title{color:#fff}.jazz-timeline .black-post .timeline-content:after,.jazz-timeline .black-post .timeline-content:before{border-left-color:#2F3949}.jazz-timeline .black-post:nth-child(even) .timeline-content:after,.jazz-timeline .black-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .black-post .timeline-content:after,.jazz-timeline.one-sided .black-post .timeline-content:before,.jazz-timeline.one-sided .black-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .black-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#2F3949}.jazz-timeline .light-grey-post .timeline-content{background:#F0F2F4;border:1px solid #F0F2F4;-webkit-border-radius:8px 8px 5px 5px;-moz-border-radius:8px 8px 5px 5px;border-radius:8px 8px 5px 5px;color:#474B51}.jazz-timeline .light-grey-post .timeline-content .content-title{color:#fff;-webkit-border-radius:4px 4px 0 0;-moz-border-radius:4px 4px 0 0;border-radius:4px 4px 0 0}.solid-shadow .timeline-post .timeline-content{-webkit-box-shadow:0 4px rgba(0,0,0,0.2);-moz-box-shadow:0 4px rgba(0,0,0,0.2);box-shadow:0 4px rgba(0,0,0,0.2)}.solid-shadow .timeline-post .timeline-content:before{border:15px solid transparent;border-left-color:rgba(0,0,0,0.2);right:-31px;top:29px}.solid-shadow .timeline-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:rgba(0,0,0,0.2);left:-31px;top:30px}.bordered-timeline .timeline-post .timeline-content{border:1px solid #ccc}.bordered-timeline .timeline-post .timeline-content:before{border:15px solid transparent;border-left-color:#bbb;right:-30px;top:26px}.bordered-timeline .timeline-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#bbb;left:-30px;top:26px}.jazz-timeline.bordered-timeline.one-sided .timeline-post .timeline-content:after,.jazz-timeline.bordered-timeline.one-sided .timeline-post:nth-child(even) .timeline-content:after{border:14px solid transparent;border-right-color:#fff;left:-28px;right:auto}.jazz-timeline.bordered-timeline.one-sided .timeline-post .timeline-content:before,.jazz-timeline.bordered-timeline.one-sided .timeline-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#aaa;left:-30px;top:26px}.dark-timeline:before,.dark-timeline.ultimate-style:before,.jazz-timeline.dark-timeline.one-sided:before{background-color:#32363B;background-image:-webkit-linear-gradient(top,#1C1F23 0%,#32363B 8%,#32363B 92%,#1C1F23 100%);background-image:-moz-linear-gradient(top,#1C1F23 0%,#32363B 8%,#32363B 92%,#1C1F23 100%);background-image:-ms-linear-gradient(top,#1C1F23 0%,#32363B 8%,#32363B 92%,#1C1F23 100%)}.dark-timeline .timeline-post .icon-dot-full,.dark-timeline .timeline-post .icon-dot .timeline-bar,.jazz-timeline.dark-timeline.one-sided .timeline-post .icon-dot-full,.dark-timeline.ultimate-style .timeline-post .icon-dot .timeline-bar,.jazz-timeline.dark-timeline.one-sided .timeline-post .icon-dot .timeline-bar,.dark-timeline.ultimate-style .timeline-post .icon-dot-full-white .timeline-bar,.jazz-timeline.dark-timeline.one-sided .timeline-post .icon-dot-full-white .timeline-bar{background:#32363B}.dark-timeline .timeline-post .icon-dot,.dark-timeline.ultimate-style .timeline-post .icon-dot,.jazz-timeline.dark-timeline.one-sided .timeline-post .icon-dot{background:#1C1F23}.dark-timeline .timeline-post .iconbg-red,.dark-timeline .timeline-post .iconbg-opal,.dark-timeline .timeline-post .iconbg-blue,.dark-timeline .timeline-post .iconbg-grey,.dark-timeline .timeline-post .iconbg-pink,.dark-timeline .timeline-post .iconbg-green,.dark-timeline .timeline-post .iconbg-black,.dark-timeline .timeline-post .iconbg-brown,.dark-timeline .timeline-post .iconbg-white,.dark-timeline .timeline-post .iconbg-purple,.dark-timeline .timeline-post .iconbg-indigo,.dark-timeline .timeline-post .iconbg-orange,.dark-timeline .timeline-post .iconbg-turqoise{-webkit-box-shadow:0 0 0 4px #fff,inset 0 2px 0 rgba(0,0,0,0),0 3px 0 4px rgba(0,0,0,0);-moz-box-shadow:0 0 0 4px #fff,inset 0 2px 0 rgba(0,0,0,0),0 3px 0 4px rgba(0,0,0,0);box-shadow:0 0 0 4px #fff,inset 0 2px 0 rgba(0,0,0,0),0 3px 0 4px rgba(0,0,0,0)}.white-timeline:before,.jazz-timeline.white-timeline.one-sided:before{background-color:#32363B;background-image:-webkit-linear-gradient(top,#FFF 0%,#C1C1C1 8%,#C1C1C1 92%,#FFF 100%);background-image:-moz-linear-gradient(top,#FFF 0%,#C1C1C1 8%,#C1C1C1 92%,#FFF 100%);background-image:-ms-linear-gradient(top,#FFF 0%,#C1C1C1 8%,#C1C1C1 92%,#FFF 100%)}.white-timeline .timeline-post .icon-dot-full,.white-timeline .timeline-post .icon-dot .timeline-bar,.jazz-timeline.white-timeline.one-sided .timeline-post .icon-dot-full,.white-timeline .timeline-post .icon-dot-full-white .timeline-bar,.jazz-timeline.white-timeline.one-sided .timeline-post .icon-dot .timeline-bar,.jazz-timeline.white-timeline.one-sided .timeline-post .icon-dot-full-white .timeline-bar{background:#C1C1C1}.white-timeline .timeline-post .icon-dot,.jazz-timeline.white-timeline.one-sided .timeline-post .icon-dot{background:#FFF}.white-timeline .timeline-post .iconbg-red,.white-timeline .timeline-post .iconbg-opal,.white-timeline .timeline-post .iconbg-blue,.white-timeline .timeline-post .iconbg-grey,.white-timeline .timeline-post .iconbg-pink,.white-timeline .timeline-post .iconbg-green,.white-timeline .timeline-post .iconbg-black,.white-timeline .timeline-post .iconbg-brown,.white-timeline .timeline-post .iconbg-white,.white-timeline .timeline-post .iconbg-purple,.white-timeline .timeline-post .iconbg-indigo,.white-timeline .timeline-post .iconbg-orange,.white-timeline .timeline-post .iconbg-turqoise{-webkit-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0.05),0 0 0 8px rgba(0,0,0,0.2);-moz-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0.05),0 0 0 8px rgba(0,0,0,0.2);box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0.05),0 0 0 8px rgba(0,0,0,0.2)}.ultimate-style .timeline-post .timeline-content{padding:0;border:0}.ultimate-style .timeline-post .timeline-content:before,.ultimate-style .timeline-post .timeline-content:after{display:none}.ultimate-style .timeline-post .timeline-content .content-details{padding:30px;padding-top:20px}.ultimate-style .timeline-post .timeline-content .content-title{margin:0;padding:18px 30px;-webkit-border-radius:5px 5px 0 0;-moz-border-radius:5px 5px 0 0;border-radius:5px 5px 0 0;position:relative}.ultimate-style .timeline-post .red-title{background:#DC4747;color:#fff}.ultimate-style .timeline-post .opal-title{background:#49A7CF;color:#fff}.ultimate-style .timeline-post .blue-title{background:#0D83E3;color:#fff}.ultimate-style .timeline-post .grey-title{background:#697892;color:#fff}.ultimate-style .timeline-post .pink-title{background:#EC4AAF;color:#fff}.ultimate-style .timeline-post .black-title{background:#28313E;color:#fff}.ultimate-style .timeline-post .green-title{background:#4EB83A;color:#fff}.ultimate-style .timeline-post .brown-title{background:#D75E1C;color:#fff}.ultimate-style .timeline-post .white-title{background:#FFF;color:#fff}.ultimate-style .timeline-post .purple-title{background:#872299;color:#fff}.ultimate-style .timeline-post .indigo-title{background:#3848A0;color:#fff}.ultimate-style .timeline-post .orange-title{background:#E6B613;color:#fff}.ultimate-style .timeline-post .turqoise-title{background:#25ACB4;color:#fff}.ultimate-style .timeline-post .timeline-content .content-title:before{content:\"\";display:block;border:15px solid transparent;border-left-color:#fff;position:absolute;right:-24px;top:20px}.ultimate-style .timeline-post:nth-child(even) .timeline-content .content-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .content-title:before{border:15px solid transparent;border-right-color:#fff;left:-24px;right:auto}.ultimate-style .timeline-post .timeline-content .turqoise-title:before{border-left-color:#25ACB4}.ultimate-style .timeline-post:nth-child(even) .timeline-content .turqoise-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .turqoise-title:before{border-right-color:#25ACB4}.ultimate-style .timeline-post .timeline-content .orange-title:before{border-left-color:#E6B613}.ultimate-style .timeline-post:nth-child(even) .timeline-content .orange-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .orange-title:before{border-right-color:#E6B613}.ultimate-style .timeline-post .timeline-content .indigo-title:before{border-left-color:#3848A0}.ultimate-style .timeline-post:nth-child(even) .timeline-content .indigo-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .indigo-title:before{border-right-color:#3848A0}.ultimate-style .timeline-post .timeline-content .purple-title:before{border-left-color:#872299}.ultimate-style .timeline-post:nth-child(even) .timeline-content .purple-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .purple-title:before{border-right-color:#872299}.ultimate-style .timeline-post .timeline-content .white-title:before{border-left-color:#FFF}.ultimate-style .timeline-post:nth-child(even) .timeline-content .white-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .white-title:before{border-right-color:#FFF}.ultimate-style .timeline-post .timeline-content .brown-title:before{border-left-color:#D75E1C}.ultimate-style .timeline-post:nth-child(even) .timeline-content .brown-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .brown-title:before{border-right-color:#D75E1C}.ultimate-style .timeline-post .timeline-content .green-title:before{border-left-color:#4EB83A}.ultimate-style .timeline-post:nth-child(even) .timeline-content .green-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .green-title:before{border-right-color:#4EB83A}.ultimate-style .timeline-post .timeline-content .black-title:before{border-left-color:#28313E}.ultimate-style .timeline-post:nth-child(even) .timeline-content .black-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .black-title:before{border-right-color:#28313E}.ultimate-style .timeline-post .timeline-content .pink-title:before{border-left-color:#EC4AAF}.ultimate-style .timeline-post:nth-child(even) .timeline-content .pink-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .pink-title:before{border-right-color:#EC4AAF}.ultimate-style .timeline-post .timeline-content .grey-title:before{border-left-color:#697892}.ultimate-style .timeline-post:nth-child(even) .timeline-content .grey-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .grey-title:before{border-right-color:#697892}.ultimate-style .timeline-post .timeline-content .blue-title:before{border-left-color:#0D83E3}.ultimate-style .timeline-post:nth-child(even) .timeline-content .blue-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .blue-title:before{border-right-color:#0D83E3}.ultimate-style .timeline-post .timeline-content .opal-title:before{border-left-color:#49A7CF}.ultimate-style .timeline-post:nth-child(even) .timeline-content .opal-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .opal-title:before{border-right-color:#49A7CF}.ultimate-style .timeline-post .timeline-content .red-title:before{border-left-color:#DC4747}.ultimate-style .timeline-post:nth-child(even) .timeline-content .red-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .red-title:before{border-right-color:#DC4747}.multiline-timeline .timeline-post .iconbg-red,.multiline-timeline .timeline-post .iconbg-opal,.multiline-timeline .timeline-post .iconbg-blue,.multiline-timeline .timeline-post .iconbg-grey,.multiline-timeline .timeline-post .iconbg-pink,.multiline-timeline .timeline-post .iconbg-green,.multiline-timeline .timeline-post .iconbg-black,.multiline-timeline .timeline-post .iconbg-brown,.multiline-timeline .timeline-post .iconbg-white,.multiline-timeline .timeline-post .iconbg-purple,.multiline-timeline .timeline-post .iconbg-indigo,.multiline-timeline .timeline-post .iconbg-orange,.multiline-timeline .timeline-post .iconbg-turqoise{-webkit-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0.05),0 0 0 8px #C1C1C1;-moz-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0.05),0 0 0 8px #C1C1C1;box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0.05),0 0 0 8px #C1C1C1}.multiline-timeline .timeline-post:before,.multiline-timeline .timeline-post .timeline-icon,.multiline-timeline .timeline-post .timeline-meta{left:100%}.multiline-timeline.one-sided .timeline-post:before,.multiline-timeline .timeline-post:nth-child(even):before,.multiline-timeline .timeline-post:nth-child(even) .timeline-icon,.multiline-timeline.one-sided .timeline-post:nth-child(even):before{left:0}.multiline-timeline .timeline-post:nth-child(even) .timeline-meta{right:100%}.multiline-timeline .timeline-post .timeline-meta .meta-details{white-space:nowrap}.multiline-timeline .turqoise-trail:before,.multiline-timeline .turqoise-trail .icon-dot-full,.multiline-timeline .turqoise-trail .icon-dot-full-white .timeline-bar,.multiline-timeline.one-sided .timeline-post.turqoise-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.turqoise-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.turqoise-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .turqoise-trail .icon-dot .timeline-bar{background:#28C0C6}.multiline-timeline .turqoise-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.turqoise-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #28C0C6;-moz-box-shadow:0 0 0 2px #28C0C6;box-shadow:0 0 0 2px #28C0C6}.multiline-timeline .turqoise-trail .iconbg-turqoise{-webkit-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #28C0C6;-moz-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #28C0C6;box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #28C0C6}.multiline-timeline .black-trail:before,.multiline-timeline .black-trail .icon-dot-full,.multiline-timeline .black-trail .icon-dot-full-white .timeline-bar,.multiline-timeline.one-sided .timeline-post.black-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.black-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.black-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .black-trail .icon-dot .timeline-bar{background:#2F3949}.multiline-timeline .black-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.black-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #2F3949;-moz-box-shadow:0 0 0 2px #2F3949;box-shadow:0 0 0 2px #2F3949}.multiline-timeline .black-trail .iconbg-black{-webkit-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #2F3949;-moz-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #2F3949;box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #2F3949}.multiline-timeline .brown-trail:before,.multiline-timeline .brown-trail .icon-dot-full,.multiline-timeline .brown-trail .icon-dot-full-white .timeline-bar,.multiline-timeline.one-sided .timeline-post.brown-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.brown-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.brown-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .brown-trail .icon-dot .timeline-bar{background:#E46D2B}.multiline-timeline .brown-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.brown-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #E46D2B;-moz-box-shadow:0 0 0 2px #E46D2B;box-shadow:0 0 0 2px #E46D2B}.multiline-timeline .brown-trail .iconbg-brown{-webkit-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #E46D2B;-moz-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #E46D2B;box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #E46D2B}.multiline-timeline .indigo-trail:before,.multiline-timeline .indigo-trail .icon-dot-full,.multiline-timeline .indigo-trail .icon-dot-full-white .timeline-bar,.multiline-timeline.one-sided .timeline-post.indigo-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.indigo-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.indigo-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .indigo-trail .icon-dot .timeline-bar{background:#3F51B5}.multiline-timeline .indigo-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.indigo-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #3F51B5;-moz-box-shadow:0 0 0 2px #3F51B5;box-shadow:0 0 0 2px #3F51B5}.multiline-timeline .indigo-trail .iconbg-indigo{-webkit-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #3F51B5;-moz-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #3F51B5;box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #3F51B5}.multiline-timeline .purple-trail:before,.multiline-timeline .purple-trail .icon-dot-full,.multiline-timeline .purple-trail .icon-dot-full-white .timeline-bar,.multiline-timeline.one-sided .timeline-post.purple-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.purple-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.purple-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .purple-trail .icon-dot .timeline-bar{background:#9C27B0}.multiline-timeline .purple-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.purple-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #9C27B0;-moz-box-shadow:0 0 0 2px #9C27B0;box-shadow:0 0 0 2px #9C27B0}.multiline-timeline .purple-trail .iconbg-purple{-webkit-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #9C27B0;-moz-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #9C27B0;box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #9C27B0}.multiline-timeline .grey-trail:before,.multiline-timeline .grey-trail .icon-dot-full,.multiline-timeline .grey-trail .icon-dot-full-white .timeline-bar,.multiline-timeline.one-sided .timeline-post.grey-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.grey-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.grey-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .grey-trail .icon-dot .timeline-bar{background:#7E8DA3}.multiline-timeline .grey-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.grey-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #7E8DA3;-moz-box-shadow:0 0 0 2px #7E8DA3;box-shadow:0 0 0 2px #7E8DA3}.multiline-timeline .grey-trail .iconbg-grey{-webkit-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #7E8DA3;-moz-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #7E8DA3;box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #7E8DA3}.multiline-timeline .blue-trail:before,.multiline-timeline .blue-trail .icon-dot-full,.multiline-timeline .blue-trail .icon-dot-full-white .timeline-bar,.multiline-timeline.one-sided .timeline-post.blue-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.blue-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.blue-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .blue-trail .icon-dot .timeline-bar{background:#2196F3}.multiline-timeline .blue-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.blue-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #2196F3;-moz-box-shadow:0 0 0 2px #2196F3;box-shadow:0 0 0 2px #2196F3}.multiline-timeline .blue-trail .iconbg-blue{-webkit-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #2196F3;-moz-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #2196F3;box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #2196F3}.multiline-timeline .red-trail:before,.multiline-timeline .red-trail .icon-dot-full,.multiline-timeline .red-trail .icon-dot-full-white .timeline-bar,.multiline-timeline.one-sided .timeline-post.red-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.red-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.red-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .red-trail .icon-dot .timeline-bar{background:#F25B5A}.multiline-timeline .red-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.red-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #F25B5A;-moz-box-shadow:0 0 0 2px #F25B5A;box-shadow:0 0 0 2px #F25B5A}.multiline-timeline .red-trail .iconbg-red{-webkit-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #F25B5A;-moz-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #F25B5A;box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #F25B5A}.multiline-timeline .orange-trail:before,.multiline-timeline .orange-trail .icon-dot-full,.multiline-timeline .orange-trail .icon-dot-full-white .timeline-bar,.multiline-timeline.one-sided .timeline-post.orange-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.orange-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.orange-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .orange-trail .icon-dot .timeline-bar{background:#F0CA45}.multiline-timeline .orange-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.orange-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #F0CA45;-moz-box-shadow:0 0 0 2px #F0CA45;box-shadow:0 0 0 2px #F0CA45}.multiline-timeline .orange-trail .iconbg-orange{-webkit-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #F0CA45;-moz-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #F0CA45;box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #F0CA45}.multiline-timeline .opal-trail:before,.multiline-timeline .opal-trail .icon-dot-full,.multiline-timeline .opal-trail .icon-dot-full-white .timeline-bar,.multiline-timeline.one-sided .timeline-post.opal-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.opal-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.opal-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .opal-trail .icon-dot .timeline-bar{background:#76BBDA}.multiline-timeline .opal-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.opal-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #76BBDA;-moz-box-shadow:0 0 0 2px #76BBDA;box-shadow:0 0 0 2px #76BBDA}.multiline-timeline .opal-trail .iconbg-opal{-webkit-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #76BBDA;-moz-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #76BBDA;box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #76BBDA}.multiline-timeline .green-trail:before,.multiline-timeline .green-trail .icon-dot-full,.multiline-timeline .green-trail .icon-dot-full-white .timeline-bar,.multiline-timeline.one-sided .timeline-post.green-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.green-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.green-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .green-trail .icon-dot .timeline-bar{background:#75CE66}.multiline-timeline .green-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.green-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #75CE66;-moz-box-shadow:0 0 0 2px #75CE66;box-shadow:0 0 0 2px #75CE66}.multiline-timeline .green-trail .iconbg-green{-webkit-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #75CE66;-moz-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #75CE66;box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #75CE66}.multiline-timeline .pink-trail:before,.multiline-timeline .pink-trail .icon-dot-full,.multiline-timeline .pink-trail .icon-dot-full-white .timeline-bar,.multiline-timeline.one-sided .timeline-post.pink-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.pink-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.pink-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .pink-trail .icon-dot .timeline-bar{background:#F282C7}.multiline-timeline .pink-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.pink-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #F282C7;-moz-box-shadow:0 0 0 2px #F282C7;box-shadow:0 0 0 2px #F282C7}.multiline-timeline .pink-trail .iconbg-pink{-webkit-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #F282C7;-moz-box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #F282C7;box-shadow:0 0 0 4px white,inset 0 0 0 2px rgba(0,0,0,0),0 0 0 8px #F282C7}.jazz-timeline .timeline-post .timeline-content .video-box:last-child,.jazz-timeline .timeline-post .timeline-content blockquote:last-child{margin-bottom:0}.jazz-timeline .timeline-post .timeline-content img{max-width:100%;display:block;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}.jazz-timeline .timeline-post .content-details .map{display:block;height:200px;width:100%}.jazz-timeline .timeline-post .content-details .map-wrap{width:240px;overflow:hidden}.jazz-timeline .timeline-post .content-details .map-wrap .map-title{font-size:14px;text-transform:uppercase;line-height:normal;padding-bottom:4px;display:block;color:#27ACCE;width:100%;margin:0}.jazz-timeline .timeline-post .content-details .map-wrap p{clear:both;font-size:14px;display:block;padding-bottom:2px;color:#999;margin:0}.jazz-timeline .timeline-post .content-details .map-wrap .map-info{font-size:12px;margin-top:5px;color:#444}.jazz-timeline .timeline-post .content-details .map-wrap .map-info i{margin-right:5px;font-size:14px}.jazz-timeline .timeline-post .content-details .map,.jazz-timeline .timeline-post .content-details .media-container{margin-top:10px;border:5px solid #fff;-webkit-box-shadow:0 0 4px rgba(0,0,0,0.3);-moz-box-shadow:0 0 4px rgba(0,0,0,0.3);box-shadow:0 0 4px rgba(0,0,0,0.3)}.jazz-timeline .timeline-post .content-details .media-box{float:none;clear:both;width:100%;position:relative;padding-bottom:56.25%;padding-top:25px;height:0}.jazz-timeline .timeline-post .content-details .media-box iframe,.jazz-timeline .timeline-post .content-details .media-box object,.jazz-timeline .timeline-post .content-details .media-box embed,.jazz-timeline .timeline-post .content-details .media-box video{position:absolute;width:100%!important;height:100%!important;border:0;left:0;top:0}.jazz-timeline .timeline-post .content-details .audio-box iframe{width:100%!important;height:100%!important;display:block;margin:0;border:0}@media (max-width: 860px){.jazz-timeline:before,.multiline-timeline .timeline-post:before{left:16px}.jazz-timeline .timeline-post,.jazz-timeline .timeline-post:nth-child(even){margin:0;padding:0 0 30px 60px;width:100%}.jazz-timeline .timeline-post .timeline-meta,.jazz-timeline .timeline-post:nth-child(even) .timeline-meta{left:0;right:0;margin:0 0 5px;position:relative;text-align:left}.jazz-timeline .timeline-post .timeline-icon{left:0;margin:22px 0 0}.jazz-timeline .timeline-post .timeline-content:before,.jazz-timeline .timeline-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#fff;left:-30px;right:auto}.jazz-timeline .timeline-post .timeline-content:after,.jazz-timeline .timeline-post:nth-child(even) .timeline-content:after{border:14px solid transparent;border-right-color:#fff;left:-28px;right:auto}.jazz-timeline .red-post .timeline-content:after,.jazz-timeline .red-post .timeline-content:before,.jazz-timeline .red-post:nth-child(even) .timeline-content:after,.jazz-timeline .red-post:nth-child(even) .timeline-content:before{border-right-color:#F25B5A}.jazz-timeline .opal-post .timeline-content:after,.jazz-timeline .opal-post .timeline-content:before,.jazz-timeline .opal-post:nth-child(even) .timeline-content:after,.jazz-timeline .opal-post:nth-child(even) .timeline-content:before{border-right-color:#76BBDA}.jazz-timeline .blue-post .timeline-content:after,.jazz-timeline .blue-post .timeline-content:before,.jazz-timeline .blue-post:nth-child(even) .timeline-content:after,.jazz-timeline .blue-post:nth-child(even) .timeline-content:before{border-right-color:#2196F3}.jazz-timeline .grey-post .timeline-content:after,.jazz-timeline .grey-post .timeline-content:before,.jazz-timeline .grey-post:nth-child(even) .timeline-content:after,.jazz-timeline .grey-post:nth-child(even) .timeline-content:before{border-right-color:#7E8DA3}.jazz-timeline .pink-post .timeline-content:after,.jazz-timeline .pink-post .timeline-content:before,.jazz-timeline .pink-post:nth-child(even) .timeline-content:after,.jazz-timeline .pink-post:nth-child(even) .timeline-content:before{border-right-color:#F282C7}.jazz-timeline .green-post .timeline-content:after,.jazz-timeline .green-post .timeline-content:before,.jazz-timeline .green-post:nth-child(even) .timeline-content:after,.jazz-timeline .green-post:nth-child(even) .timeline-content:before{border-right-color:#75CE66}.jazz-timeline .white-post .timeline-content:after,.jazz-timeline .white-post .timeline-content:before,.jazz-timeline .white-post:nth-child(even) .timeline-content:after,.jazz-timeline .white-post:nth-child(even) .timeline-content:before{border-right-color:#FFF}.jazz-timeline .purple-post .timeline-content:after,.jazz-timeline .purple-post .timeline-content:before,.jazz-timeline .purple-post:nth-child(even) .timeline-content:after,.jazz-timeline .purple-post:nth-child(even) .timeline-content:before{border-right-color:#9C27B0}.jazz-timeline .indigo-post .timeline-content:after,.jazz-timeline .indigo-post .timeline-content:before,.jazz-timeline .indigo-post:nth-child(even) .timeline-content:after,.jazz-timeline .indigo-post:nth-child(even) .timeline-content:before{border-right-color:#3F51B5}.jazz-timeline .orange-post .timeline-content:after,.jazz-timeline .orange-post .timeline-content:before,.jazz-timeline .orange-post:nth-child(even) .timeline-content:after,.jazz-timeline .orange-post:nth-child(even) .timeline-content:before{border-right-color:#F0CA45}.jazz-timeline .turqoise-post .timeline-content:after,.jazz-timeline .turqoise-post .timeline-content:before,.jazz-timeline .turqoise-post:nth-child(even) .timeline-content:after,.jazz-timeline .turqoise-post:nth-child(even) .timeline-content:before{border-right-color:#28C0C6}.jazz-timeline .brown-post .timeline-content:after,.jazz-timeline .brown-post .timeline-content:before,.jazz-timeline .brown-post:nth-child(even) .timeline-content:after,.jazz-timeline .brown-post:nth-child(even) .timeline-content:before{border-right-color:#E46D2B}.jazz-timeline .black-post .timeline-content:after,.jazz-timeline .black-post .timeline-content:before,.jazz-timeline .black-post:nth-child(even) .timeline-content:after,.jazz-timeline .black-post:nth-child(even) .timeline-content:before{border-right-color:#2F3949}.solid-shadow .timeline-post .timeline-content:before,.solid-shadow .timeline-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:rgba(0,0,0,0.2);left:-31px;top:29px}.jazz-timeline .timeline-post .timeline-content .content-details img{width:100%}.jazz-timeline .timeline-post .icon-dot .timeline-bar{left:4px}.jazz-timeline .timeline-post .icon-dot{margin:30px 0 0 10px;height:14px;width:14px}.bordered-timeline .timeline-post .timeline-content:before,.bordered-timeline .timeline-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#bbb;left:-30px;top:26px}.jazz-timeline .timeline-post .icon-dot-full,.jazz-timeline .timeline-post .icon-dot-full-white{margin:30px 0 0 9px}.jazz-timeline .timeline-post .icon-larger,.jazz-timeline.one-sided .timeline-post .icon-larger{left:0;margin:22px 0 0 -10px;line-height:50px;height:50px;width:50px}.jazz-timeline.one-sided .timeline-post .icon-larger{margin:22px 0 0 -25px}.jazz-timeline.one-sided .timeline-post,.jazz-timeline.one-sided .timeline-post:nth-child(even){padding:0 0 30px 50px}.jazz-timeline .timeline-post .icon-larger .icon-placeholder{padding:2px 0}.jazz-timeline .timeline-post .icon-larger .icon-placeholder i{line-height:48px}.jazz-timeline .timeline-post .icon-larger .icon-placeholder span{line-height:0;font-weight:700;font-size:18px}.ultimate-style .timeline-post .timeline-content .content-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .content-title:before{content:\"\";display:block;border:15px solid transparent;border-right-color:#fff;position:absolute;left:-24px;right:auto;top:20px}.multiline-timeline .timeline-post:before,.multiline-timeline .timeline-post .timeline-icon,.multiline-timeline .timeline-post .timeline-meta,.multiline-timeline .timeline-post:nth-child(even):before,.multiline-timeline .timeline-post:nth-child(even) .timeline-meta,.multiline-timeline .timeline-post:nth-child(even) .timeline-icon{left:0;right:auto}.multiline-timeline .timeline-post .timeline-icon,.multiline-timeline .timeline-post:nth-child(even) .timeline-icon{margin:22px 0 0 -25px}.multiline-timeline .timeline-post .icon-dot,.multiline-timeline .timeline-post:nth-child(even) .icon-dot{margin:30px 0 0 -6px}.multiline-timeline .timeline-post .icon-dot-full,.multiline-timeline .timeline-post .icon-dot-full-white,.multiline-timeline .timeline-post:nth-child(even) .icon-dot-full,.multiline-timeline .timeline-post:nth-child(even) .icon-dot-full-white{margin:30px 0 0 -7px}.ultimate-style .timeline-post .timeline-content .turqoise-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .turqoise-title:before{border-right-color:#25ACB4}.ultimate-style .timeline-post .timeline-content .orange-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .orange-title:before{border-right-color:#E6B613}.ultimate-style .timeline-post .timeline-content .indigo-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .indigo-title:before{border-right-color:#3848A0}.ultimate-style .timeline-post .timeline-content .purple-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .purple-title:before{border-right-color:#872299}.ultimate-style .timeline-post .timeline-content .white-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .white-title:before{border-right-color:#FFF}.ultimate-style .timeline-post .timeline-content .brown-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .brown-title:before{border-right-color:#D75E1C}.ultimate-style .timeline-post .timeline-content .green-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .green-title:before{border-right-color:#4EB83A}.ultimate-style .timeline-post .timeline-content .black-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .black-title:before{border-right-color:#28313E}.ultimate-style .timeline-post .timeline-content .pink-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .pink-title:before{border-right-color:#EC4AAF}.ultimate-style .timeline-post .timeline-content .grey-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .grey-title:before{border-right-color:#697892}.ultimate-style .timeline-post .timeline-content .blue-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .blue-title:before{border-right-color:#0D83E3}.ultimate-style .timeline-post .timeline-content .opal-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .opal-title:before{border-right-color:#49A7CF}.ultimate-style .timeline-post .timeline-content .red-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .red-title:before{border-right-color:#DC4747}}","date":"2021-11-25T03:28:13.086Z","updated":"2021-11-25T03:28:13.086Z","path":"timeline/css/jazz-timeline.css","layout":"false","title":"","comments":1,"_id":"ckwn8bfyo003ttwnff62p2s7q","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>/* build time:Wed Dec 01 2021 15:50:10 GMT+0800 (中国标准时间)*/\n.fa{display:inline-block;font:normal normal normal 14px/1 FontAwesome;font-size:inherit;text-rendering:auto;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.fa-lg{font-size:1.33333333em;line-height:.75em;vertical-align:-15%}.fa-2x{font-size:2em}.fa-3x{font-size:3em}.fa-4x{font-size:4em}.fa-5x{font-size:5em}.fa-fw{width:1.28571429em;text-align:center}.fa-ul{padding-left:0;margin-left:2.14285714em;list-style-type:none}.fa-ul>li{position:relative}.fa-li{position:absolute;left:-2.14285714em;width:2.14285714em;top:.14285714em;text-align:center}.fa-li.fa-lg{left:-1.85714286em}.fa-border{padding:.2em .25em .15em;border:solid .08em #eee;border-radius:.1em}.fa-pull-left{float:left}.fa-pull-right{float:right}.fa.fa-pull-left{margin-right:.3em}.fa.fa-pull-right{margin-left:.3em}.pull-right{float:right}.pull-left{float:left}.fa.pull-left{margin-right:.3em}.fa.pull-right{margin-left:.3em}.fa-spin{-webkit-animation:fa-spin 2s infinite linear;animation:fa-spin 2s infinite linear}.fa-pulse{-webkit-animation:fa-spin 1s infinite steps(8);animation:fa-spin 1s infinite steps(8)}@-webkit-keyframes fa-spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}@keyframes fa-spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}.fa-rotate-90{-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg)}.fa-rotate-180{-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg)}.fa-rotate-270{-webkit-transform:rotate(270deg);-ms-transform:rotate(270deg);transform:rotate(270deg)}.fa-flip-horizontal{-webkit-transform:scale(-1,1);-ms-transform:scale(-1,1);transform:scale(-1,1)}.fa-flip-vertical{-webkit-transform:scale(1,-1);-ms-transform:scale(1,-1);transform:scale(1,-1)}:root .fa-flip-horizontal,:root .fa-flip-vertical,:root .fa-rotate-180,:root .fa-rotate-270,:root .fa-rotate-90{filter:none}.fa-stack{position:relative;display:inline-block;width:2em;height:2em;line-height:2em;vertical-align:middle}.fa-stack-1x,.fa-stack-2x{position:absolute;left:0;width:100%;text-align:center}.fa-stack-1x{line-height:inherit}.fa-stack-2x{font-size:2em}.fa-inverse{color:#fff}.fa-glass:before{content:\"\\f000\"}.fa-music:before{content:\"\\f001\"}.fa-search:before{content:\"\\f002\"}.fa-envelope-o:before{content:\"\\f003\"}.fa-heart:before{content:\"\\f004\"}.fa-star:before{content:\"\\f005\"}.fa-star-o:before{content:\"\\f006\"}.fa-user:before{content:\"\\f007\"}.fa-film:before{content:\"\\f008\"}.fa-th-large:before{content:\"\\f009\"}.fa-th:before{content:\"\\f00a\"}.fa-th-list:before{content:\"\\f00b\"}.fa-check:before{content:\"\\f00c\"}.fa-close:before,.fa-remove:before,.fa-times:before{content:\"\\f00d\"}.fa-search-plus:before{content:\"\\f00e\"}.fa-search-minus:before{content:\"\\f010\"}.fa-power-off:before{content:\"\\f011\"}.fa-signal:before{content:\"\\f012\"}.fa-cog:before,.fa-gear:before{content:\"\\f013\"}.fa-trash-o:before{content:\"\\f014\"}.fa-home:before{content:\"\\f015\"}.fa-file-o:before{content:\"\\f016\"}.fa-clock-o:before{content:\"\\f017\"}.fa-road:before{content:\"\\f018\"}.fa-download:before{content:\"\\f019\"}.fa-arrow-circle-o-down:before{content:\"\\f01a\"}.fa-arrow-circle-o-up:before{content:\"\\f01b\"}.fa-inbox:before{content:\"\\f01c\"}.fa-play-circle-o:before{content:\"\\f01d\"}.fa-repeat:before,.fa-rotate-right:before{content:\"\\f01e\"}.fa-refresh:before{content:\"\\f021\"}.fa-list-alt:before{content:\"\\f022\"}.fa-lock:before{content:\"\\f023\"}.fa-flag:before{content:\"\\f024\"}.fa-headphones:before{content:\"\\f025\"}.fa-volume-off:before{content:\"\\f026\"}.fa-volume-down:before{content:\"\\f027\"}.fa-volume-up:before{content:\"\\f028\"}.fa-qrcode:before{content:\"\\f029\"}.fa-barcode:before{content:\"\\f02a\"}.fa-tag:before{content:\"\\f02b\"}.fa-tags:before{content:\"\\f02c\"}.fa-book:before{content:\"\\f02d\"}.fa-bookmark:before{content:\"\\f02e\"}.fa-print:before{content:\"\\f02f\"}.fa-camera:before{content:\"\\f030\"}.fa-font:before{content:\"\\f031\"}.fa-bold:before{content:\"\\f032\"}.fa-italic:before{content:\"\\f033\"}.fa-text-height:before{content:\"\\f034\"}.fa-text-width:before{content:\"\\f035\"}.fa-align-left:before{content:\"\\f036\"}.fa-align-center:before{content:\"\\f037\"}.fa-align-right:before{content:\"\\f038\"}.fa-align-justify:before{content:\"\\f039\"}.fa-list:before{content:\"\\f03a\"}.fa-dedent:before,.fa-outdent:before{content:\"\\f03b\"}.fa-indent:before{content:\"\\f03c\"}.fa-video-camera:before{content:\"\\f03d\"}.fa-image:before,.fa-photo:before,.fa-picture-o:before{content:\"\\f03e\"}.fa-pencil:before{content:\"\\f040\"}.fa-map-marker:before{content:\"\\f041\"}.fa-adjust:before{content:\"\\f042\"}.fa-tint:before{content:\"\\f043\"}.fa-edit:before,.fa-pencil-square-o:before{content:\"\\f044\"}.fa-share-square-o:before{content:\"\\f045\"}.fa-check-square-o:before{content:\"\\f046\"}.fa-arrows:before{content:\"\\f047\"}.fa-step-backward:before{content:\"\\f048\"}.fa-fast-backward:before{content:\"\\f049\"}.fa-backward:before{content:\"\\f04a\"}.fa-play:before{content:\"\\f04b\"}.fa-pause:before{content:\"\\f04c\"}.fa-stop:before{content:\"\\f04d\"}.fa-forward:before{content:\"\\f04e\"}.fa-fast-forward:before{content:\"\\f050\"}.fa-step-forward:before{content:\"\\f051\"}.fa-eject:before{content:\"\\f052\"}.fa-chevron-left:before{content:\"\\f053\"}.fa-chevron-right:before{content:\"\\f054\"}.fa-plus-circle:before{content:\"\\f055\"}.fa-minus-circle:before{content:\"\\f056\"}.fa-times-circle:before{content:\"\\f057\"}.fa-check-circle:before{content:\"\\f058\"}.fa-question-circle:before{content:\"\\f059\"}.fa-info-circle:before{content:\"\\f05a\"}.fa-crosshairs:before{content:\"\\f05b\"}.fa-times-circle-o:before{content:\"\\f05c\"}.fa-check-circle-o:before{content:\"\\f05d\"}.fa-ban:before{content:\"\\f05e\"}.fa-arrow-left:before{content:\"\\f060\"}.fa-arrow-right:before{content:\"\\f061\"}.fa-arrow-up:before{content:\"\\f062\"}.fa-arrow-down:before{content:\"\\f063\"}.fa-mail-forward:before,.fa-share:before{content:\"\\f064\"}.fa-expand:before{content:\"\\f065\"}.fa-compress:before{content:\"\\f066\"}.fa-plus:before{content:\"\\f067\"}.fa-minus:before{content:\"\\f068\"}.fa-asterisk:before{content:\"\\f069\"}.fa-exclamation-circle:before{content:\"\\f06a\"}.fa-gift:before{content:\"\\f06b\"}.fa-leaf:before{content:\"\\f06c\"}.fa-fire:before{content:\"\\f06d\"}.fa-eye:before{content:\"\\f06e\"}.fa-eye-slash:before{content:\"\\f070\"}.fa-exclamation-triangle:before,.fa-warning:before{content:\"\\f071\"}.fa-plane:before{content:\"\\f072\"}.fa-calendar:before{content:\"\\f073\"}.fa-random:before{content:\"\\f074\"}.fa-comment:before{content:\"\\f075\"}.fa-magnet:before{content:\"\\f076\"}.fa-chevron-up:before{content:\"\\f077\"}.fa-chevron-down:before{content:\"\\f078\"}.fa-retweet:before{content:\"\\f079\"}.fa-shopping-cart:before{content:\"\\f07a\"}.fa-folder:before{content:\"\\f07b\"}.fa-folder-open:before{content:\"\\f07c\"}.fa-arrows-v:before{content:\"\\f07d\"}.fa-arrows-h:before{content:\"\\f07e\"}.fa-bar-chart-o:before,.fa-bar-chart:before{content:\"\\f080\"}.fa-twitter-square:before{content:\"\\f081\"}.fa-facebook-square:before{content:\"\\f082\"}.fa-camera-retro:before{content:\"\\f083\"}.fa-key:before{content:\"\\f084\"}.fa-cogs:before,.fa-gears:before{content:\"\\f085\"}.fa-comments:before{content:\"\\f086\"}.fa-thumbs-o-up:before{content:\"\\f087\"}.fa-thumbs-o-down:before{content:\"\\f088\"}.fa-star-half:before{content:\"\\f089\"}.fa-heart-o:before{content:\"\\f08a\"}.fa-sign-out:before{content:\"\\f08b\"}.fa-linkedin-square:before{content:\"\\f08c\"}.fa-thumb-tack:before{content:\"\\f08d\"}.fa-external-link:before{content:\"\\f08e\"}.fa-sign-in:before{content:\"\\f090\"}.fa-trophy:before{content:\"\\f091\"}.fa-github-square:before{content:\"\\f092\"}.fa-upload:before{content:\"\\f093\"}.fa-lemon-o:before{content:\"\\f094\"}.fa-phone:before{content:\"\\f095\"}.fa-square-o:before{content:\"\\f096\"}.fa-bookmark-o:before{content:\"\\f097\"}.fa-phone-square:before{content:\"\\f098\"}.fa-twitter:before{content:\"\\f099\"}.fa-facebook-f:before,.fa-facebook:before{content:\"\\f09a\"}.fa-github:before{content:\"\\f09b\"}.fa-unlock:before{content:\"\\f09c\"}.fa-credit-card:before{content:\"\\f09d\"}.fa-feed:before,.fa-rss:before{content:\"\\f09e\"}.fa-hdd-o:before{content:\"\\f0a0\"}.fa-bullhorn:before{content:\"\\f0a1\"}.fa-bell:before{content:\"\\f0f3\"}.fa-certificate:before{content:\"\\f0a3\"}.fa-hand-o-right:before{content:\"\\f0a4\"}.fa-hand-o-left:before{content:\"\\f0a5\"}.fa-hand-o-up:before{content:\"\\f0a6\"}.fa-hand-o-down:before{content:\"\\f0a7\"}.fa-arrow-circle-left:before{content:\"\\f0a8\"}.fa-arrow-circle-right:before{content:\"\\f0a9\"}.fa-arrow-circle-up:before{content:\"\\f0aa\"}.fa-arrow-circle-down:before{content:\"\\f0ab\"}.fa-globe:before{content:\"\\f0ac\"}.fa-wrench:before{content:\"\\f0ad\"}.fa-tasks:before{content:\"\\f0ae\"}.fa-filter:before{content:\"\\f0b0\"}.fa-briefcase:before{content:\"\\f0b1\"}.fa-arrows-alt:before{content:\"\\f0b2\"}.fa-group:before,.fa-users:before{content:\"\\f0c0\"}.fa-chain:before,.fa-link:before{content:\"\\f0c1\"}.fa-cloud:before{content:\"\\f0c2\"}.fa-flask:before{content:\"\\f0c3\"}.fa-cut:before,.fa-scissors:before{content:\"\\f0c4\"}.fa-copy:before,.fa-files-o:before{content:\"\\f0c5\"}.fa-paperclip:before{content:\"\\f0c6\"}.fa-floppy-o:before,.fa-save:before{content:\"\\f0c7\"}.fa-square:before{content:\"\\f0c8\"}.fa-bars:before,.fa-navicon:before,.fa-reorder:before{content:\"\\f0c9\"}.fa-list-ul:before{content:\"\\f0ca\"}.fa-list-ol:before{content:\"\\f0cb\"}.fa-strikethrough:before{content:\"\\f0cc\"}.fa-underline:before{content:\"\\f0cd\"}.fa-table:before{content:\"\\f0ce\"}.fa-magic:before{content:\"\\f0d0\"}.fa-truck:before{content:\"\\f0d1\"}.fa-pinterest:before{content:\"\\f0d2\"}.fa-pinterest-square:before{content:\"\\f0d3\"}.fa-google-plus-square:before{content:\"\\f0d4\"}.fa-google-plus:before{content:\"\\f0d5\"}.fa-money:before{content:\"\\f0d6\"}.fa-caret-down:before{content:\"\\f0d7\"}.fa-caret-up:before{content:\"\\f0d8\"}.fa-caret-left:before{content:\"\\f0d9\"}.fa-caret-right:before{content:\"\\f0da\"}.fa-columns:before{content:\"\\f0db\"}.fa-sort:before,.fa-unsorted:before{content:\"\\f0dc\"}.fa-sort-desc:before,.fa-sort-down:before{content:\"\\f0dd\"}.fa-sort-asc:before,.fa-sort-up:before{content:\"\\f0de\"}.fa-envelope:before{content:\"\\f0e0\"}.fa-linkedin:before{content:\"\\f0e1\"}.fa-rotate-left:before,.fa-undo:before{content:\"\\f0e2\"}.fa-gavel:before,.fa-legal:before{content:\"\\f0e3\"}.fa-dashboard:before,.fa-tachometer:before{content:\"\\f0e4\"}.fa-comment-o:before{content:\"\\f0e5\"}.fa-comments-o:before{content:\"\\f0e6\"}.fa-bolt:before,.fa-flash:before{content:\"\\f0e7\"}.fa-sitemap:before{content:\"\\f0e8\"}.fa-umbrella:before{content:\"\\f0e9\"}.fa-clipboard:before,.fa-paste:before{content:\"\\f0ea\"}.fa-lightbulb-o:before{content:\"\\f0eb\"}.fa-exchange:before{content:\"\\f0ec\"}.fa-cloud-download:before{content:\"\\f0ed\"}.fa-cloud-upload:before{content:\"\\f0ee\"}.fa-user-md:before{content:\"\\f0f0\"}.fa-stethoscope:before{content:\"\\f0f1\"}.fa-suitcase:before{content:\"\\f0f2\"}.fa-bell-o:before{content:\"\\f0a2\"}.fa-coffee:before{content:\"\\f0f4\"}.fa-cutlery:before{content:\"\\f0f5\"}.fa-file-text-o:before{content:\"\\f0f6\"}.fa-building-o:before{content:\"\\f0f7\"}.fa-hospital-o:before{content:\"\\f0f8\"}.fa-ambulance:before{content:\"\\f0f9\"}.fa-medkit:before{content:\"\\f0fa\"}.fa-fighter-jet:before{content:\"\\f0fb\"}.fa-beer:before{content:\"\\f0fc\"}.fa-h-square:before{content:\"\\f0fd\"}.fa-plus-square:before{content:\"\\f0fe\"}.fa-angle-double-left:before{content:\"\\f100\"}.fa-angle-double-right:before{content:\"\\f101\"}.fa-angle-double-up:before{content:\"\\f102\"}.fa-angle-double-down:before{content:\"\\f103\"}.fa-angle-left:before{content:\"\\f104\"}.fa-angle-right:before{content:\"\\f105\"}.fa-angle-up:before{content:\"\\f106\"}.fa-angle-down:before{content:\"\\f107\"}.fa-desktop:before{content:\"\\f108\"}.fa-laptop:before{content:\"\\f109\"}.fa-tablet:before{content:\"\\f10a\"}.fa-mobile-phone:before,.fa-mobile:before{content:\"\\f10b\"}.fa-circle-o:before{content:\"\\f10c\"}.fa-quote-left:before{content:\"\\f10d\"}.fa-quote-right:before{content:\"\\f10e\"}.fa-spinner:before{content:\"\\f110\"}.fa-circle:before{content:\"\\f111\"}.fa-mail-reply:before,.fa-reply:before{content:\"\\f112\"}.fa-github-alt:before{content:\"\\f113\"}.fa-folder-o:before{content:\"\\f114\"}.fa-folder-open-o:before{content:\"\\f115\"}.fa-smile-o:before{content:\"\\f118\"}.fa-frown-o:before{content:\"\\f119\"}.fa-meh-o:before{content:\"\\f11a\"}.fa-gamepad:before{content:\"\\f11b\"}.fa-keyboard-o:before{content:\"\\f11c\"}.fa-flag-o:before{content:\"\\f11d\"}.fa-flag-checkered:before{content:\"\\f11e\"}.fa-terminal:before{content:\"\\f120\"}.fa-code:before{content:\"\\f121\"}.fa-mail-reply-all:before,.fa-reply-all:before{content:\"\\f122\"}.fa-star-half-empty:before,.fa-star-half-full:before,.fa-star-half-o:before{content:\"\\f123\"}.fa-location-arrow:before{content:\"\\f124\"}.fa-crop:before{content:\"\\f125\"}.fa-code-fork:before{content:\"\\f126\"}.fa-chain-broken:before,.fa-unlink:before{content:\"\\f127\"}.fa-question:before{content:\"\\f128\"}.fa-info:before{content:\"\\f129\"}.fa-exclamation:before{content:\"\\f12a\"}.fa-superscript:before{content:\"\\f12b\"}.fa-subscript:before{content:\"\\f12c\"}.fa-eraser:before{content:\"\\f12d\"}.fa-puzzle-piece:before{content:\"\\f12e\"}.fa-microphone:before{content:\"\\f130\"}.fa-microphone-slash:before{content:\"\\f131\"}.fa-shield:before{content:\"\\f132\"}.fa-calendar-o:before{content:\"\\f133\"}.fa-fire-extinguisher:before{content:\"\\f134\"}.fa-rocket:before{content:\"\\f135\"}.fa-maxcdn:before{content:\"\\f136\"}.fa-chevron-circle-left:before{content:\"\\f137\"}.fa-chevron-circle-right:before{content:\"\\f138\"}.fa-chevron-circle-up:before{content:\"\\f139\"}.fa-chevron-circle-down:before{content:\"\\f13a\"}.fa-html5:before{content:\"\\f13b\"}.fa-css3:before{content:\"\\f13c\"}.fa-anchor:before{content:\"\\f13d\"}.fa-unlock-alt:before{content:\"\\f13e\"}.fa-bullseye:before{content:\"\\f140\"}.fa-ellipsis-h:before{content:\"\\f141\"}.fa-ellipsis-v:before{content:\"\\f142\"}.fa-rss-square:before{content:\"\\f143\"}.fa-play-circle:before{content:\"\\f144\"}.fa-ticket:before{content:\"\\f145\"}.fa-minus-square:before{content:\"\\f146\"}.fa-minus-square-o:before{content:\"\\f147\"}.fa-level-up:before{content:\"\\f148\"}.fa-level-down:before{content:\"\\f149\"}.fa-check-square:before{content:\"\\f14a\"}.fa-pencil-square:before{content:\"\\f14b\"}.fa-external-link-square:before{content:\"\\f14c\"}.fa-share-square:before{content:\"\\f14d\"}.fa-compass:before{content:\"\\f14e\"}.fa-caret-square-o-down:before,.fa-toggle-down:before{content:\"\\f150\"}.fa-caret-square-o-up:before,.fa-toggle-up:before{content:\"\\f151\"}.fa-caret-square-o-right:before,.fa-toggle-right:before{content:\"\\f152\"}.fa-eur:before,.fa-euro:before{content:\"\\f153\"}.fa-gbp:before{content:\"\\f154\"}.fa-dollar:before,.fa-usd:before{content:\"\\f155\"}.fa-inr:before,.fa-rupee:before{content:\"\\f156\"}.fa-cny:before,.fa-jpy:before,.fa-rmb:before,.fa-yen:before{content:\"\\f157\"}.fa-rouble:before,.fa-rub:before,.fa-ruble:before{content:\"\\f158\"}.fa-krw:before,.fa-won:before{content:\"\\f159\"}.fa-bitcoin:before,.fa-btc:before{content:\"\\f15a\"}.fa-file:before{content:\"\\f15b\"}.fa-file-text:before{content:\"\\f15c\"}.fa-sort-alpha-asc:before{content:\"\\f15d\"}.fa-sort-alpha-desc:before{content:\"\\f15e\"}.fa-sort-amount-asc:before{content:\"\\f160\"}.fa-sort-amount-desc:before{content:\"\\f161\"}.fa-sort-numeric-asc:before{content:\"\\f162\"}.fa-sort-numeric-desc:before{content:\"\\f163\"}.fa-thumbs-up:before{content:\"\\f164\"}.fa-thumbs-down:before{content:\"\\f165\"}.fa-youtube-square:before{content:\"\\f166\"}.fa-youtube:before{content:\"\\f167\"}.fa-xing:before{content:\"\\f168\"}.fa-xing-square:before{content:\"\\f169\"}.fa-youtube-play:before{content:\"\\f16a\"}.fa-dropbox:before{content:\"\\f16b\"}.fa-stack-overflow:before{content:\"\\f16c\"}.fa-instagram:before{content:\"\\f16d\"}.fa-flickr:before{content:\"\\f16e\"}.fa-adn:before{content:\"\\f170\"}.fa-bitbucket:before{content:\"\\f171\"}.fa-bitbucket-square:before{content:\"\\f172\"}.fa-tumblr:before{content:\"\\f173\"}.fa-tumblr-square:before{content:\"\\f174\"}.fa-long-arrow-down:before{content:\"\\f175\"}.fa-long-arrow-up:before{content:\"\\f176\"}.fa-long-arrow-left:before{content:\"\\f177\"}.fa-long-arrow-right:before{content:\"\\f178\"}.fa-apple:before{content:\"\\f179\"}.fa-windows:before{content:\"\\f17a\"}.fa-android:before{content:\"\\f17b\"}.fa-linux:before{content:\"\\f17c\"}.fa-dribbble:before{content:\"\\f17d\"}.fa-skype:before{content:\"\\f17e\"}.fa-foursquare:before{content:\"\\f180\"}.fa-trello:before{content:\"\\f181\"}.fa-female:before{content:\"\\f182\"}.fa-male:before{content:\"\\f183\"}.fa-gittip:before,.fa-gratipay:before{content:\"\\f184\"}.fa-sun-o:before{content:\"\\f185\"}.fa-moon-o:before{content:\"\\f186\"}.fa-archive:before{content:\"\\f187\"}.fa-bug:before{content:\"\\f188\"}.fa-vk:before{content:\"\\f189\"}.fa-weibo:before{content:\"\\f18a\"}.fa-renren:before{content:\"\\f18b\"}.fa-pagelines:before{content:\"\\f18c\"}.fa-stack-exchange:before{content:\"\\f18d\"}.fa-arrow-circle-o-right:before{content:\"\\f18e\"}.fa-arrow-circle-o-left:before{content:\"\\f190\"}.fa-caret-square-o-left:before,.fa-toggle-left:before{content:\"\\f191\"}.fa-dot-circle-o:before{content:\"\\f192\"}.fa-wheelchair:before{content:\"\\f193\"}.fa-vimeo-square:before{content:\"\\f194\"}.fa-try:before,.fa-turkish-lira:before{content:\"\\f195\"}.fa-plus-square-o:before{content:\"\\f196\"}.fa-space-shuttle:before{content:\"\\f197\"}.fa-slack:before{content:\"\\f198\"}.fa-envelope-square:before{content:\"\\f199\"}.fa-wordpress:before{content:\"\\f19a\"}.fa-openid:before{content:\"\\f19b\"}.fa-bank:before,.fa-institution:before,.fa-university:before{content:\"\\f19c\"}.fa-graduation-cap:before,.fa-mortar-board:before{content:\"\\f19d\"}.fa-yahoo:before{content:\"\\f19e\"}.fa-google:before{content:\"\\f1a0\"}.fa-reddit:before{content:\"\\f1a1\"}.fa-reddit-square:before{content:\"\\f1a2\"}.fa-stumbleupon-circle:before{content:\"\\f1a3\"}.fa-stumbleupon:before{content:\"\\f1a4\"}.fa-delicious:before{content:\"\\f1a5\"}.fa-digg:before{content:\"\\f1a6\"}.fa-pied-piper:before{content:\"\\f1a7\"}.fa-pied-piper-alt:before{content:\"\\f1a8\"}.fa-drupal:before{content:\"\\f1a9\"}.fa-joomla:before{content:\"\\f1aa\"}.fa-language:before{content:\"\\f1ab\"}.fa-fax:before{content:\"\\f1ac\"}.fa-building:before{content:\"\\f1ad\"}.fa-child:before{content:\"\\f1ae\"}.fa-paw:before{content:\"\\f1b0\"}.fa-spoon:before{content:\"\\f1b1\"}.fa-cube:before{content:\"\\f1b2\"}.fa-cubes:before{content:\"\\f1b3\"}.fa-behance:before{content:\"\\f1b4\"}.fa-behance-square:before{content:\"\\f1b5\"}.fa-steam:before{content:\"\\f1b6\"}.fa-steam-square:before{content:\"\\f1b7\"}.fa-recycle:before{content:\"\\f1b8\"}.fa-automobile:before,.fa-car:before{content:\"\\f1b9\"}.fa-cab:before,.fa-taxi:before{content:\"\\f1ba\"}.fa-tree:before{content:\"\\f1bb\"}.fa-spotify:before{content:\"\\f1bc\"}.fa-deviantart:before{content:\"\\f1bd\"}.fa-soundcloud:before{content:\"\\f1be\"}.fa-database:before{content:\"\\f1c0\"}.fa-file-pdf-o:before{content:\"\\f1c1\"}.fa-file-word-o:before{content:\"\\f1c2\"}.fa-file-excel-o:before{content:\"\\f1c3\"}.fa-file-powerpoint-o:before{content:\"\\f1c4\"}.fa-file-image-o:before,.fa-file-photo-o:before,.fa-file-picture-o:before{content:\"\\f1c5\"}.fa-file-archive-o:before,.fa-file-zip-o:before{content:\"\\f1c6\"}.fa-file-audio-o:before,.fa-file-sound-o:before{content:\"\\f1c7\"}.fa-file-movie-o:before,.fa-file-video-o:before{content:\"\\f1c8\"}.fa-file-code-o:before{content:\"\\f1c9\"}.fa-vine:before{content:\"\\f1ca\"}.fa-codepen:before{content:\"\\f1cb\"}.fa-jsfiddle:before{content:\"\\f1cc\"}.fa-life-bouy:before,.fa-life-buoy:before,.fa-life-ring:before,.fa-life-saver:before,.fa-support:before{content:\"\\f1cd\"}.fa-circle-o-notch:before{content:\"\\f1ce\"}.fa-ra:before,.fa-rebel:before{content:\"\\f1d0\"}.fa-empire:before,.fa-ge:before{content:\"\\f1d1\"}.fa-git-square:before{content:\"\\f1d2\"}.fa-git:before{content:\"\\f1d3\"}.fa-hacker-news:before,.fa-y-combinator-square:before,.fa-yc-square:before{content:\"\\f1d4\"}.fa-tencent-weibo:before{content:\"\\f1d5\"}.fa-qq:before{content:\"\\f1d6\"}.fa-wechat:before,.fa-weixin:before{content:\"\\f1d7\"}.fa-paper-plane:before,.fa-send:before{content:\"\\f1d8\"}.fa-paper-plane-o:before,.fa-send-o:before{content:\"\\f1d9\"}.fa-history:before{content:\"\\f1da\"}.fa-circle-thin:before{content:\"\\f1db\"}.fa-header:before{content:\"\\f1dc\"}.fa-paragraph:before{content:\"\\f1dd\"}.fa-sliders:before{content:\"\\f1de\"}.fa-share-alt:before{content:\"\\f1e0\"}.fa-share-alt-square:before{content:\"\\f1e1\"}.fa-bomb:before{content:\"\\f1e2\"}.fa-futbol-o:before,.fa-soccer-ball-o:before{content:\"\\f1e3\"}.fa-tty:before{content:\"\\f1e4\"}.fa-binoculars:before{content:\"\\f1e5\"}.fa-plug:before{content:\"\\f1e6\"}.fa-slideshare:before{content:\"\\f1e7\"}.fa-twitch:before{content:\"\\f1e8\"}.fa-yelp:before{content:\"\\f1e9\"}.fa-newspaper-o:before{content:\"\\f1ea\"}.fa-wifi:before{content:\"\\f1eb\"}.fa-calculator:before{content:\"\\f1ec\"}.fa-paypal:before{content:\"\\f1ed\"}.fa-google-wallet:before{content:\"\\f1ee\"}.fa-cc-visa:before{content:\"\\f1f0\"}.fa-cc-mastercard:before{content:\"\\f1f1\"}.fa-cc-discover:before{content:\"\\f1f2\"}.fa-cc-amex:before{content:\"\\f1f3\"}.fa-cc-paypal:before{content:\"\\f1f4\"}.fa-cc-stripe:before{content:\"\\f1f5\"}.fa-bell-slash:before{content:\"\\f1f6\"}.fa-bell-slash-o:before{content:\"\\f1f7\"}.fa-trash:before{content:\"\\f1f8\"}.fa-copyright:before{content:\"\\f1f9\"}.fa-at:before{content:\"\\f1fa\"}.fa-eyedropper:before{content:\"\\f1fb\"}.fa-paint-brush:before{content:\"\\f1fc\"}.fa-birthday-cake:before{content:\"\\f1fd\"}.fa-area-chart:before{content:\"\\f1fe\"}.fa-pie-chart:before{content:\"\\f200\"}.fa-line-chart:before{content:\"\\f201\"}.fa-lastfm:before{content:\"\\f202\"}.fa-lastfm-square:before{content:\"\\f203\"}.fa-toggle-off:before{content:\"\\f204\"}.fa-toggle-on:before{content:\"\\f205\"}.fa-bicycle:before{content:\"\\f206\"}.fa-bus:before{content:\"\\f207\"}.fa-ioxhost:before{content:\"\\f208\"}.fa-angellist:before{content:\"\\f209\"}.fa-cc:before{content:\"\\f20a\"}.fa-ils:before,.fa-shekel:before,.fa-sheqel:before{content:\"\\f20b\"}.fa-meanpath:before{content:\"\\f20c\"}.fa-buysellads:before{content:\"\\f20d\"}.fa-connectdevelop:before{content:\"\\f20e\"}.fa-dashcube:before{content:\"\\f210\"}.fa-forumbee:before{content:\"\\f211\"}.fa-leanpub:before{content:\"\\f212\"}.fa-sellsy:before{content:\"\\f213\"}.fa-shirtsinbulk:before{content:\"\\f214\"}.fa-simplybuilt:before{content:\"\\f215\"}.fa-skyatlas:before{content:\"\\f216\"}.fa-cart-plus:before{content:\"\\f217\"}.fa-cart-arrow-down:before{content:\"\\f218\"}.fa-diamond:before{content:\"\\f219\"}.fa-ship:before{content:\"\\f21a\"}.fa-user-secret:before{content:\"\\f21b\"}.fa-motorcycle:before{content:\"\\f21c\"}.fa-street-view:before{content:\"\\f21d\"}.fa-heartbeat:before{content:\"\\f21e\"}.fa-venus:before{content:\"\\f221\"}.fa-mars:before{content:\"\\f222\"}.fa-mercury:before{content:\"\\f223\"}.fa-intersex:before,.fa-transgender:before{content:\"\\f224\"}.fa-transgender-alt:before{content:\"\\f225\"}.fa-venus-double:before{content:\"\\f226\"}.fa-mars-double:before{content:\"\\f227\"}.fa-venus-mars:before{content:\"\\f228\"}.fa-mars-stroke:before{content:\"\\f229\"}.fa-mars-stroke-v:before{content:\"\\f22a\"}.fa-mars-stroke-h:before{content:\"\\f22b\"}.fa-neuter:before{content:\"\\f22c\"}.fa-genderless:before{content:\"\\f22d\"}.fa-facebook-official:before{content:\"\\f230\"}.fa-pinterest-p:before{content:\"\\f231\"}.fa-whatsapp:before{content:\"\\f232\"}.fa-server:before{content:\"\\f233\"}.fa-user-plus:before{content:\"\\f234\"}.fa-user-times:before{content:\"\\f235\"}.fa-bed:before,.fa-hotel:before{content:\"\\f236\"}.fa-viacoin:before{content:\"\\f237\"}.fa-train:before{content:\"\\f238\"}.fa-subway:before{content:\"\\f239\"}.fa-medium:before{content:\"\\f23a\"}.fa-y-combinator:before,.fa-yc:before{content:\"\\f23b\"}.fa-optin-monster:before{content:\"\\f23c\"}.fa-opencart:before{content:\"\\f23d\"}.fa-expeditedssl:before{content:\"\\f23e\"}.fa-battery-4:before,.fa-battery-full:before{content:\"\\f240\"}.fa-battery-3:before,.fa-battery-three-quarters:before{content:\"\\f241\"}.fa-battery-2:before,.fa-battery-half:before{content:\"\\f242\"}.fa-battery-1:before,.fa-battery-quarter:before{content:\"\\f243\"}.fa-battery-0:before,.fa-battery-empty:before{content:\"\\f244\"}.fa-mouse-pointer:before{content:\"\\f245\"}.fa-i-cursor:before{content:\"\\f246\"}.fa-object-group:before{content:\"\\f247\"}.fa-object-ungroup:before{content:\"\\f248\"}.fa-sticky-note:before{content:\"\\f249\"}.fa-sticky-note-o:before{content:\"\\f24a\"}.fa-cc-jcb:before{content:\"\\f24b\"}.fa-cc-diners-club:before{content:\"\\f24c\"}.fa-clone:before{content:\"\\f24d\"}.fa-balance-scale:before{content:\"\\f24e\"}.fa-hourglass-o:before{content:\"\\f250\"}.fa-hourglass-1:before,.fa-hourglass-start:before{content:\"\\f251\"}.fa-hourglass-2:before,.fa-hourglass-half:before{content:\"\\f252\"}.fa-hourglass-3:before,.fa-hourglass-end:before{content:\"\\f253\"}.fa-hourglass:before{content:\"\\f254\"}.fa-hand-grab-o:before,.fa-hand-rock-o:before{content:\"\\f255\"}.fa-hand-paper-o:before,.fa-hand-stop-o:before{content:\"\\f256\"}.fa-hand-scissors-o:before{content:\"\\f257\"}.fa-hand-lizard-o:before{content:\"\\f258\"}.fa-hand-spock-o:before{content:\"\\f259\"}.fa-hand-pointer-o:before{content:\"\\f25a\"}.fa-hand-peace-o:before{content:\"\\f25b\"}.fa-trademark:before{content:\"\\f25c\"}.fa-registered:before{content:\"\\f25d\"}.fa-creative-commons:before{content:\"\\f25e\"}.fa-gg:before{content:\"\\f260\"}.fa-gg-circle:before{content:\"\\f261\"}.fa-tripadvisor:before{content:\"\\f262\"}.fa-odnoklassniki:before{content:\"\\f263\"}.fa-odnoklassniki-square:before{content:\"\\f264\"}.fa-get-pocket:before{content:\"\\f265\"}.fa-wikipedia-w:before{content:\"\\f266\"}.fa-safari:before{content:\"\\f267\"}.fa-chrome:before{content:\"\\f268\"}.fa-firefox:before{content:\"\\f269\"}.fa-opera:before{content:\"\\f26a\"}.fa-internet-explorer:before{content:\"\\f26b\"}.fa-television:before,.fa-tv:before{content:\"\\f26c\"}.fa-contao:before{content:\"\\f26d\"}.fa-500px:before{content:\"\\f26e\"}.fa-amazon:before{content:\"\\f270\"}.fa-calendar-plus-o:before{content:\"\\f271\"}.fa-calendar-minus-o:before{content:\"\\f272\"}.fa-calendar-times-o:before{content:\"\\f273\"}.fa-calendar-check-o:before{content:\"\\f274\"}.fa-industry:before{content:\"\\f275\"}.fa-map-pin:before{content:\"\\f276\"}.fa-map-signs:before{content:\"\\f277\"}.fa-map-o:before{content:\"\\f278\"}.fa-map:before{content:\"\\f279\"}.fa-commenting:before{content:\"\\f27a\"}.fa-commenting-o:before{content:\"\\f27b\"}.fa-houzz:before{content:\"\\f27c\"}.fa-vimeo:before{content:\"\\f27d\"}.fa-black-tie:before{content:\"\\f27e\"}.fa-fonticons:before{content:\"\\f280\"}.fa-reddit-alien:before{content:\"\\f281\"}.fa-edge:before{content:\"\\f282\"}.fa-credit-card-alt:before{content:\"\\f283\"}.fa-codiepie:before{content:\"\\f284\"}.fa-modx:before{content:\"\\f285\"}.fa-fort-awesome:before{content:\"\\f286\"}.fa-usb:before{content:\"\\f287\"}.fa-product-hunt:before{content:\"\\f288\"}.fa-mixcloud:before{content:\"\\f289\"}.fa-scribd:before{content:\"\\f28a\"}.fa-pause-circle:before{content:\"\\f28b\"}.fa-pause-circle-o:before{content:\"\\f28c\"}.fa-stop-circle:before{content:\"\\f28d\"}.fa-stop-circle-o:before{content:\"\\f28e\"}.fa-shopping-bag:before{content:\"\\f290\"}.fa-shopping-basket:before{content:\"\\f291\"}.fa-hashtag:before{content:\"\\f292\"}.fa-bluetooth:before{content:\"\\f293\"}.fa-bluetooth-b:before{content:\"\\f294\"}.fa-percent:before{content:\"\\f295\"}.custom-bg{background:#eaf0f2}.custom-bg-dark{background:#1c1f23}.jazz-timeline-wrapper,.jazz-timeline-wrapper *{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;padding:0;margin:0}.jazz-timeline-wrapper{width:90%;max-width:1024px;margin:4em auto;font-family:\"Alegreya Sans\",Arial,Helvetica,sans-serif;font-weight:400}.jazz-timeline{padding:20px 0;position:relative}.jazz-timeline:before,.multiline-timeline .timeline-post:before{content:\"\";background-color:#c1c1c1;background-image:-webkit-linear-gradient(top,#eaf0f2 0,#c1c1c1 8%,#c1c1c1 92%,#eaf0f2 100%);background-image:-moz-linear-gradient(top,#eaf0f2 0,#c1c1c1 8%,#c1c1c1 92%,#eaf0f2 100%);background-image:-ms-linear-gradient(top,#eaf0f2 0,#c1c1c1 8%,#c1c1c1 92%,#eaf0f2 100%);-webkit-border-radius:2px;-moz-border-radius:2px;border-radius:2px;margin-left:-2px;position:absolute;display:block;height:100%;width:4px;left:50%;top:0}.multiline-timeline .timeline-post:before{background-image:none;-webkit-border-radius:0;-moz-border-radius:0;border-radius:0}.multiline-timeline:before{display:none}.multiline-timeline.thin-timeline .timeline-post:before,.thin-timeline:before{margin-left:-1px;width:2px}.multiline-timeline .timeline-post{position:relative}.jazz-timeline .timeline-post{margin:0;border:0 none;padding:0 60px 5px 0;width:50%}.jazz-timeline .timeline-post:nth-child(even){margin-left:50%;padding:0 0 5px 60px}.jazz-timeline .timeline-post:last-child,.jazz-timeline .timeline-post:nth-child(even):last-child{padding-bottom:0}.jazz-timeline .timeline-post .timeline-meta{left:50%;color:#999;margin:28px 0 0 50px;position:absolute;font-weight:500}.jazz-timeline .timeline-post:nth-child(even) .timeline-meta{left:auto;margin:25px 50px 0 0;text-align:right;right:50%}.jazz-timeline .timeline-post .timeline-meta .meta-details{color:#6a7686}.jazz-timeline .timeline-post .for-large-icons{margin:45px 0 0 50px}.jazz-timeline .timeline-post:nth-child(even) .for-large-icons{margin:45px 50px 0 0}.jazz-timeline.one-sided:before{left:0}.jazz-timeline.one-sided .timeline-post,.jazz-timeline.one-sided .timeline-post:nth-child(even){margin:0;padding:0 0 30px 60px;width:100%}.jazz-timeline.one-sided .timeline-post .timeline-time,.jazz-timeline.one-sided .timeline-post:nth-child(even) .timeline-time{left:0;right:0;margin:0 0 5px;position:relative;text-align:left}.jazz-timeline.one-sided .timeline-post .timeline-icon{left:0;margin:22px 0 0 -35px}.jazz-timeline.one-sided .timeline-post .timeline-meta,.jazz-timeline.one-sided .timeline-post:nth-child(even) .timeline-meta{left:0;right:0;margin:0 0 10px;position:relative;text-align:left}.jazz-timeline .timeline-post .timeline-icon{background:#fff;line-height:70px;position:absolute;text-align:center;margin:22px 0 0 -35px;-webkit-border-radius:40px;-moz-border-radius:40px;border-radius:40px;color:#171717;font-size:18px;height:70px;width:70px;left:50%;z-index:10}.jazz-timeline .timeline-post .timeline-icon .icon-placeholder{line-height:30px;font-weight:500;font-size:13px;padding:5px 0}.jazz-timeline .timeline-post .timeline-icon .icon-placeholder span{display:block;font-family:\"Alegreya Sans\",Arial,Helvetica,sans-serif;line-height:12px;font-weight:700;font-size:30px}.jazz-timeline .timeline-post .timeline-icon .icon-placeholder i{font-size:28px;position:relative;line-height:62px}.jazz-timeline .timeline-post .icon-dot,.jazz-timeline.one-sided .timeline-post .icon-dot{background:#eaf0f2;-webkit-border-radius:20px;-moz-border-radius:20px;border-radius:20px;margin:30px 0 0 -7px;height:14px;width:14px}.jazz-timeline .timeline-post .icon-dot .timeline-bar,.jazz-timeline.one-sided .timeline-post .icon-dot .timeline-bar{height:4px;width:4px;background:#c1c1c1;position:absolute;left:5px;top:5px}.jazz-timeline .timeline-post .icon-dot,.jazz-timeline .timeline-post .icon-dot .timeline-bar,.jazz-timeline.one-sided .timeline-post .icon-dot,.jazz-timeline.one-sided .timeline-post .icon-dot .timeline-bar{-webkit-border-radius:20px;-moz-border-radius:20px;border-radius:20px}.jazz-timeline .timeline-post .icon-dot-full,.jazz-timeline.one-sided .timeline-post .icon-dot-full{background:#c1c1c1;margin:30px 0 0 -7px;-webkit-border-radius:20px;-moz-border-radius:20px;border-radius:20px;height:14px;width:14px}.jazz-timeline .timeline-post .icon-dot-full-white,.jazz-timeline.one-sided .timeline-post .icon-dot-full-white{background:#fff;margin:30px 0 0 -7px;-webkit-box-shadow:0 0 0 2px rgba(0,0,0,.2);-moz-box-shadow:0 0 0 2px rgba(0,0,0,.2);box-shadow:0 0 0 2px rgba(0,0,0,.2);-webkit-border-radius:20px;-moz-border-radius:20px;border-radius:20px;height:14px;width:14px}.jazz-timeline .timeline-post .icon-dot-full-white .timeline-bar,.jazz-timeline.one-sided .timeline-post .icon-dot-full-white .timeline-bar{height:4px;width:4px;background:#c1c1c1;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;position:absolute;left:5px;top:5px}.jazz-timeline .timeline-post .iconbg-red{background:#f25b5a}.jazz-timeline .timeline-post .iconbg-opal{background:#76bbda}.jazz-timeline .timeline-post .iconbg-blue{background:#2196f3}.jazz-timeline .timeline-post .iconbg-grey{background:#7e8da3}.jazz-timeline .timeline-post .iconbg-pink{background:#f282c7}.jazz-timeline .timeline-post .iconbg-black{background:#2f3949}.jazz-timeline .timeline-post .iconbg-green{background:#75ce66}.jazz-timeline .timeline-post .iconbg-brown{background:#e46d2b}.jazz-timeline .timeline-post .iconbg-white{background:#fff}.jazz-timeline .timeline-post .iconbg-purple{background:#9c27b0}.jazz-timeline .timeline-post .iconbg-indigo{background:#3f51b5}.jazz-timeline .timeline-post .iconbg-orange{background:#f0ca45}.jazz-timeline .timeline-post .iconbg-turqoise{background:#28c0c6}.jazz-timeline .timeline-post .iconbg-black,.jazz-timeline .timeline-post .iconbg-blue,.jazz-timeline .timeline-post .iconbg-brown,.jazz-timeline .timeline-post .iconbg-green,.jazz-timeline .timeline-post .iconbg-grey,.jazz-timeline .timeline-post .iconbg-indigo,.jazz-timeline .timeline-post .iconbg-opal,.jazz-timeline .timeline-post .iconbg-orange,.jazz-timeline .timeline-post .iconbg-pink,.jazz-timeline .timeline-post .iconbg-purple,.jazz-timeline .timeline-post .iconbg-red,.jazz-timeline .timeline-post .iconbg-turqoise,.jazz-timeline .timeline-post .iconbg-white{-webkit-box-shadow:0 0 0 4px #fff,inset 0 2px 0 rgba(0,0,0,.15),0 3px 0 4px rgba(0,0,0,.15);-moz-box-shadow:0 0 0 4px #fff,inset 0 2px 0 rgba(0,0,0,.15),0 3px 0 4px rgba(0,0,0,.15);box-shadow:0 0 0 4px #fff,inset 0 2px 0 rgba(0,0,0,.15),0 3px 0 4px rgba(0,0,0,.15)}.jazz-timeline .timeline-post .icon-color-white{color:#fff}.jazz-timeline .timeline-post .icon-color-black{color:#000}.jazz-timeline .timeline-post .timeline-content{background:#fff;position:relative;border:1px solid #fff;-webkit-transition:all .4s;-moz-transition:all .4s;transition:all .4s;-webkit-border-radius:5px;-moz-border-radius:5px;border-radius:5px;padding:30px}.jazz-timeline .timeline-post.no-padding .timeline-content{padding:0}.jazz-timeline .timeline-post .timeline-content p{margin:15px 0 10px;line-height:25px;font-size:16px;font-weight:400}.jazz-timeline .timeline-post .timeline-content .content-title{font-size:24px;font-family:\"Alegreya Sans\",Arial,Helvetica,sans-serif;margin:0 0 10px;color:#27acce;font-weight:500}.jazz-timeline .timeline-post .timeline-content .content-title span{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.jazz-timeline .timeline-post .timeline-content .content-details{margin:0}.jazz-timeline .timeline-post .timeline-content:after,.jazz-timeline .timeline-post .timeline-content:before{content:\"\";display:block;border:15px solid transparent;border-left-color:#fff;position:absolute;right:-30px;top:26px}.jazz-timeline .timeline-post .timeline-content:after{border:14px solid transparent;border-left-color:#fff;right:-28px;top:27px}.jazz-timeline .timeline-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#fff;left:-30px;right:auto}.jazz-timeline .timeline-post:nth-child(even) .timeline-content:after{border:14px solid transparent;border-right-color:#fff;left:-28px;right:auto}.jazz-timeline.one-sided .timeline-post .timeline-content:after,.jazz-timeline.one-sided .timeline-post .timeline-content:before{border:15px solid transparent;border-right-color:#fff;left:-30px;right:auto}.jazz-timeline.one-sided .timeline-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .timeline-post:nth-child(even) .timeline-content:before{border:14px solid transparent;border-right-color:#fff;left:-28px;right:auto}.jazz-timeline .red-post .timeline-content{background:#f25b5a;border:1px solid #f25b5a;color:#fff}.jazz-timeline .red-post .timeline-content .content-title{color:#fff}.jazz-timeline .red-post .timeline-content:after,.jazz-timeline .red-post .timeline-content:before{border-left-color:#f25b5a}.jazz-timeline .red-post:nth-child(even) .timeline-content:after,.jazz-timeline .red-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .red-post .timeline-content:after,.jazz-timeline.one-sided .red-post .timeline-content:before,.jazz-timeline.one-sided .red-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .red-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#f25b5a}.jazz-timeline .opal-post .timeline-content{background:#76bbda;border:1px solid #76bbda;color:#fff}.jazz-timeline .opal-post .timeline-content .content-title{color:#fff}.jazz-timeline .opal-post .timeline-content:after,.jazz-timeline .opal-post .timeline-content:before{border-left-color:#76bbda}.jazz-timeline .opal-post:nth-child(even) .timeline-content:after,.jazz-timeline .opal-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .opal-post .timeline-content:after,.jazz-timeline.one-sided .opal-post .timeline-content:before,.jazz-timeline.one-sided .opal-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .opal-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#76bbda}.jazz-timeline .blue-post .timeline-content{background:#2196f3;border:1px solid #2196f3;color:#fff}.jazz-timeline .blue-post .timeline-content .content-title{color:#fff}.jazz-timeline .blue-post .timeline-content:after,.jazz-timeline .blue-post .timeline-content:before{border-left-color:#2196f3}.jazz-timeline .blue-post:nth-child(even) .timeline-content:after,.jazz-timeline .blue-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .blue-post .timeline-content:after,.jazz-timeline.one-sided .blue-post .timeline-content:before,.jazz-timeline.one-sided .blue-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .blue-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#2196f3}.jazz-timeline .grey-post .timeline-content{background:#7e8da3;border:1px solid #7e8da3;color:#fff}.jazz-timeline .grey-post .timeline-content .content-title{color:#fff}.jazz-timeline .grey-post .timeline-content:after,.jazz-timeline .grey-post .timeline-content:before{border-left-color:#7e8da3}.jazz-timeline .grey-post:nth-child(even) .timeline-content:after,.jazz-timeline .grey-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .grey-post .timeline-content:after,.jazz-timeline.one-sided .grey-post .timeline-content:before,.jazz-timeline.one-sided .grey-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .grey-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#7e8da3}.jazz-timeline .pink-post .timeline-content{background:#f282c7;border:1px solid #f282c7;color:#fff}.jazz-timeline .pink-post .timeline-content .content-title{color:#fff}.jazz-timeline .pink-post .timeline-content:after,.jazz-timeline .pink-post .timeline-content:before{border-left-color:#f282c7}.jazz-timeline .pink-post:nth-child(even) .timeline-content:after,.jazz-timeline .pink-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .pink-post .timeline-content:after,.jazz-timeline.one-sided .pink-post .timeline-content:before,.jazz-timeline.one-sided .pink-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .pink-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#f282c7}.jazz-timeline .green-post .timeline-content{background:#75ce66;border:1px solid #75ce66;color:#fff}.jazz-timeline .green-post .timeline-content .content-title{color:#fff}.jazz-timeline .green-post .timeline-content:after,.jazz-timeline .green-post .timeline-content:before{border-left-color:#75ce66}.jazz-timeline .green-post:nth-child(even) .timeline-content:after,.jazz-timeline .green-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .green-post .timeline-content:after,.jazz-timeline.one-sided .green-post .timeline-content:before,.jazz-timeline.one-sided .green-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .green-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#75ce66}.jazz-timeline .white-post .timeline-content{background:#fff;border:1px solid #fff}.jazz-timeline .white-post .timeline-content:after,.jazz-timeline .white-post .timeline-content:before{border-left-color:#fff}.jazz-timeline .white-post:nth-child(even) .timeline-content:after,.jazz-timeline .white-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .white-post .timeline-content:after,.jazz-timeline.one-sided .white-post .timeline-content:before,.jazz-timeline.one-sided .white-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .white-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#fff}.jazz-timeline .purple-post .timeline-content{background:#9c27b0;border:1px solid #9c27b0;color:#fff}.jazz-timeline .purple-post .timeline-content .content-title{color:#fff}.jazz-timeline .purple-post .timeline-content:after,.jazz-timeline .purple-post .timeline-content:before{border-left-color:#9c27b0}.jazz-timeline .purple-post:nth-child(even) .timeline-content:after,.jazz-timeline .purple-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .purple-post .timeline-content:after,.jazz-timeline.one-sided .purple-post .timeline-content:before,.jazz-timeline.one-sided .purple-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .purple-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#9c27b0}.jazz-timeline .indigo-post .timeline-content{background:#3f51b5;border:1px solid #3f51b5;color:#fff}.jazz-timeline .indigo-post .timeline-content .content-title{color:#fff}.jazz-timeline .indigo-post .timeline-content:after,.jazz-timeline .indigo-post .timeline-content:before{border-left-color:#3f51b5}.jazz-timeline .indigo-post:nth-child(even) .timeline-content:after,.jazz-timeline .indigo-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .indigo-post .timeline-content:after,.jazz-timeline.one-sided .indigo-post .timeline-content:before,.jazz-timeline.one-sided .indigo-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .indigo-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#3f51b5}.jazz-timeline .orange-post .timeline-content{background:#f0ca45;border:1px solid #f0ca45;color:#fff}.jazz-timeline .orange-post .timeline-content .content-title{color:#fff}.jazz-timeline .orange-post .timeline-content:after,.jazz-timeline .orange-post .timeline-content:before{border-left-color:#f0ca45}.jazz-timeline .orange-post:nth-child(even) .timeline-content:after,.jazz-timeline .orange-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .orange-post .timeline-content:after,.jazz-timeline.one-sided .orange-post .timeline-content:before,.jazz-timeline.one-sided .orange-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .orange-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#f0ca45}.jazz-timeline .turqoise-post .timeline-content{background:#28c0c6;border:1px solid #28c0c6;color:#fff}.jazz-timeline .turqoise-post .timeline-content .content-title{color:#fff}.jazz-timeline .turqoise-post .timeline-content:after,.jazz-timeline .turqoise-post .timeline-content:before{border-left-color:#28c0c6}.jazz-timeline .turqoise-post:nth-child(even) .timeline-content:after,.jazz-timeline .turqoise-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .turqoise-post .timeline-content:after,.jazz-timeline.one-sided .turqoise-post .timeline-content:before,.jazz-timeline.one-sided .turqoise-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .turqoise-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#28c0c6}.jazz-timeline .brown-post .timeline-content{background:#e46d2b;border:1px solid #e46d2b;color:#fff}.jazz-timeline .brown-post .timeline-content .content-title{color:#fff}.jazz-timeline .brown-post .timeline-content:after,.jazz-timeline .brown-post .timeline-content:before{border-left-color:#e46d2b}.jazz-timeline .brown-post:nth-child(even) .timeline-content:after,.jazz-timeline .brown-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .brown-post .timeline-content:after,.jazz-timeline.one-sided .brown-post .timeline-content:before,.jazz-timeline.one-sided .brown-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .brown-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#e46d2b}.jazz-timeline .black-post .timeline-content{background:#2f3949;border:1px solid #2f3949;color:#fff}.jazz-timeline .black-post .timeline-content .content-title{color:#fff}.jazz-timeline .black-post .timeline-content:after,.jazz-timeline .black-post .timeline-content:before{border-left-color:#2f3949}.jazz-timeline .black-post:nth-child(even) .timeline-content:after,.jazz-timeline .black-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .black-post .timeline-content:after,.jazz-timeline.one-sided .black-post .timeline-content:before,.jazz-timeline.one-sided .black-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .black-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#2f3949}.jazz-timeline .light-grey-post .timeline-content{background:#f0f2f4;border:1px solid #f0f2f4;-webkit-border-radius:8px 8px 5px 5px;-moz-border-radius:8px 8px 5px 5px;border-radius:8px 8px 5px 5px;color:#474b51}.jazz-timeline .light-grey-post .timeline-content .content-title{color:#fff;-webkit-border-radius:4px 4px 0 0;-moz-border-radius:4px 4px 0 0;border-radius:4px 4px 0 0}.solid-shadow .timeline-post .timeline-content{-webkit-box-shadow:0 4px rgba(0,0,0,.2);-moz-box-shadow:0 4px rgba(0,0,0,.2);box-shadow:0 4px rgba(0,0,0,.2)}.solid-shadow .timeline-post .timeline-content:before{border:15px solid transparent;border-left-color:rgba(0,0,0,.2);right:-31px;top:29px}.solid-shadow .timeline-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:rgba(0,0,0,.2);left:-31px;top:30px}.bordered-timeline .timeline-post .timeline-content{border:1px solid #ccc}.bordered-timeline .timeline-post .timeline-content:before{border:15px solid transparent;border-left-color:#bbb;right:-30px;top:26px}.bordered-timeline .timeline-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#bbb;left:-30px;top:26px}.jazz-timeline.bordered-timeline.one-sided .timeline-post .timeline-content:after,.jazz-timeline.bordered-timeline.one-sided .timeline-post:nth-child(even) .timeline-content:after{border:14px solid transparent;border-right-color:#fff;left:-28px;right:auto}.jazz-timeline.bordered-timeline.one-sided .timeline-post .timeline-content:before,.jazz-timeline.bordered-timeline.one-sided .timeline-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#aaa;left:-30px;top:26px}.dark-timeline.ultimate-style:before,.dark-timeline:before,.jazz-timeline.dark-timeline.one-sided:before{background-color:#32363b;background-image:-webkit-linear-gradient(top,#1c1f23 0,#32363b 8%,#32363b 92%,#1c1f23 100%);background-image:-moz-linear-gradient(top,#1c1f23 0,#32363b 8%,#32363b 92%,#1c1f23 100%);background-image:-ms-linear-gradient(top,#1c1f23 0,#32363b 8%,#32363b 92%,#1c1f23 100%)}.dark-timeline .timeline-post .icon-dot .timeline-bar,.dark-timeline .timeline-post .icon-dot-full,.dark-timeline.ultimate-style .timeline-post .icon-dot .timeline-bar,.dark-timeline.ultimate-style .timeline-post .icon-dot-full-white .timeline-bar,.jazz-timeline.dark-timeline.one-sided .timeline-post .icon-dot .timeline-bar,.jazz-timeline.dark-timeline.one-sided .timeline-post .icon-dot-full,.jazz-timeline.dark-timeline.one-sided .timeline-post .icon-dot-full-white .timeline-bar{background:#32363b}.dark-timeline .timeline-post .icon-dot,.dark-timeline.ultimate-style .timeline-post .icon-dot,.jazz-timeline.dark-timeline.one-sided .timeline-post .icon-dot{background:#1c1f23}.dark-timeline .timeline-post .iconbg-black,.dark-timeline .timeline-post .iconbg-blue,.dark-timeline .timeline-post .iconbg-brown,.dark-timeline .timeline-post .iconbg-green,.dark-timeline .timeline-post .iconbg-grey,.dark-timeline .timeline-post .iconbg-indigo,.dark-timeline .timeline-post .iconbg-opal,.dark-timeline .timeline-post .iconbg-orange,.dark-timeline .timeline-post .iconbg-pink,.dark-timeline .timeline-post .iconbg-purple,.dark-timeline .timeline-post .iconbg-red,.dark-timeline .timeline-post .iconbg-turqoise,.dark-timeline .timeline-post .iconbg-white{-webkit-box-shadow:0 0 0 4px #fff,inset 0 2px 0 transparent,0 3px 0 4px transparent;-moz-box-shadow:0 0 0 4px #fff,inset 0 2px 0 transparent,0 3px 0 4px transparent;box-shadow:0 0 0 4px #fff,inset 0 2px 0 transparent,0 3px 0 4px transparent}.jazz-timeline.white-timeline.one-sided:before,.white-timeline:before{background-color:#32363b;background-image:-webkit-linear-gradient(top,#fff 0,#c1c1c1 8%,#c1c1c1 92%,#fff 100%);background-image:-moz-linear-gradient(top,#fff 0,#c1c1c1 8%,#c1c1c1 92%,#fff 100%);background-image:-ms-linear-gradient(top,#fff 0,#c1c1c1 8%,#c1c1c1 92%,#fff 100%)}.jazz-timeline.white-timeline.one-sided .timeline-post .icon-dot .timeline-bar,.jazz-timeline.white-timeline.one-sided .timeline-post .icon-dot-full,.jazz-timeline.white-timeline.one-sided .timeline-post .icon-dot-full-white .timeline-bar,.white-timeline .timeline-post .icon-dot .timeline-bar,.white-timeline .timeline-post .icon-dot-full,.white-timeline .timeline-post .icon-dot-full-white .timeline-bar{background:#c1c1c1}.jazz-timeline.white-timeline.one-sided .timeline-post .icon-dot,.white-timeline .timeline-post .icon-dot{background:#fff}.white-timeline .timeline-post .iconbg-black,.white-timeline .timeline-post .iconbg-blue,.white-timeline .timeline-post .iconbg-brown,.white-timeline .timeline-post .iconbg-green,.white-timeline .timeline-post .iconbg-grey,.white-timeline .timeline-post .iconbg-indigo,.white-timeline .timeline-post .iconbg-opal,.white-timeline .timeline-post .iconbg-orange,.white-timeline .timeline-post .iconbg-pink,.white-timeline .timeline-post .iconbg-purple,.white-timeline .timeline-post .iconbg-red,.white-timeline .timeline-post .iconbg-turqoise,.white-timeline .timeline-post .iconbg-white{-webkit-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px rgba(0,0,0,.05),0 0 0 8px rgba(0,0,0,.2);-moz-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px rgba(0,0,0,.05),0 0 0 8px rgba(0,0,0,.2);box-shadow:0 0 0 4px #fff,inset 0 0 0 2px rgba(0,0,0,.05),0 0 0 8px rgba(0,0,0,.2)}.ultimate-style .timeline-post .timeline-content{padding:0;border:0}.ultimate-style .timeline-post .timeline-content:after,.ultimate-style .timeline-post .timeline-content:before{display:none}.ultimate-style .timeline-post .timeline-content .content-details{padding:30px;padding-top:20px}.ultimate-style .timeline-post .timeline-content .content-title{margin:0;padding:18px 30px;-webkit-border-radius:5px 5px 0 0;-moz-border-radius:5px 5px 0 0;border-radius:5px 5px 0 0;position:relative}.ultimate-style .timeline-post .red-title{background:#dc4747;color:#fff}.ultimate-style .timeline-post .opal-title{background:#49a7cf;color:#fff}.ultimate-style .timeline-post .blue-title{background:#0d83e3;color:#fff}.ultimate-style .timeline-post .grey-title{background:#697892;color:#fff}.ultimate-style .timeline-post .pink-title{background:#ec4aaf;color:#fff}.ultimate-style .timeline-post .black-title{background:#28313e;color:#fff}.ultimate-style .timeline-post .green-title{background:#4eb83a;color:#fff}.ultimate-style .timeline-post .brown-title{background:#d75e1c;color:#fff}.ultimate-style .timeline-post .white-title{background:#fff;color:#fff}.ultimate-style .timeline-post .purple-title{background:#872299;color:#fff}.ultimate-style .timeline-post .indigo-title{background:#3848a0;color:#fff}.ultimate-style .timeline-post .orange-title{background:#e6b613;color:#fff}.ultimate-style .timeline-post .turqoise-title{background:#25acb4;color:#fff}.ultimate-style .timeline-post .timeline-content .content-title:before{content:\"\";display:block;border:15px solid transparent;border-left-color:#fff;position:absolute;right:-24px;top:20px}.ultimate-style .timeline-post:nth-child(even) .timeline-content .content-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .content-title:before{border:15px solid transparent;border-right-color:#fff;left:-24px;right:auto}.ultimate-style .timeline-post .timeline-content .turqoise-title:before{border-left-color:#25acb4}.ultimate-style .timeline-post:nth-child(even) .timeline-content .turqoise-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .turqoise-title:before{border-right-color:#25acb4}.ultimate-style .timeline-post .timeline-content .orange-title:before{border-left-color:#e6b613}.ultimate-style .timeline-post:nth-child(even) .timeline-content .orange-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .orange-title:before{border-right-color:#e6b613}.ultimate-style .timeline-post .timeline-content .indigo-title:before{border-left-color:#3848a0}.ultimate-style .timeline-post:nth-child(even) .timeline-content .indigo-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .indigo-title:before{border-right-color:#3848a0}.ultimate-style .timeline-post .timeline-content .purple-title:before{border-left-color:#872299}.ultimate-style .timeline-post:nth-child(even) .timeline-content .purple-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .purple-title:before{border-right-color:#872299}.ultimate-style .timeline-post .timeline-content .white-title:before{border-left-color:#fff}.ultimate-style .timeline-post:nth-child(even) .timeline-content .white-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .white-title:before{border-right-color:#fff}.ultimate-style .timeline-post .timeline-content .brown-title:before{border-left-color:#d75e1c}.ultimate-style .timeline-post:nth-child(even) .timeline-content .brown-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .brown-title:before{border-right-color:#d75e1c}.ultimate-style .timeline-post .timeline-content .green-title:before{border-left-color:#4eb83a}.ultimate-style .timeline-post:nth-child(even) .timeline-content .green-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .green-title:before{border-right-color:#4eb83a}.ultimate-style .timeline-post .timeline-content .black-title:before{border-left-color:#28313e}.ultimate-style .timeline-post:nth-child(even) .timeline-content .black-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .black-title:before{border-right-color:#28313e}.ultimate-style .timeline-post .timeline-content .pink-title:before{border-left-color:#ec4aaf}.ultimate-style .timeline-post:nth-child(even) .timeline-content .pink-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .pink-title:before{border-right-color:#ec4aaf}.ultimate-style .timeline-post .timeline-content .grey-title:before{border-left-color:#697892}.ultimate-style .timeline-post:nth-child(even) .timeline-content .grey-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .grey-title:before{border-right-color:#697892}.ultimate-style .timeline-post .timeline-content .blue-title:before{border-left-color:#0d83e3}.ultimate-style .timeline-post:nth-child(even) .timeline-content .blue-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .blue-title:before{border-right-color:#0d83e3}.ultimate-style .timeline-post .timeline-content .opal-title:before{border-left-color:#49a7cf}.ultimate-style .timeline-post:nth-child(even) .timeline-content .opal-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .opal-title:before{border-right-color:#49a7cf}.ultimate-style .timeline-post .timeline-content .red-title:before{border-left-color:#dc4747}.ultimate-style .timeline-post:nth-child(even) .timeline-content .red-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .red-title:before{border-right-color:#dc4747}.multiline-timeline .timeline-post .iconbg-black,.multiline-timeline .timeline-post .iconbg-blue,.multiline-timeline .timeline-post .iconbg-brown,.multiline-timeline .timeline-post .iconbg-green,.multiline-timeline .timeline-post .iconbg-grey,.multiline-timeline .timeline-post .iconbg-indigo,.multiline-timeline .timeline-post .iconbg-opal,.multiline-timeline .timeline-post .iconbg-orange,.multiline-timeline .timeline-post .iconbg-pink,.multiline-timeline .timeline-post .iconbg-purple,.multiline-timeline .timeline-post .iconbg-red,.multiline-timeline .timeline-post .iconbg-turqoise,.multiline-timeline .timeline-post .iconbg-white{-webkit-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px rgba(0,0,0,.05),0 0 0 8px #c1c1c1;-moz-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px rgba(0,0,0,.05),0 0 0 8px #c1c1c1;box-shadow:0 0 0 4px #fff,inset 0 0 0 2px rgba(0,0,0,.05),0 0 0 8px #c1c1c1}.multiline-timeline .timeline-post .timeline-icon,.multiline-timeline .timeline-post .timeline-meta,.multiline-timeline .timeline-post:before{left:100%}.multiline-timeline .timeline-post:nth-child(even) .timeline-icon,.multiline-timeline .timeline-post:nth-child(even):before,.multiline-timeline.one-sided .timeline-post:before,.multiline-timeline.one-sided .timeline-post:nth-child(even):before{left:0}.multiline-timeline .timeline-post:nth-child(even) .timeline-meta{right:100%}.multiline-timeline .timeline-post .timeline-meta .meta-details{white-space:nowrap}.multiline-timeline .turqoise-trail .icon-dot .timeline-bar,.multiline-timeline .turqoise-trail .icon-dot-full,.multiline-timeline .turqoise-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .turqoise-trail:before,.multiline-timeline.one-sided .timeline-post.turqoise-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.turqoise-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.turqoise-trail .icon-dot-full-white .timeline-bar{background:#28c0c6}.multiline-timeline .turqoise-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.turqoise-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #28c0c6;-moz-box-shadow:0 0 0 2px #28c0c6;box-shadow:0 0 0 2px #28c0c6}.multiline-timeline .turqoise-trail .iconbg-turqoise{-webkit-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #28c0c6;-moz-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #28c0c6;box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #28c0c6}.multiline-timeline .black-trail .icon-dot .timeline-bar,.multiline-timeline .black-trail .icon-dot-full,.multiline-timeline .black-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .black-trail:before,.multiline-timeline.one-sided .timeline-post.black-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.black-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.black-trail .icon-dot-full-white .timeline-bar{background:#2f3949}.multiline-timeline .black-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.black-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #2f3949;-moz-box-shadow:0 0 0 2px #2f3949;box-shadow:0 0 0 2px #2f3949}.multiline-timeline .black-trail .iconbg-black{-webkit-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #2f3949;-moz-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #2f3949;box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #2f3949}.multiline-timeline .brown-trail .icon-dot .timeline-bar,.multiline-timeline .brown-trail .icon-dot-full,.multiline-timeline .brown-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .brown-trail:before,.multiline-timeline.one-sided .timeline-post.brown-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.brown-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.brown-trail .icon-dot-full-white .timeline-bar{background:#e46d2b}.multiline-timeline .brown-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.brown-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #e46d2b;-moz-box-shadow:0 0 0 2px #e46d2b;box-shadow:0 0 0 2px #e46d2b}.multiline-timeline .brown-trail .iconbg-brown{-webkit-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #e46d2b;-moz-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #e46d2b;box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #e46d2b}.multiline-timeline .indigo-trail .icon-dot .timeline-bar,.multiline-timeline .indigo-trail .icon-dot-full,.multiline-timeline .indigo-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .indigo-trail:before,.multiline-timeline.one-sided .timeline-post.indigo-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.indigo-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.indigo-trail .icon-dot-full-white .timeline-bar{background:#3f51b5}.multiline-timeline .indigo-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.indigo-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #3f51b5;-moz-box-shadow:0 0 0 2px #3f51b5;box-shadow:0 0 0 2px #3f51b5}.multiline-timeline .indigo-trail .iconbg-indigo{-webkit-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #3f51b5;-moz-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #3f51b5;box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #3f51b5}.multiline-timeline .purple-trail .icon-dot .timeline-bar,.multiline-timeline .purple-trail .icon-dot-full,.multiline-timeline .purple-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .purple-trail:before,.multiline-timeline.one-sided .timeline-post.purple-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.purple-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.purple-trail .icon-dot-full-white .timeline-bar{background:#9c27b0}.multiline-timeline .purple-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.purple-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #9c27b0;-moz-box-shadow:0 0 0 2px #9c27b0;box-shadow:0 0 0 2px #9c27b0}.multiline-timeline .purple-trail .iconbg-purple{-webkit-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #9c27b0;-moz-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #9c27b0;box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #9c27b0}.multiline-timeline .grey-trail .icon-dot .timeline-bar,.multiline-timeline .grey-trail .icon-dot-full,.multiline-timeline .grey-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .grey-trail:before,.multiline-timeline.one-sided .timeline-post.grey-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.grey-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.grey-trail .icon-dot-full-white .timeline-bar{background:#7e8da3}.multiline-timeline .grey-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.grey-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #7e8da3;-moz-box-shadow:0 0 0 2px #7e8da3;box-shadow:0 0 0 2px #7e8da3}.multiline-timeline .grey-trail .iconbg-grey{-webkit-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #7e8da3;-moz-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #7e8da3;box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #7e8da3}.multiline-timeline .blue-trail .icon-dot .timeline-bar,.multiline-timeline .blue-trail .icon-dot-full,.multiline-timeline .blue-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .blue-trail:before,.multiline-timeline.one-sided .timeline-post.blue-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.blue-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.blue-trail .icon-dot-full-white .timeline-bar{background:#2196f3}.multiline-timeline .blue-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.blue-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #2196f3;-moz-box-shadow:0 0 0 2px #2196f3;box-shadow:0 0 0 2px #2196f3}.multiline-timeline .blue-trail .iconbg-blue{-webkit-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #2196f3;-moz-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #2196f3;box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #2196f3}.multiline-timeline .red-trail .icon-dot .timeline-bar,.multiline-timeline .red-trail .icon-dot-full,.multiline-timeline .red-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .red-trail:before,.multiline-timeline.one-sided .timeline-post.red-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.red-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.red-trail .icon-dot-full-white .timeline-bar{background:#f25b5a}.multiline-timeline .red-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.red-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #f25b5a;-moz-box-shadow:0 0 0 2px #f25b5a;box-shadow:0 0 0 2px #f25b5a}.multiline-timeline .red-trail .iconbg-red{-webkit-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #f25b5a;-moz-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #f25b5a;box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #f25b5a}.multiline-timeline .orange-trail .icon-dot .timeline-bar,.multiline-timeline .orange-trail .icon-dot-full,.multiline-timeline .orange-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .orange-trail:before,.multiline-timeline.one-sided .timeline-post.orange-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.orange-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.orange-trail .icon-dot-full-white .timeline-bar{background:#f0ca45}.multiline-timeline .orange-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.orange-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #f0ca45;-moz-box-shadow:0 0 0 2px #f0ca45;box-shadow:0 0 0 2px #f0ca45}.multiline-timeline .orange-trail .iconbg-orange{-webkit-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #f0ca45;-moz-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #f0ca45;box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #f0ca45}.multiline-timeline .opal-trail .icon-dot .timeline-bar,.multiline-timeline .opal-trail .icon-dot-full,.multiline-timeline .opal-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .opal-trail:before,.multiline-timeline.one-sided .timeline-post.opal-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.opal-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.opal-trail .icon-dot-full-white .timeline-bar{background:#76bbda}.multiline-timeline .opal-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.opal-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #76bbda;-moz-box-shadow:0 0 0 2px #76bbda;box-shadow:0 0 0 2px #76bbda}.multiline-timeline .opal-trail .iconbg-opal{-webkit-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #76bbda;-moz-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #76bbda;box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #76bbda}.multiline-timeline .green-trail .icon-dot .timeline-bar,.multiline-timeline .green-trail .icon-dot-full,.multiline-timeline .green-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .green-trail:before,.multiline-timeline.one-sided .timeline-post.green-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.green-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.green-trail .icon-dot-full-white .timeline-bar{background:#75ce66}.multiline-timeline .green-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.green-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #75ce66;-moz-box-shadow:0 0 0 2px #75ce66;box-shadow:0 0 0 2px #75ce66}.multiline-timeline .green-trail .iconbg-green{-webkit-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #75ce66;-moz-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #75ce66;box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #75ce66}.multiline-timeline .pink-trail .icon-dot .timeline-bar,.multiline-timeline .pink-trail .icon-dot-full,.multiline-timeline .pink-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .pink-trail:before,.multiline-timeline.one-sided .timeline-post.pink-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.pink-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.pink-trail .icon-dot-full-white .timeline-bar{background:#f282c7}.multiline-timeline .pink-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.pink-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #f282c7;-moz-box-shadow:0 0 0 2px #f282c7;box-shadow:0 0 0 2px #f282c7}.multiline-timeline .pink-trail .iconbg-pink{-webkit-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #f282c7;-moz-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #f282c7;box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #f282c7}.jazz-timeline .timeline-post .timeline-content .video-box:last-child,.jazz-timeline .timeline-post .timeline-content blockquote:last-child{margin-bottom:0}.jazz-timeline .timeline-post .timeline-content img{max-width:100%;display:block;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}.jazz-timeline .timeline-post .content-details .map{display:block;height:200px;width:100%}.jazz-timeline .timeline-post .content-details .map-wrap{width:240px;overflow:hidden}.jazz-timeline .timeline-post .content-details .map-wrap .map-title{font-size:14px;text-transform:uppercase;line-height:normal;padding-bottom:4px;display:block;color:#27acce;width:100%;margin:0}.jazz-timeline .timeline-post .content-details .map-wrap p{clear:both;font-size:14px;display:block;padding-bottom:2px;color:#999;margin:0}.jazz-timeline .timeline-post .content-details .map-wrap .map-info{font-size:12px;margin-top:5px;color:#444}.jazz-timeline .timeline-post .content-details .map-wrap .map-info i{margin-right:5px;font-size:14px}.jazz-timeline .timeline-post .content-details .map,.jazz-timeline .timeline-post .content-details .media-container{margin-top:10px;border:5px solid #fff;-webkit-box-shadow:0 0 4px rgba(0,0,0,.3);-moz-box-shadow:0 0 4px rgba(0,0,0,.3);box-shadow:0 0 4px rgba(0,0,0,.3)}.jazz-timeline .timeline-post .content-details .media-box{float:none;clear:both;width:100%;position:relative;padding-bottom:56.25%;padding-top:25px;height:0}.jazz-timeline .timeline-post .content-details .media-box embed,.jazz-timeline .timeline-post .content-details .media-box iframe,.jazz-timeline .timeline-post .content-details .media-box object,.jazz-timeline .timeline-post .content-details .media-box video{position:absolute;width:100%!important;height:100%!important;border:0;left:0;top:0}.jazz-timeline .timeline-post .content-details .audio-box iframe{width:100%!important;height:100%!important;display:block;margin:0;border:0}@media (max-width:860px){.jazz-timeline:before,.multiline-timeline .timeline-post:before{left:16px}.jazz-timeline .timeline-post,.jazz-timeline .timeline-post:nth-child(even){margin:0;padding:0 0 30px 60px;width:100%}.jazz-timeline .timeline-post .timeline-meta,.jazz-timeline .timeline-post:nth-child(even) .timeline-meta{left:0;right:0;margin:0 0 5px;position:relative;text-align:left}.jazz-timeline .timeline-post .timeline-icon{left:0;margin:22px 0 0}.jazz-timeline .timeline-post .timeline-content:before,.jazz-timeline .timeline-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#fff;left:-30px;right:auto}.jazz-timeline .timeline-post .timeline-content:after,.jazz-timeline .timeline-post:nth-child(even) .timeline-content:after{border:14px solid transparent;border-right-color:#fff;left:-28px;right:auto}.jazz-timeline .red-post .timeline-content:after,.jazz-timeline .red-post .timeline-content:before,.jazz-timeline .red-post:nth-child(even) .timeline-content:after,.jazz-timeline .red-post:nth-child(even) .timeline-content:before{border-right-color:#f25b5a}.jazz-timeline .opal-post .timeline-content:after,.jazz-timeline .opal-post .timeline-content:before,.jazz-timeline .opal-post:nth-child(even) .timeline-content:after,.jazz-timeline .opal-post:nth-child(even) .timeline-content:before{border-right-color:#76bbda}.jazz-timeline .blue-post .timeline-content:after,.jazz-timeline .blue-post .timeline-content:before,.jazz-timeline .blue-post:nth-child(even) .timeline-content:after,.jazz-timeline .blue-post:nth-child(even) .timeline-content:before{border-right-color:#2196f3}.jazz-timeline .grey-post .timeline-content:after,.jazz-timeline .grey-post .timeline-content:before,.jazz-timeline .grey-post:nth-child(even) .timeline-content:after,.jazz-timeline .grey-post:nth-child(even) .timeline-content:before{border-right-color:#7e8da3}.jazz-timeline .pink-post .timeline-content:after,.jazz-timeline .pink-post .timeline-content:before,.jazz-timeline .pink-post:nth-child(even) .timeline-content:after,.jazz-timeline .pink-post:nth-child(even) .timeline-content:before{border-right-color:#f282c7}.jazz-timeline .green-post .timeline-content:after,.jazz-timeline .green-post .timeline-content:before,.jazz-timeline .green-post:nth-child(even) .timeline-content:after,.jazz-timeline .green-post:nth-child(even) .timeline-content:before{border-right-color:#75ce66}.jazz-timeline .white-post .timeline-content:after,.jazz-timeline .white-post .timeline-content:before,.jazz-timeline .white-post:nth-child(even) .timeline-content:after,.jazz-timeline .white-post:nth-child(even) .timeline-content:before{border-right-color:#fff}.jazz-timeline .purple-post .timeline-content:after,.jazz-timeline .purple-post .timeline-content:before,.jazz-timeline .purple-post:nth-child(even) .timeline-content:after,.jazz-timeline .purple-post:nth-child(even) .timeline-content:before{border-right-color:#9c27b0}.jazz-timeline .indigo-post .timeline-content:after,.jazz-timeline .indigo-post .timeline-content:before,.jazz-timeline .indigo-post:nth-child(even) .timeline-content:after,.jazz-timeline .indigo-post:nth-child(even) .timeline-content:before{border-right-color:#3f51b5}.jazz-timeline .orange-post .timeline-content:after,.jazz-timeline .orange-post .timeline-content:before,.jazz-timeline .orange-post:nth-child(even) .timeline-content:after,.jazz-timeline .orange-post:nth-child(even) .timeline-content:before{border-right-color:#f0ca45}.jazz-timeline .turqoise-post .timeline-content:after,.jazz-timeline .turqoise-post .timeline-content:before,.jazz-timeline .turqoise-post:nth-child(even) .timeline-content:after,.jazz-timeline .turqoise-post:nth-child(even) .timeline-content:before{border-right-color:#28c0c6}.jazz-timeline .brown-post .timeline-content:after,.jazz-timeline .brown-post .timeline-content:before,.jazz-timeline .brown-post:nth-child(even) .timeline-content:after,.jazz-timeline .brown-post:nth-child(even) .timeline-content:before{border-right-color:#e46d2b}.jazz-timeline .black-post .timeline-content:after,.jazz-timeline .black-post .timeline-content:before,.jazz-timeline .black-post:nth-child(even) .timeline-content:after,.jazz-timeline .black-post:nth-child(even) .timeline-content:before{border-right-color:#2f3949}.solid-shadow .timeline-post .timeline-content:before,.solid-shadow .timeline-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:rgba(0,0,0,.2);left:-31px;top:29px}.jazz-timeline .timeline-post .timeline-content .content-details img{width:100%}.jazz-timeline .timeline-post .icon-dot .timeline-bar{left:4px}.jazz-timeline .timeline-post .icon-dot{margin:30px 0 0 10px;height:14px;width:14px}.bordered-timeline .timeline-post .timeline-content:before,.bordered-timeline .timeline-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#bbb;left:-30px;top:26px}.jazz-timeline .timeline-post .icon-dot-full,.jazz-timeline .timeline-post .icon-dot-full-white{margin:30px 0 0 9px}.jazz-timeline .timeline-post .icon-larger,.jazz-timeline.one-sided .timeline-post .icon-larger{left:0;margin:22px 0 0 -10px;line-height:50px;height:50px;width:50px}.jazz-timeline.one-sided .timeline-post .icon-larger{margin:22px 0 0 -25px}.jazz-timeline.one-sided .timeline-post,.jazz-timeline.one-sided .timeline-post:nth-child(even){padding:0 0 30px 50px}.jazz-timeline .timeline-post .icon-larger .icon-placeholder{padding:2px 0}.jazz-timeline .timeline-post .icon-larger .icon-placeholder i{line-height:48px}.jazz-timeline .timeline-post .icon-larger .icon-placeholder span{line-height:0;font-weight:700;font-size:18px}.ultimate-style .timeline-post .timeline-content .content-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .content-title:before{content:\"\";display:block;border:15px solid transparent;border-right-color:#fff;position:absolute;left:-24px;right:auto;top:20px}.multiline-timeline .timeline-post .timeline-icon,.multiline-timeline .timeline-post .timeline-meta,.multiline-timeline .timeline-post:before,.multiline-timeline .timeline-post:nth-child(even) .timeline-icon,.multiline-timeline .timeline-post:nth-child(even) .timeline-meta,.multiline-timeline .timeline-post:nth-child(even):before{left:0;right:auto}.multiline-timeline .timeline-post .timeline-icon,.multiline-timeline .timeline-post:nth-child(even) .timeline-icon{margin:22px 0 0 -25px}.multiline-timeline .timeline-post .icon-dot,.multiline-timeline .timeline-post:nth-child(even) .icon-dot{margin:30px 0 0 -6px}.multiline-timeline .timeline-post .icon-dot-full,.multiline-timeline .timeline-post .icon-dot-full-white,.multiline-timeline .timeline-post:nth-child(even) .icon-dot-full,.multiline-timeline .timeline-post:nth-child(even) .icon-dot-full-white{margin:30px 0 0 -7px}.ultimate-style .timeline-post .timeline-content .turqoise-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .turqoise-title:before{border-right-color:#25acb4}.ultimate-style .timeline-post .timeline-content .orange-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .orange-title:before{border-right-color:#e6b613}.ultimate-style .timeline-post .timeline-content .indigo-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .indigo-title:before{border-right-color:#3848a0}.ultimate-style .timeline-post .timeline-content .purple-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .purple-title:before{border-right-color:#872299}.ultimate-style .timeline-post .timeline-content .white-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .white-title:before{border-right-color:#fff}.ultimate-style .timeline-post .timeline-content .brown-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .brown-title:before{border-right-color:#d75e1c}.ultimate-style .timeline-post .timeline-content .green-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .green-title:before{border-right-color:#4eb83a}.ultimate-style .timeline-post .timeline-content .black-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .black-title:before{border-right-color:#28313e}.ultimate-style .timeline-post .timeline-content .pink-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .pink-title:before{border-right-color:#ec4aaf}.ultimate-style .timeline-post .timeline-content .grey-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .grey-title:before{border-right-color:#697892}.ultimate-style .timeline-post .timeline-content .blue-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .blue-title:before{border-right-color:#0d83e3}.ultimate-style .timeline-post .timeline-content .opal-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .opal-title:before{border-right-color:#49a7cf}.ultimate-style .timeline-post .timeline-content .red-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .red-title:before{border-right-color:#dc4747}}\n/* rebuild by neat */","site":{"data":{}},"excerpt":"","more":"/* build time:Wed Dec 01 2021 15:50:10 GMT+0800 (中国标准时间)*/\n.fa{display:inline-block;font:normal normal normal 14px/1 FontAwesome;font-size:inherit;text-rendering:auto;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.fa-lg{font-size:1.33333333em;line-height:.75em;vertical-align:-15%}.fa-2x{font-size:2em}.fa-3x{font-size:3em}.fa-4x{font-size:4em}.fa-5x{font-size:5em}.fa-fw{width:1.28571429em;text-align:center}.fa-ul{padding-left:0;margin-left:2.14285714em;list-style-type:none}.fa-ul>li{position:relative}.fa-li{position:absolute;left:-2.14285714em;width:2.14285714em;top:.14285714em;text-align:center}.fa-li.fa-lg{left:-1.85714286em}.fa-border{padding:.2em .25em .15em;border:solid .08em #eee;border-radius:.1em}.fa-pull-left{float:left}.fa-pull-right{float:right}.fa.fa-pull-left{margin-right:.3em}.fa.fa-pull-right{margin-left:.3em}.pull-right{float:right}.pull-left{float:left}.fa.pull-left{margin-right:.3em}.fa.pull-right{margin-left:.3em}.fa-spin{-webkit-animation:fa-spin 2s infinite linear;animation:fa-spin 2s infinite linear}.fa-pulse{-webkit-animation:fa-spin 1s infinite steps(8);animation:fa-spin 1s infinite steps(8)}@-webkit-keyframes fa-spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}@keyframes fa-spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}.fa-rotate-90{-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg)}.fa-rotate-180{-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg)}.fa-rotate-270{-webkit-transform:rotate(270deg);-ms-transform:rotate(270deg);transform:rotate(270deg)}.fa-flip-horizontal{-webkit-transform:scale(-1,1);-ms-transform:scale(-1,1);transform:scale(-1,1)}.fa-flip-vertical{-webkit-transform:scale(1,-1);-ms-transform:scale(1,-1);transform:scale(1,-1)}:root .fa-flip-horizontal,:root .fa-flip-vertical,:root .fa-rotate-180,:root .fa-rotate-270,:root .fa-rotate-90{filter:none}.fa-stack{position:relative;display:inline-block;width:2em;height:2em;line-height:2em;vertical-align:middle}.fa-stack-1x,.fa-stack-2x{position:absolute;left:0;width:100%;text-align:center}.fa-stack-1x{line-height:inherit}.fa-stack-2x{font-size:2em}.fa-inverse{color:#fff}.fa-glass:before{content:\"\\f000\"}.fa-music:before{content:\"\\f001\"}.fa-search:before{content:\"\\f002\"}.fa-envelope-o:before{content:\"\\f003\"}.fa-heart:before{content:\"\\f004\"}.fa-star:before{content:\"\\f005\"}.fa-star-o:before{content:\"\\f006\"}.fa-user:before{content:\"\\f007\"}.fa-film:before{content:\"\\f008\"}.fa-th-large:before{content:\"\\f009\"}.fa-th:before{content:\"\\f00a\"}.fa-th-list:before{content:\"\\f00b\"}.fa-check:before{content:\"\\f00c\"}.fa-close:before,.fa-remove:before,.fa-times:before{content:\"\\f00d\"}.fa-search-plus:before{content:\"\\f00e\"}.fa-search-minus:before{content:\"\\f010\"}.fa-power-off:before{content:\"\\f011\"}.fa-signal:before{content:\"\\f012\"}.fa-cog:before,.fa-gear:before{content:\"\\f013\"}.fa-trash-o:before{content:\"\\f014\"}.fa-home:before{content:\"\\f015\"}.fa-file-o:before{content:\"\\f016\"}.fa-clock-o:before{content:\"\\f017\"}.fa-road:before{content:\"\\f018\"}.fa-download:before{content:\"\\f019\"}.fa-arrow-circle-o-down:before{content:\"\\f01a\"}.fa-arrow-circle-o-up:before{content:\"\\f01b\"}.fa-inbox:before{content:\"\\f01c\"}.fa-play-circle-o:before{content:\"\\f01d\"}.fa-repeat:before,.fa-rotate-right:before{content:\"\\f01e\"}.fa-refresh:before{content:\"\\f021\"}.fa-list-alt:before{content:\"\\f022\"}.fa-lock:before{content:\"\\f023\"}.fa-flag:before{content:\"\\f024\"}.fa-headphones:before{content:\"\\f025\"}.fa-volume-off:before{content:\"\\f026\"}.fa-volume-down:before{content:\"\\f027\"}.fa-volume-up:before{content:\"\\f028\"}.fa-qrcode:before{content:\"\\f029\"}.fa-barcode:before{content:\"\\f02a\"}.fa-tag:before{content:\"\\f02b\"}.fa-tags:before{content:\"\\f02c\"}.fa-book:before{content:\"\\f02d\"}.fa-bookmark:before{content:\"\\f02e\"}.fa-print:before{content:\"\\f02f\"}.fa-camera:before{content:\"\\f030\"}.fa-font:before{content:\"\\f031\"}.fa-bold:before{content:\"\\f032\"}.fa-italic:before{content:\"\\f033\"}.fa-text-height:before{content:\"\\f034\"}.fa-text-width:before{content:\"\\f035\"}.fa-align-left:before{content:\"\\f036\"}.fa-align-center:before{content:\"\\f037\"}.fa-align-right:before{content:\"\\f038\"}.fa-align-justify:before{content:\"\\f039\"}.fa-list:before{content:\"\\f03a\"}.fa-dedent:before,.fa-outdent:before{content:\"\\f03b\"}.fa-indent:before{content:\"\\f03c\"}.fa-video-camera:before{content:\"\\f03d\"}.fa-image:before,.fa-photo:before,.fa-picture-o:before{content:\"\\f03e\"}.fa-pencil:before{content:\"\\f040\"}.fa-map-marker:before{content:\"\\f041\"}.fa-adjust:before{content:\"\\f042\"}.fa-tint:before{content:\"\\f043\"}.fa-edit:before,.fa-pencil-square-o:before{content:\"\\f044\"}.fa-share-square-o:before{content:\"\\f045\"}.fa-check-square-o:before{content:\"\\f046\"}.fa-arrows:before{content:\"\\f047\"}.fa-step-backward:before{content:\"\\f048\"}.fa-fast-backward:before{content:\"\\f049\"}.fa-backward:before{content:\"\\f04a\"}.fa-play:before{content:\"\\f04b\"}.fa-pause:before{content:\"\\f04c\"}.fa-stop:before{content:\"\\f04d\"}.fa-forward:before{content:\"\\f04e\"}.fa-fast-forward:before{content:\"\\f050\"}.fa-step-forward:before{content:\"\\f051\"}.fa-eject:before{content:\"\\f052\"}.fa-chevron-left:before{content:\"\\f053\"}.fa-chevron-right:before{content:\"\\f054\"}.fa-plus-circle:before{content:\"\\f055\"}.fa-minus-circle:before{content:\"\\f056\"}.fa-times-circle:before{content:\"\\f057\"}.fa-check-circle:before{content:\"\\f058\"}.fa-question-circle:before{content:\"\\f059\"}.fa-info-circle:before{content:\"\\f05a\"}.fa-crosshairs:before{content:\"\\f05b\"}.fa-times-circle-o:before{content:\"\\f05c\"}.fa-check-circle-o:before{content:\"\\f05d\"}.fa-ban:before{content:\"\\f05e\"}.fa-arrow-left:before{content:\"\\f060\"}.fa-arrow-right:before{content:\"\\f061\"}.fa-arrow-up:before{content:\"\\f062\"}.fa-arrow-down:before{content:\"\\f063\"}.fa-mail-forward:before,.fa-share:before{content:\"\\f064\"}.fa-expand:before{content:\"\\f065\"}.fa-compress:before{content:\"\\f066\"}.fa-plus:before{content:\"\\f067\"}.fa-minus:before{content:\"\\f068\"}.fa-asterisk:before{content:\"\\f069\"}.fa-exclamation-circle:before{content:\"\\f06a\"}.fa-gift:before{content:\"\\f06b\"}.fa-leaf:before{content:\"\\f06c\"}.fa-fire:before{content:\"\\f06d\"}.fa-eye:before{content:\"\\f06e\"}.fa-eye-slash:before{content:\"\\f070\"}.fa-exclamation-triangle:before,.fa-warning:before{content:\"\\f071\"}.fa-plane:before{content:\"\\f072\"}.fa-calendar:before{content:\"\\f073\"}.fa-random:before{content:\"\\f074\"}.fa-comment:before{content:\"\\f075\"}.fa-magnet:before{content:\"\\f076\"}.fa-chevron-up:before{content:\"\\f077\"}.fa-chevron-down:before{content:\"\\f078\"}.fa-retweet:before{content:\"\\f079\"}.fa-shopping-cart:before{content:\"\\f07a\"}.fa-folder:before{content:\"\\f07b\"}.fa-folder-open:before{content:\"\\f07c\"}.fa-arrows-v:before{content:\"\\f07d\"}.fa-arrows-h:before{content:\"\\f07e\"}.fa-bar-chart-o:before,.fa-bar-chart:before{content:\"\\f080\"}.fa-twitter-square:before{content:\"\\f081\"}.fa-facebook-square:before{content:\"\\f082\"}.fa-camera-retro:before{content:\"\\f083\"}.fa-key:before{content:\"\\f084\"}.fa-cogs:before,.fa-gears:before{content:\"\\f085\"}.fa-comments:before{content:\"\\f086\"}.fa-thumbs-o-up:before{content:\"\\f087\"}.fa-thumbs-o-down:before{content:\"\\f088\"}.fa-star-half:before{content:\"\\f089\"}.fa-heart-o:before{content:\"\\f08a\"}.fa-sign-out:before{content:\"\\f08b\"}.fa-linkedin-square:before{content:\"\\f08c\"}.fa-thumb-tack:before{content:\"\\f08d\"}.fa-external-link:before{content:\"\\f08e\"}.fa-sign-in:before{content:\"\\f090\"}.fa-trophy:before{content:\"\\f091\"}.fa-github-square:before{content:\"\\f092\"}.fa-upload:before{content:\"\\f093\"}.fa-lemon-o:before{content:\"\\f094\"}.fa-phone:before{content:\"\\f095\"}.fa-square-o:before{content:\"\\f096\"}.fa-bookmark-o:before{content:\"\\f097\"}.fa-phone-square:before{content:\"\\f098\"}.fa-twitter:before{content:\"\\f099\"}.fa-facebook-f:before,.fa-facebook:before{content:\"\\f09a\"}.fa-github:before{content:\"\\f09b\"}.fa-unlock:before{content:\"\\f09c\"}.fa-credit-card:before{content:\"\\f09d\"}.fa-feed:before,.fa-rss:before{content:\"\\f09e\"}.fa-hdd-o:before{content:\"\\f0a0\"}.fa-bullhorn:before{content:\"\\f0a1\"}.fa-bell:before{content:\"\\f0f3\"}.fa-certificate:before{content:\"\\f0a3\"}.fa-hand-o-right:before{content:\"\\f0a4\"}.fa-hand-o-left:before{content:\"\\f0a5\"}.fa-hand-o-up:before{content:\"\\f0a6\"}.fa-hand-o-down:before{content:\"\\f0a7\"}.fa-arrow-circle-left:before{content:\"\\f0a8\"}.fa-arrow-circle-right:before{content:\"\\f0a9\"}.fa-arrow-circle-up:before{content:\"\\f0aa\"}.fa-arrow-circle-down:before{content:\"\\f0ab\"}.fa-globe:before{content:\"\\f0ac\"}.fa-wrench:before{content:\"\\f0ad\"}.fa-tasks:before{content:\"\\f0ae\"}.fa-filter:before{content:\"\\f0b0\"}.fa-briefcase:before{content:\"\\f0b1\"}.fa-arrows-alt:before{content:\"\\f0b2\"}.fa-group:before,.fa-users:before{content:\"\\f0c0\"}.fa-chain:before,.fa-link:before{content:\"\\f0c1\"}.fa-cloud:before{content:\"\\f0c2\"}.fa-flask:before{content:\"\\f0c3\"}.fa-cut:before,.fa-scissors:before{content:\"\\f0c4\"}.fa-copy:before,.fa-files-o:before{content:\"\\f0c5\"}.fa-paperclip:before{content:\"\\f0c6\"}.fa-floppy-o:before,.fa-save:before{content:\"\\f0c7\"}.fa-square:before{content:\"\\f0c8\"}.fa-bars:before,.fa-navicon:before,.fa-reorder:before{content:\"\\f0c9\"}.fa-list-ul:before{content:\"\\f0ca\"}.fa-list-ol:before{content:\"\\f0cb\"}.fa-strikethrough:before{content:\"\\f0cc\"}.fa-underline:before{content:\"\\f0cd\"}.fa-table:before{content:\"\\f0ce\"}.fa-magic:before{content:\"\\f0d0\"}.fa-truck:before{content:\"\\f0d1\"}.fa-pinterest:before{content:\"\\f0d2\"}.fa-pinterest-square:before{content:\"\\f0d3\"}.fa-google-plus-square:before{content:\"\\f0d4\"}.fa-google-plus:before{content:\"\\f0d5\"}.fa-money:before{content:\"\\f0d6\"}.fa-caret-down:before{content:\"\\f0d7\"}.fa-caret-up:before{content:\"\\f0d8\"}.fa-caret-left:before{content:\"\\f0d9\"}.fa-caret-right:before{content:\"\\f0da\"}.fa-columns:before{content:\"\\f0db\"}.fa-sort:before,.fa-unsorted:before{content:\"\\f0dc\"}.fa-sort-desc:before,.fa-sort-down:before{content:\"\\f0dd\"}.fa-sort-asc:before,.fa-sort-up:before{content:\"\\f0de\"}.fa-envelope:before{content:\"\\f0e0\"}.fa-linkedin:before{content:\"\\f0e1\"}.fa-rotate-left:before,.fa-undo:before{content:\"\\f0e2\"}.fa-gavel:before,.fa-legal:before{content:\"\\f0e3\"}.fa-dashboard:before,.fa-tachometer:before{content:\"\\f0e4\"}.fa-comment-o:before{content:\"\\f0e5\"}.fa-comments-o:before{content:\"\\f0e6\"}.fa-bolt:before,.fa-flash:before{content:\"\\f0e7\"}.fa-sitemap:before{content:\"\\f0e8\"}.fa-umbrella:before{content:\"\\f0e9\"}.fa-clipboard:before,.fa-paste:before{content:\"\\f0ea\"}.fa-lightbulb-o:before{content:\"\\f0eb\"}.fa-exchange:before{content:\"\\f0ec\"}.fa-cloud-download:before{content:\"\\f0ed\"}.fa-cloud-upload:before{content:\"\\f0ee\"}.fa-user-md:before{content:\"\\f0f0\"}.fa-stethoscope:before{content:\"\\f0f1\"}.fa-suitcase:before{content:\"\\f0f2\"}.fa-bell-o:before{content:\"\\f0a2\"}.fa-coffee:before{content:\"\\f0f4\"}.fa-cutlery:before{content:\"\\f0f5\"}.fa-file-text-o:before{content:\"\\f0f6\"}.fa-building-o:before{content:\"\\f0f7\"}.fa-hospital-o:before{content:\"\\f0f8\"}.fa-ambulance:before{content:\"\\f0f9\"}.fa-medkit:before{content:\"\\f0fa\"}.fa-fighter-jet:before{content:\"\\f0fb\"}.fa-beer:before{content:\"\\f0fc\"}.fa-h-square:before{content:\"\\f0fd\"}.fa-plus-square:before{content:\"\\f0fe\"}.fa-angle-double-left:before{content:\"\\f100\"}.fa-angle-double-right:before{content:\"\\f101\"}.fa-angle-double-up:before{content:\"\\f102\"}.fa-angle-double-down:before{content:\"\\f103\"}.fa-angle-left:before{content:\"\\f104\"}.fa-angle-right:before{content:\"\\f105\"}.fa-angle-up:before{content:\"\\f106\"}.fa-angle-down:before{content:\"\\f107\"}.fa-desktop:before{content:\"\\f108\"}.fa-laptop:before{content:\"\\f109\"}.fa-tablet:before{content:\"\\f10a\"}.fa-mobile-phone:before,.fa-mobile:before{content:\"\\f10b\"}.fa-circle-o:before{content:\"\\f10c\"}.fa-quote-left:before{content:\"\\f10d\"}.fa-quote-right:before{content:\"\\f10e\"}.fa-spinner:before{content:\"\\f110\"}.fa-circle:before{content:\"\\f111\"}.fa-mail-reply:before,.fa-reply:before{content:\"\\f112\"}.fa-github-alt:before{content:\"\\f113\"}.fa-folder-o:before{content:\"\\f114\"}.fa-folder-open-o:before{content:\"\\f115\"}.fa-smile-o:before{content:\"\\f118\"}.fa-frown-o:before{content:\"\\f119\"}.fa-meh-o:before{content:\"\\f11a\"}.fa-gamepad:before{content:\"\\f11b\"}.fa-keyboard-o:before{content:\"\\f11c\"}.fa-flag-o:before{content:\"\\f11d\"}.fa-flag-checkered:before{content:\"\\f11e\"}.fa-terminal:before{content:\"\\f120\"}.fa-code:before{content:\"\\f121\"}.fa-mail-reply-all:before,.fa-reply-all:before{content:\"\\f122\"}.fa-star-half-empty:before,.fa-star-half-full:before,.fa-star-half-o:before{content:\"\\f123\"}.fa-location-arrow:before{content:\"\\f124\"}.fa-crop:before{content:\"\\f125\"}.fa-code-fork:before{content:\"\\f126\"}.fa-chain-broken:before,.fa-unlink:before{content:\"\\f127\"}.fa-question:before{content:\"\\f128\"}.fa-info:before{content:\"\\f129\"}.fa-exclamation:before{content:\"\\f12a\"}.fa-superscript:before{content:\"\\f12b\"}.fa-subscript:before{content:\"\\f12c\"}.fa-eraser:before{content:\"\\f12d\"}.fa-puzzle-piece:before{content:\"\\f12e\"}.fa-microphone:before{content:\"\\f130\"}.fa-microphone-slash:before{content:\"\\f131\"}.fa-shield:before{content:\"\\f132\"}.fa-calendar-o:before{content:\"\\f133\"}.fa-fire-extinguisher:before{content:\"\\f134\"}.fa-rocket:before{content:\"\\f135\"}.fa-maxcdn:before{content:\"\\f136\"}.fa-chevron-circle-left:before{content:\"\\f137\"}.fa-chevron-circle-right:before{content:\"\\f138\"}.fa-chevron-circle-up:before{content:\"\\f139\"}.fa-chevron-circle-down:before{content:\"\\f13a\"}.fa-html5:before{content:\"\\f13b\"}.fa-css3:before{content:\"\\f13c\"}.fa-anchor:before{content:\"\\f13d\"}.fa-unlock-alt:before{content:\"\\f13e\"}.fa-bullseye:before{content:\"\\f140\"}.fa-ellipsis-h:before{content:\"\\f141\"}.fa-ellipsis-v:before{content:\"\\f142\"}.fa-rss-square:before{content:\"\\f143\"}.fa-play-circle:before{content:\"\\f144\"}.fa-ticket:before{content:\"\\f145\"}.fa-minus-square:before{content:\"\\f146\"}.fa-minus-square-o:before{content:\"\\f147\"}.fa-level-up:before{content:\"\\f148\"}.fa-level-down:before{content:\"\\f149\"}.fa-check-square:before{content:\"\\f14a\"}.fa-pencil-square:before{content:\"\\f14b\"}.fa-external-link-square:before{content:\"\\f14c\"}.fa-share-square:before{content:\"\\f14d\"}.fa-compass:before{content:\"\\f14e\"}.fa-caret-square-o-down:before,.fa-toggle-down:before{content:\"\\f150\"}.fa-caret-square-o-up:before,.fa-toggle-up:before{content:\"\\f151\"}.fa-caret-square-o-right:before,.fa-toggle-right:before{content:\"\\f152\"}.fa-eur:before,.fa-euro:before{content:\"\\f153\"}.fa-gbp:before{content:\"\\f154\"}.fa-dollar:before,.fa-usd:before{content:\"\\f155\"}.fa-inr:before,.fa-rupee:before{content:\"\\f156\"}.fa-cny:before,.fa-jpy:before,.fa-rmb:before,.fa-yen:before{content:\"\\f157\"}.fa-rouble:before,.fa-rub:before,.fa-ruble:before{content:\"\\f158\"}.fa-krw:before,.fa-won:before{content:\"\\f159\"}.fa-bitcoin:before,.fa-btc:before{content:\"\\f15a\"}.fa-file:before{content:\"\\f15b\"}.fa-file-text:before{content:\"\\f15c\"}.fa-sort-alpha-asc:before{content:\"\\f15d\"}.fa-sort-alpha-desc:before{content:\"\\f15e\"}.fa-sort-amount-asc:before{content:\"\\f160\"}.fa-sort-amount-desc:before{content:\"\\f161\"}.fa-sort-numeric-asc:before{content:\"\\f162\"}.fa-sort-numeric-desc:before{content:\"\\f163\"}.fa-thumbs-up:before{content:\"\\f164\"}.fa-thumbs-down:before{content:\"\\f165\"}.fa-youtube-square:before{content:\"\\f166\"}.fa-youtube:before{content:\"\\f167\"}.fa-xing:before{content:\"\\f168\"}.fa-xing-square:before{content:\"\\f169\"}.fa-youtube-play:before{content:\"\\f16a\"}.fa-dropbox:before{content:\"\\f16b\"}.fa-stack-overflow:before{content:\"\\f16c\"}.fa-instagram:before{content:\"\\f16d\"}.fa-flickr:before{content:\"\\f16e\"}.fa-adn:before{content:\"\\f170\"}.fa-bitbucket:before{content:\"\\f171\"}.fa-bitbucket-square:before{content:\"\\f172\"}.fa-tumblr:before{content:\"\\f173\"}.fa-tumblr-square:before{content:\"\\f174\"}.fa-long-arrow-down:before{content:\"\\f175\"}.fa-long-arrow-up:before{content:\"\\f176\"}.fa-long-arrow-left:before{content:\"\\f177\"}.fa-long-arrow-right:before{content:\"\\f178\"}.fa-apple:before{content:\"\\f179\"}.fa-windows:before{content:\"\\f17a\"}.fa-android:before{content:\"\\f17b\"}.fa-linux:before{content:\"\\f17c\"}.fa-dribbble:before{content:\"\\f17d\"}.fa-skype:before{content:\"\\f17e\"}.fa-foursquare:before{content:\"\\f180\"}.fa-trello:before{content:\"\\f181\"}.fa-female:before{content:\"\\f182\"}.fa-male:before{content:\"\\f183\"}.fa-gittip:before,.fa-gratipay:before{content:\"\\f184\"}.fa-sun-o:before{content:\"\\f185\"}.fa-moon-o:before{content:\"\\f186\"}.fa-archive:before{content:\"\\f187\"}.fa-bug:before{content:\"\\f188\"}.fa-vk:before{content:\"\\f189\"}.fa-weibo:before{content:\"\\f18a\"}.fa-renren:before{content:\"\\f18b\"}.fa-pagelines:before{content:\"\\f18c\"}.fa-stack-exchange:before{content:\"\\f18d\"}.fa-arrow-circle-o-right:before{content:\"\\f18e\"}.fa-arrow-circle-o-left:before{content:\"\\f190\"}.fa-caret-square-o-left:before,.fa-toggle-left:before{content:\"\\f191\"}.fa-dot-circle-o:before{content:\"\\f192\"}.fa-wheelchair:before{content:\"\\f193\"}.fa-vimeo-square:before{content:\"\\f194\"}.fa-try:before,.fa-turkish-lira:before{content:\"\\f195\"}.fa-plus-square-o:before{content:\"\\f196\"}.fa-space-shuttle:before{content:\"\\f197\"}.fa-slack:before{content:\"\\f198\"}.fa-envelope-square:before{content:\"\\f199\"}.fa-wordpress:before{content:\"\\f19a\"}.fa-openid:before{content:\"\\f19b\"}.fa-bank:before,.fa-institution:before,.fa-university:before{content:\"\\f19c\"}.fa-graduation-cap:before,.fa-mortar-board:before{content:\"\\f19d\"}.fa-yahoo:before{content:\"\\f19e\"}.fa-google:before{content:\"\\f1a0\"}.fa-reddit:before{content:\"\\f1a1\"}.fa-reddit-square:before{content:\"\\f1a2\"}.fa-stumbleupon-circle:before{content:\"\\f1a3\"}.fa-stumbleupon:before{content:\"\\f1a4\"}.fa-delicious:before{content:\"\\f1a5\"}.fa-digg:before{content:\"\\f1a6\"}.fa-pied-piper:before{content:\"\\f1a7\"}.fa-pied-piper-alt:before{content:\"\\f1a8\"}.fa-drupal:before{content:\"\\f1a9\"}.fa-joomla:before{content:\"\\f1aa\"}.fa-language:before{content:\"\\f1ab\"}.fa-fax:before{content:\"\\f1ac\"}.fa-building:before{content:\"\\f1ad\"}.fa-child:before{content:\"\\f1ae\"}.fa-paw:before{content:\"\\f1b0\"}.fa-spoon:before{content:\"\\f1b1\"}.fa-cube:before{content:\"\\f1b2\"}.fa-cubes:before{content:\"\\f1b3\"}.fa-behance:before{content:\"\\f1b4\"}.fa-behance-square:before{content:\"\\f1b5\"}.fa-steam:before{content:\"\\f1b6\"}.fa-steam-square:before{content:\"\\f1b7\"}.fa-recycle:before{content:\"\\f1b8\"}.fa-automobile:before,.fa-car:before{content:\"\\f1b9\"}.fa-cab:before,.fa-taxi:before{content:\"\\f1ba\"}.fa-tree:before{content:\"\\f1bb\"}.fa-spotify:before{content:\"\\f1bc\"}.fa-deviantart:before{content:\"\\f1bd\"}.fa-soundcloud:before{content:\"\\f1be\"}.fa-database:before{content:\"\\f1c0\"}.fa-file-pdf-o:before{content:\"\\f1c1\"}.fa-file-word-o:before{content:\"\\f1c2\"}.fa-file-excel-o:before{content:\"\\f1c3\"}.fa-file-powerpoint-o:before{content:\"\\f1c4\"}.fa-file-image-o:before,.fa-file-photo-o:before,.fa-file-picture-o:before{content:\"\\f1c5\"}.fa-file-archive-o:before,.fa-file-zip-o:before{content:\"\\f1c6\"}.fa-file-audio-o:before,.fa-file-sound-o:before{content:\"\\f1c7\"}.fa-file-movie-o:before,.fa-file-video-o:before{content:\"\\f1c8\"}.fa-file-code-o:before{content:\"\\f1c9\"}.fa-vine:before{content:\"\\f1ca\"}.fa-codepen:before{content:\"\\f1cb\"}.fa-jsfiddle:before{content:\"\\f1cc\"}.fa-life-bouy:before,.fa-life-buoy:before,.fa-life-ring:before,.fa-life-saver:before,.fa-support:before{content:\"\\f1cd\"}.fa-circle-o-notch:before{content:\"\\f1ce\"}.fa-ra:before,.fa-rebel:before{content:\"\\f1d0\"}.fa-empire:before,.fa-ge:before{content:\"\\f1d1\"}.fa-git-square:before{content:\"\\f1d2\"}.fa-git:before{content:\"\\f1d3\"}.fa-hacker-news:before,.fa-y-combinator-square:before,.fa-yc-square:before{content:\"\\f1d4\"}.fa-tencent-weibo:before{content:\"\\f1d5\"}.fa-qq:before{content:\"\\f1d6\"}.fa-wechat:before,.fa-weixin:before{content:\"\\f1d7\"}.fa-paper-plane:before,.fa-send:before{content:\"\\f1d8\"}.fa-paper-plane-o:before,.fa-send-o:before{content:\"\\f1d9\"}.fa-history:before{content:\"\\f1da\"}.fa-circle-thin:before{content:\"\\f1db\"}.fa-header:before{content:\"\\f1dc\"}.fa-paragraph:before{content:\"\\f1dd\"}.fa-sliders:before{content:\"\\f1de\"}.fa-share-alt:before{content:\"\\f1e0\"}.fa-share-alt-square:before{content:\"\\f1e1\"}.fa-bomb:before{content:\"\\f1e2\"}.fa-futbol-o:before,.fa-soccer-ball-o:before{content:\"\\f1e3\"}.fa-tty:before{content:\"\\f1e4\"}.fa-binoculars:before{content:\"\\f1e5\"}.fa-plug:before{content:\"\\f1e6\"}.fa-slideshare:before{content:\"\\f1e7\"}.fa-twitch:before{content:\"\\f1e8\"}.fa-yelp:before{content:\"\\f1e9\"}.fa-newspaper-o:before{content:\"\\f1ea\"}.fa-wifi:before{content:\"\\f1eb\"}.fa-calculator:before{content:\"\\f1ec\"}.fa-paypal:before{content:\"\\f1ed\"}.fa-google-wallet:before{content:\"\\f1ee\"}.fa-cc-visa:before{content:\"\\f1f0\"}.fa-cc-mastercard:before{content:\"\\f1f1\"}.fa-cc-discover:before{content:\"\\f1f2\"}.fa-cc-amex:before{content:\"\\f1f3\"}.fa-cc-paypal:before{content:\"\\f1f4\"}.fa-cc-stripe:before{content:\"\\f1f5\"}.fa-bell-slash:before{content:\"\\f1f6\"}.fa-bell-slash-o:before{content:\"\\f1f7\"}.fa-trash:before{content:\"\\f1f8\"}.fa-copyright:before{content:\"\\f1f9\"}.fa-at:before{content:\"\\f1fa\"}.fa-eyedropper:before{content:\"\\f1fb\"}.fa-paint-brush:before{content:\"\\f1fc\"}.fa-birthday-cake:before{content:\"\\f1fd\"}.fa-area-chart:before{content:\"\\f1fe\"}.fa-pie-chart:before{content:\"\\f200\"}.fa-line-chart:before{content:\"\\f201\"}.fa-lastfm:before{content:\"\\f202\"}.fa-lastfm-square:before{content:\"\\f203\"}.fa-toggle-off:before{content:\"\\f204\"}.fa-toggle-on:before{content:\"\\f205\"}.fa-bicycle:before{content:\"\\f206\"}.fa-bus:before{content:\"\\f207\"}.fa-ioxhost:before{content:\"\\f208\"}.fa-angellist:before{content:\"\\f209\"}.fa-cc:before{content:\"\\f20a\"}.fa-ils:before,.fa-shekel:before,.fa-sheqel:before{content:\"\\f20b\"}.fa-meanpath:before{content:\"\\f20c\"}.fa-buysellads:before{content:\"\\f20d\"}.fa-connectdevelop:before{content:\"\\f20e\"}.fa-dashcube:before{content:\"\\f210\"}.fa-forumbee:before{content:\"\\f211\"}.fa-leanpub:before{content:\"\\f212\"}.fa-sellsy:before{content:\"\\f213\"}.fa-shirtsinbulk:before{content:\"\\f214\"}.fa-simplybuilt:before{content:\"\\f215\"}.fa-skyatlas:before{content:\"\\f216\"}.fa-cart-plus:before{content:\"\\f217\"}.fa-cart-arrow-down:before{content:\"\\f218\"}.fa-diamond:before{content:\"\\f219\"}.fa-ship:before{content:\"\\f21a\"}.fa-user-secret:before{content:\"\\f21b\"}.fa-motorcycle:before{content:\"\\f21c\"}.fa-street-view:before{content:\"\\f21d\"}.fa-heartbeat:before{content:\"\\f21e\"}.fa-venus:before{content:\"\\f221\"}.fa-mars:before{content:\"\\f222\"}.fa-mercury:before{content:\"\\f223\"}.fa-intersex:before,.fa-transgender:before{content:\"\\f224\"}.fa-transgender-alt:before{content:\"\\f225\"}.fa-venus-double:before{content:\"\\f226\"}.fa-mars-double:before{content:\"\\f227\"}.fa-venus-mars:before{content:\"\\f228\"}.fa-mars-stroke:before{content:\"\\f229\"}.fa-mars-stroke-v:before{content:\"\\f22a\"}.fa-mars-stroke-h:before{content:\"\\f22b\"}.fa-neuter:before{content:\"\\f22c\"}.fa-genderless:before{content:\"\\f22d\"}.fa-facebook-official:before{content:\"\\f230\"}.fa-pinterest-p:before{content:\"\\f231\"}.fa-whatsapp:before{content:\"\\f232\"}.fa-server:before{content:\"\\f233\"}.fa-user-plus:before{content:\"\\f234\"}.fa-user-times:before{content:\"\\f235\"}.fa-bed:before,.fa-hotel:before{content:\"\\f236\"}.fa-viacoin:before{content:\"\\f237\"}.fa-train:before{content:\"\\f238\"}.fa-subway:before{content:\"\\f239\"}.fa-medium:before{content:\"\\f23a\"}.fa-y-combinator:before,.fa-yc:before{content:\"\\f23b\"}.fa-optin-monster:before{content:\"\\f23c\"}.fa-opencart:before{content:\"\\f23d\"}.fa-expeditedssl:before{content:\"\\f23e\"}.fa-battery-4:before,.fa-battery-full:before{content:\"\\f240\"}.fa-battery-3:before,.fa-battery-three-quarters:before{content:\"\\f241\"}.fa-battery-2:before,.fa-battery-half:before{content:\"\\f242\"}.fa-battery-1:before,.fa-battery-quarter:before{content:\"\\f243\"}.fa-battery-0:before,.fa-battery-empty:before{content:\"\\f244\"}.fa-mouse-pointer:before{content:\"\\f245\"}.fa-i-cursor:before{content:\"\\f246\"}.fa-object-group:before{content:\"\\f247\"}.fa-object-ungroup:before{content:\"\\f248\"}.fa-sticky-note:before{content:\"\\f249\"}.fa-sticky-note-o:before{content:\"\\f24a\"}.fa-cc-jcb:before{content:\"\\f24b\"}.fa-cc-diners-club:before{content:\"\\f24c\"}.fa-clone:before{content:\"\\f24d\"}.fa-balance-scale:before{content:\"\\f24e\"}.fa-hourglass-o:before{content:\"\\f250\"}.fa-hourglass-1:before,.fa-hourglass-start:before{content:\"\\f251\"}.fa-hourglass-2:before,.fa-hourglass-half:before{content:\"\\f252\"}.fa-hourglass-3:before,.fa-hourglass-end:before{content:\"\\f253\"}.fa-hourglass:before{content:\"\\f254\"}.fa-hand-grab-o:before,.fa-hand-rock-o:before{content:\"\\f255\"}.fa-hand-paper-o:before,.fa-hand-stop-o:before{content:\"\\f256\"}.fa-hand-scissors-o:before{content:\"\\f257\"}.fa-hand-lizard-o:before{content:\"\\f258\"}.fa-hand-spock-o:before{content:\"\\f259\"}.fa-hand-pointer-o:before{content:\"\\f25a\"}.fa-hand-peace-o:before{content:\"\\f25b\"}.fa-trademark:before{content:\"\\f25c\"}.fa-registered:before{content:\"\\f25d\"}.fa-creative-commons:before{content:\"\\f25e\"}.fa-gg:before{content:\"\\f260\"}.fa-gg-circle:before{content:\"\\f261\"}.fa-tripadvisor:before{content:\"\\f262\"}.fa-odnoklassniki:before{content:\"\\f263\"}.fa-odnoklassniki-square:before{content:\"\\f264\"}.fa-get-pocket:before{content:\"\\f265\"}.fa-wikipedia-w:before{content:\"\\f266\"}.fa-safari:before{content:\"\\f267\"}.fa-chrome:before{content:\"\\f268\"}.fa-firefox:before{content:\"\\f269\"}.fa-opera:before{content:\"\\f26a\"}.fa-internet-explorer:before{content:\"\\f26b\"}.fa-television:before,.fa-tv:before{content:\"\\f26c\"}.fa-contao:before{content:\"\\f26d\"}.fa-500px:before{content:\"\\f26e\"}.fa-amazon:before{content:\"\\f270\"}.fa-calendar-plus-o:before{content:\"\\f271\"}.fa-calendar-minus-o:before{content:\"\\f272\"}.fa-calendar-times-o:before{content:\"\\f273\"}.fa-calendar-check-o:before{content:\"\\f274\"}.fa-industry:before{content:\"\\f275\"}.fa-map-pin:before{content:\"\\f276\"}.fa-map-signs:before{content:\"\\f277\"}.fa-map-o:before{content:\"\\f278\"}.fa-map:before{content:\"\\f279\"}.fa-commenting:before{content:\"\\f27a\"}.fa-commenting-o:before{content:\"\\f27b\"}.fa-houzz:before{content:\"\\f27c\"}.fa-vimeo:before{content:\"\\f27d\"}.fa-black-tie:before{content:\"\\f27e\"}.fa-fonticons:before{content:\"\\f280\"}.fa-reddit-alien:before{content:\"\\f281\"}.fa-edge:before{content:\"\\f282\"}.fa-credit-card-alt:before{content:\"\\f283\"}.fa-codiepie:before{content:\"\\f284\"}.fa-modx:before{content:\"\\f285\"}.fa-fort-awesome:before{content:\"\\f286\"}.fa-usb:before{content:\"\\f287\"}.fa-product-hunt:before{content:\"\\f288\"}.fa-mixcloud:before{content:\"\\f289\"}.fa-scribd:before{content:\"\\f28a\"}.fa-pause-circle:before{content:\"\\f28b\"}.fa-pause-circle-o:before{content:\"\\f28c\"}.fa-stop-circle:before{content:\"\\f28d\"}.fa-stop-circle-o:before{content:\"\\f28e\"}.fa-shopping-bag:before{content:\"\\f290\"}.fa-shopping-basket:before{content:\"\\f291\"}.fa-hashtag:before{content:\"\\f292\"}.fa-bluetooth:before{content:\"\\f293\"}.fa-bluetooth-b:before{content:\"\\f294\"}.fa-percent:before{content:\"\\f295\"}.custom-bg{background:#eaf0f2}.custom-bg-dark{background:#1c1f23}.jazz-timeline-wrapper,.jazz-timeline-wrapper *{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;padding:0;margin:0}.jazz-timeline-wrapper{width:90%;max-width:1024px;margin:4em auto;font-family:\"Alegreya Sans\",Arial,Helvetica,sans-serif;font-weight:400}.jazz-timeline{padding:20px 0;position:relative}.jazz-timeline:before,.multiline-timeline .timeline-post:before{content:\"\";background-color:#c1c1c1;background-image:-webkit-linear-gradient(top,#eaf0f2 0,#c1c1c1 8%,#c1c1c1 92%,#eaf0f2 100%);background-image:-moz-linear-gradient(top,#eaf0f2 0,#c1c1c1 8%,#c1c1c1 92%,#eaf0f2 100%);background-image:-ms-linear-gradient(top,#eaf0f2 0,#c1c1c1 8%,#c1c1c1 92%,#eaf0f2 100%);-webkit-border-radius:2px;-moz-border-radius:2px;border-radius:2px;margin-left:-2px;position:absolute;display:block;height:100%;width:4px;left:50%;top:0}.multiline-timeline .timeline-post:before{background-image:none;-webkit-border-radius:0;-moz-border-radius:0;border-radius:0}.multiline-timeline:before{display:none}.multiline-timeline.thin-timeline .timeline-post:before,.thin-timeline:before{margin-left:-1px;width:2px}.multiline-timeline .timeline-post{position:relative}.jazz-timeline .timeline-post{margin:0;border:0 none;padding:0 60px 5px 0;width:50%}.jazz-timeline .timeline-post:nth-child(even){margin-left:50%;padding:0 0 5px 60px}.jazz-timeline .timeline-post:last-child,.jazz-timeline .timeline-post:nth-child(even):last-child{padding-bottom:0}.jazz-timeline .timeline-post .timeline-meta{left:50%;color:#999;margin:28px 0 0 50px;position:absolute;font-weight:500}.jazz-timeline .timeline-post:nth-child(even) .timeline-meta{left:auto;margin:25px 50px 0 0;text-align:right;right:50%}.jazz-timeline .timeline-post .timeline-meta .meta-details{color:#6a7686}.jazz-timeline .timeline-post .for-large-icons{margin:45px 0 0 50px}.jazz-timeline .timeline-post:nth-child(even) .for-large-icons{margin:45px 50px 0 0}.jazz-timeline.one-sided:before{left:0}.jazz-timeline.one-sided .timeline-post,.jazz-timeline.one-sided .timeline-post:nth-child(even){margin:0;padding:0 0 30px 60px;width:100%}.jazz-timeline.one-sided .timeline-post .timeline-time,.jazz-timeline.one-sided .timeline-post:nth-child(even) .timeline-time{left:0;right:0;margin:0 0 5px;position:relative;text-align:left}.jazz-timeline.one-sided .timeline-post .timeline-icon{left:0;margin:22px 0 0 -35px}.jazz-timeline.one-sided .timeline-post .timeline-meta,.jazz-timeline.one-sided .timeline-post:nth-child(even) .timeline-meta{left:0;right:0;margin:0 0 10px;position:relative;text-align:left}.jazz-timeline .timeline-post .timeline-icon{background:#fff;line-height:70px;position:absolute;text-align:center;margin:22px 0 0 -35px;-webkit-border-radius:40px;-moz-border-radius:40px;border-radius:40px;color:#171717;font-size:18px;height:70px;width:70px;left:50%;z-index:10}.jazz-timeline .timeline-post .timeline-icon .icon-placeholder{line-height:30px;font-weight:500;font-size:13px;padding:5px 0}.jazz-timeline .timeline-post .timeline-icon .icon-placeholder span{display:block;font-family:\"Alegreya Sans\",Arial,Helvetica,sans-serif;line-height:12px;font-weight:700;font-size:30px}.jazz-timeline .timeline-post .timeline-icon .icon-placeholder i{font-size:28px;position:relative;line-height:62px}.jazz-timeline .timeline-post .icon-dot,.jazz-timeline.one-sided .timeline-post .icon-dot{background:#eaf0f2;-webkit-border-radius:20px;-moz-border-radius:20px;border-radius:20px;margin:30px 0 0 -7px;height:14px;width:14px}.jazz-timeline .timeline-post .icon-dot .timeline-bar,.jazz-timeline.one-sided .timeline-post .icon-dot .timeline-bar{height:4px;width:4px;background:#c1c1c1;position:absolute;left:5px;top:5px}.jazz-timeline .timeline-post .icon-dot,.jazz-timeline .timeline-post .icon-dot .timeline-bar,.jazz-timeline.one-sided .timeline-post .icon-dot,.jazz-timeline.one-sided .timeline-post .icon-dot .timeline-bar{-webkit-border-radius:20px;-moz-border-radius:20px;border-radius:20px}.jazz-timeline .timeline-post .icon-dot-full,.jazz-timeline.one-sided .timeline-post .icon-dot-full{background:#c1c1c1;margin:30px 0 0 -7px;-webkit-border-radius:20px;-moz-border-radius:20px;border-radius:20px;height:14px;width:14px}.jazz-timeline .timeline-post .icon-dot-full-white,.jazz-timeline.one-sided .timeline-post .icon-dot-full-white{background:#fff;margin:30px 0 0 -7px;-webkit-box-shadow:0 0 0 2px rgba(0,0,0,.2);-moz-box-shadow:0 0 0 2px rgba(0,0,0,.2);box-shadow:0 0 0 2px rgba(0,0,0,.2);-webkit-border-radius:20px;-moz-border-radius:20px;border-radius:20px;height:14px;width:14px}.jazz-timeline .timeline-post .icon-dot-full-white .timeline-bar,.jazz-timeline.one-sided .timeline-post .icon-dot-full-white .timeline-bar{height:4px;width:4px;background:#c1c1c1;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;position:absolute;left:5px;top:5px}.jazz-timeline .timeline-post .iconbg-red{background:#f25b5a}.jazz-timeline .timeline-post .iconbg-opal{background:#76bbda}.jazz-timeline .timeline-post .iconbg-blue{background:#2196f3}.jazz-timeline .timeline-post .iconbg-grey{background:#7e8da3}.jazz-timeline .timeline-post .iconbg-pink{background:#f282c7}.jazz-timeline .timeline-post .iconbg-black{background:#2f3949}.jazz-timeline .timeline-post .iconbg-green{background:#75ce66}.jazz-timeline .timeline-post .iconbg-brown{background:#e46d2b}.jazz-timeline .timeline-post .iconbg-white{background:#fff}.jazz-timeline .timeline-post .iconbg-purple{background:#9c27b0}.jazz-timeline .timeline-post .iconbg-indigo{background:#3f51b5}.jazz-timeline .timeline-post .iconbg-orange{background:#f0ca45}.jazz-timeline .timeline-post .iconbg-turqoise{background:#28c0c6}.jazz-timeline .timeline-post .iconbg-black,.jazz-timeline .timeline-post .iconbg-blue,.jazz-timeline .timeline-post .iconbg-brown,.jazz-timeline .timeline-post .iconbg-green,.jazz-timeline .timeline-post .iconbg-grey,.jazz-timeline .timeline-post .iconbg-indigo,.jazz-timeline .timeline-post .iconbg-opal,.jazz-timeline .timeline-post .iconbg-orange,.jazz-timeline .timeline-post .iconbg-pink,.jazz-timeline .timeline-post .iconbg-purple,.jazz-timeline .timeline-post .iconbg-red,.jazz-timeline .timeline-post .iconbg-turqoise,.jazz-timeline .timeline-post .iconbg-white{-webkit-box-shadow:0 0 0 4px #fff,inset 0 2px 0 rgba(0,0,0,.15),0 3px 0 4px rgba(0,0,0,.15);-moz-box-shadow:0 0 0 4px #fff,inset 0 2px 0 rgba(0,0,0,.15),0 3px 0 4px rgba(0,0,0,.15);box-shadow:0 0 0 4px #fff,inset 0 2px 0 rgba(0,0,0,.15),0 3px 0 4px rgba(0,0,0,.15)}.jazz-timeline .timeline-post .icon-color-white{color:#fff}.jazz-timeline .timeline-post .icon-color-black{color:#000}.jazz-timeline .timeline-post .timeline-content{background:#fff;position:relative;border:1px solid #fff;-webkit-transition:all .4s;-moz-transition:all .4s;transition:all .4s;-webkit-border-radius:5px;-moz-border-radius:5px;border-radius:5px;padding:30px}.jazz-timeline .timeline-post.no-padding .timeline-content{padding:0}.jazz-timeline .timeline-post .timeline-content p{margin:15px 0 10px;line-height:25px;font-size:16px;font-weight:400}.jazz-timeline .timeline-post .timeline-content .content-title{font-size:24px;font-family:\"Alegreya Sans\",Arial,Helvetica,sans-serif;margin:0 0 10px;color:#27acce;font-weight:500}.jazz-timeline .timeline-post .timeline-content .content-title span{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.jazz-timeline .timeline-post .timeline-content .content-details{margin:0}.jazz-timeline .timeline-post .timeline-content:after,.jazz-timeline .timeline-post .timeline-content:before{content:\"\";display:block;border:15px solid transparent;border-left-color:#fff;position:absolute;right:-30px;top:26px}.jazz-timeline .timeline-post .timeline-content:after{border:14px solid transparent;border-left-color:#fff;right:-28px;top:27px}.jazz-timeline .timeline-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#fff;left:-30px;right:auto}.jazz-timeline .timeline-post:nth-child(even) .timeline-content:after{border:14px solid transparent;border-right-color:#fff;left:-28px;right:auto}.jazz-timeline.one-sided .timeline-post .timeline-content:after,.jazz-timeline.one-sided .timeline-post .timeline-content:before{border:15px solid transparent;border-right-color:#fff;left:-30px;right:auto}.jazz-timeline.one-sided .timeline-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .timeline-post:nth-child(even) .timeline-content:before{border:14px solid transparent;border-right-color:#fff;left:-28px;right:auto}.jazz-timeline .red-post .timeline-content{background:#f25b5a;border:1px solid #f25b5a;color:#fff}.jazz-timeline .red-post .timeline-content .content-title{color:#fff}.jazz-timeline .red-post .timeline-content:after,.jazz-timeline .red-post .timeline-content:before{border-left-color:#f25b5a}.jazz-timeline .red-post:nth-child(even) .timeline-content:after,.jazz-timeline .red-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .red-post .timeline-content:after,.jazz-timeline.one-sided .red-post .timeline-content:before,.jazz-timeline.one-sided .red-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .red-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#f25b5a}.jazz-timeline .opal-post .timeline-content{background:#76bbda;border:1px solid #76bbda;color:#fff}.jazz-timeline .opal-post .timeline-content .content-title{color:#fff}.jazz-timeline .opal-post .timeline-content:after,.jazz-timeline .opal-post .timeline-content:before{border-left-color:#76bbda}.jazz-timeline .opal-post:nth-child(even) .timeline-content:after,.jazz-timeline .opal-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .opal-post .timeline-content:after,.jazz-timeline.one-sided .opal-post .timeline-content:before,.jazz-timeline.one-sided .opal-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .opal-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#76bbda}.jazz-timeline .blue-post .timeline-content{background:#2196f3;border:1px solid #2196f3;color:#fff}.jazz-timeline .blue-post .timeline-content .content-title{color:#fff}.jazz-timeline .blue-post .timeline-content:after,.jazz-timeline .blue-post .timeline-content:before{border-left-color:#2196f3}.jazz-timeline .blue-post:nth-child(even) .timeline-content:after,.jazz-timeline .blue-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .blue-post .timeline-content:after,.jazz-timeline.one-sided .blue-post .timeline-content:before,.jazz-timeline.one-sided .blue-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .blue-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#2196f3}.jazz-timeline .grey-post .timeline-content{background:#7e8da3;border:1px solid #7e8da3;color:#fff}.jazz-timeline .grey-post .timeline-content .content-title{color:#fff}.jazz-timeline .grey-post .timeline-content:after,.jazz-timeline .grey-post .timeline-content:before{border-left-color:#7e8da3}.jazz-timeline .grey-post:nth-child(even) .timeline-content:after,.jazz-timeline .grey-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .grey-post .timeline-content:after,.jazz-timeline.one-sided .grey-post .timeline-content:before,.jazz-timeline.one-sided .grey-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .grey-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#7e8da3}.jazz-timeline .pink-post .timeline-content{background:#f282c7;border:1px solid #f282c7;color:#fff}.jazz-timeline .pink-post .timeline-content .content-title{color:#fff}.jazz-timeline .pink-post .timeline-content:after,.jazz-timeline .pink-post .timeline-content:before{border-left-color:#f282c7}.jazz-timeline .pink-post:nth-child(even) .timeline-content:after,.jazz-timeline .pink-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .pink-post .timeline-content:after,.jazz-timeline.one-sided .pink-post .timeline-content:before,.jazz-timeline.one-sided .pink-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .pink-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#f282c7}.jazz-timeline .green-post .timeline-content{background:#75ce66;border:1px solid #75ce66;color:#fff}.jazz-timeline .green-post .timeline-content .content-title{color:#fff}.jazz-timeline .green-post .timeline-content:after,.jazz-timeline .green-post .timeline-content:before{border-left-color:#75ce66}.jazz-timeline .green-post:nth-child(even) .timeline-content:after,.jazz-timeline .green-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .green-post .timeline-content:after,.jazz-timeline.one-sided .green-post .timeline-content:before,.jazz-timeline.one-sided .green-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .green-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#75ce66}.jazz-timeline .white-post .timeline-content{background:#fff;border:1px solid #fff}.jazz-timeline .white-post .timeline-content:after,.jazz-timeline .white-post .timeline-content:before{border-left-color:#fff}.jazz-timeline .white-post:nth-child(even) .timeline-content:after,.jazz-timeline .white-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .white-post .timeline-content:after,.jazz-timeline.one-sided .white-post .timeline-content:before,.jazz-timeline.one-sided .white-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .white-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#fff}.jazz-timeline .purple-post .timeline-content{background:#9c27b0;border:1px solid #9c27b0;color:#fff}.jazz-timeline .purple-post .timeline-content .content-title{color:#fff}.jazz-timeline .purple-post .timeline-content:after,.jazz-timeline .purple-post .timeline-content:before{border-left-color:#9c27b0}.jazz-timeline .purple-post:nth-child(even) .timeline-content:after,.jazz-timeline .purple-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .purple-post .timeline-content:after,.jazz-timeline.one-sided .purple-post .timeline-content:before,.jazz-timeline.one-sided .purple-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .purple-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#9c27b0}.jazz-timeline .indigo-post .timeline-content{background:#3f51b5;border:1px solid #3f51b5;color:#fff}.jazz-timeline .indigo-post .timeline-content .content-title{color:#fff}.jazz-timeline .indigo-post .timeline-content:after,.jazz-timeline .indigo-post .timeline-content:before{border-left-color:#3f51b5}.jazz-timeline .indigo-post:nth-child(even) .timeline-content:after,.jazz-timeline .indigo-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .indigo-post .timeline-content:after,.jazz-timeline.one-sided .indigo-post .timeline-content:before,.jazz-timeline.one-sided .indigo-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .indigo-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#3f51b5}.jazz-timeline .orange-post .timeline-content{background:#f0ca45;border:1px solid #f0ca45;color:#fff}.jazz-timeline .orange-post .timeline-content .content-title{color:#fff}.jazz-timeline .orange-post .timeline-content:after,.jazz-timeline .orange-post .timeline-content:before{border-left-color:#f0ca45}.jazz-timeline .orange-post:nth-child(even) .timeline-content:after,.jazz-timeline .orange-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .orange-post .timeline-content:after,.jazz-timeline.one-sided .orange-post .timeline-content:before,.jazz-timeline.one-sided .orange-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .orange-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#f0ca45}.jazz-timeline .turqoise-post .timeline-content{background:#28c0c6;border:1px solid #28c0c6;color:#fff}.jazz-timeline .turqoise-post .timeline-content .content-title{color:#fff}.jazz-timeline .turqoise-post .timeline-content:after,.jazz-timeline .turqoise-post .timeline-content:before{border-left-color:#28c0c6}.jazz-timeline .turqoise-post:nth-child(even) .timeline-content:after,.jazz-timeline .turqoise-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .turqoise-post .timeline-content:after,.jazz-timeline.one-sided .turqoise-post .timeline-content:before,.jazz-timeline.one-sided .turqoise-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .turqoise-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#28c0c6}.jazz-timeline .brown-post .timeline-content{background:#e46d2b;border:1px solid #e46d2b;color:#fff}.jazz-timeline .brown-post .timeline-content .content-title{color:#fff}.jazz-timeline .brown-post .timeline-content:after,.jazz-timeline .brown-post .timeline-content:before{border-left-color:#e46d2b}.jazz-timeline .brown-post:nth-child(even) .timeline-content:after,.jazz-timeline .brown-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .brown-post .timeline-content:after,.jazz-timeline.one-sided .brown-post .timeline-content:before,.jazz-timeline.one-sided .brown-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .brown-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#e46d2b}.jazz-timeline .black-post .timeline-content{background:#2f3949;border:1px solid #2f3949;color:#fff}.jazz-timeline .black-post .timeline-content .content-title{color:#fff}.jazz-timeline .black-post .timeline-content:after,.jazz-timeline .black-post .timeline-content:before{border-left-color:#2f3949}.jazz-timeline .black-post:nth-child(even) .timeline-content:after,.jazz-timeline .black-post:nth-child(even) .timeline-content:before,.jazz-timeline.one-sided .black-post .timeline-content:after,.jazz-timeline.one-sided .black-post .timeline-content:before,.jazz-timeline.one-sided .black-post:nth-child(even) .timeline-content:after,.jazz-timeline.one-sided .black-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#2f3949}.jazz-timeline .light-grey-post .timeline-content{background:#f0f2f4;border:1px solid #f0f2f4;-webkit-border-radius:8px 8px 5px 5px;-moz-border-radius:8px 8px 5px 5px;border-radius:8px 8px 5px 5px;color:#474b51}.jazz-timeline .light-grey-post .timeline-content .content-title{color:#fff;-webkit-border-radius:4px 4px 0 0;-moz-border-radius:4px 4px 0 0;border-radius:4px 4px 0 0}.solid-shadow .timeline-post .timeline-content{-webkit-box-shadow:0 4px rgba(0,0,0,.2);-moz-box-shadow:0 4px rgba(0,0,0,.2);box-shadow:0 4px rgba(0,0,0,.2)}.solid-shadow .timeline-post .timeline-content:before{border:15px solid transparent;border-left-color:rgba(0,0,0,.2);right:-31px;top:29px}.solid-shadow .timeline-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:rgba(0,0,0,.2);left:-31px;top:30px}.bordered-timeline .timeline-post .timeline-content{border:1px solid #ccc}.bordered-timeline .timeline-post .timeline-content:before{border:15px solid transparent;border-left-color:#bbb;right:-30px;top:26px}.bordered-timeline .timeline-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#bbb;left:-30px;top:26px}.jazz-timeline.bordered-timeline.one-sided .timeline-post .timeline-content:after,.jazz-timeline.bordered-timeline.one-sided .timeline-post:nth-child(even) .timeline-content:after{border:14px solid transparent;border-right-color:#fff;left:-28px;right:auto}.jazz-timeline.bordered-timeline.one-sided .timeline-post .timeline-content:before,.jazz-timeline.bordered-timeline.one-sided .timeline-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#aaa;left:-30px;top:26px}.dark-timeline.ultimate-style:before,.dark-timeline:before,.jazz-timeline.dark-timeline.one-sided:before{background-color:#32363b;background-image:-webkit-linear-gradient(top,#1c1f23 0,#32363b 8%,#32363b 92%,#1c1f23 100%);background-image:-moz-linear-gradient(top,#1c1f23 0,#32363b 8%,#32363b 92%,#1c1f23 100%);background-image:-ms-linear-gradient(top,#1c1f23 0,#32363b 8%,#32363b 92%,#1c1f23 100%)}.dark-timeline .timeline-post .icon-dot .timeline-bar,.dark-timeline .timeline-post .icon-dot-full,.dark-timeline.ultimate-style .timeline-post .icon-dot .timeline-bar,.dark-timeline.ultimate-style .timeline-post .icon-dot-full-white .timeline-bar,.jazz-timeline.dark-timeline.one-sided .timeline-post .icon-dot .timeline-bar,.jazz-timeline.dark-timeline.one-sided .timeline-post .icon-dot-full,.jazz-timeline.dark-timeline.one-sided .timeline-post .icon-dot-full-white .timeline-bar{background:#32363b}.dark-timeline .timeline-post .icon-dot,.dark-timeline.ultimate-style .timeline-post .icon-dot,.jazz-timeline.dark-timeline.one-sided .timeline-post .icon-dot{background:#1c1f23}.dark-timeline .timeline-post .iconbg-black,.dark-timeline .timeline-post .iconbg-blue,.dark-timeline .timeline-post .iconbg-brown,.dark-timeline .timeline-post .iconbg-green,.dark-timeline .timeline-post .iconbg-grey,.dark-timeline .timeline-post .iconbg-indigo,.dark-timeline .timeline-post .iconbg-opal,.dark-timeline .timeline-post .iconbg-orange,.dark-timeline .timeline-post .iconbg-pink,.dark-timeline .timeline-post .iconbg-purple,.dark-timeline .timeline-post .iconbg-red,.dark-timeline .timeline-post .iconbg-turqoise,.dark-timeline .timeline-post .iconbg-white{-webkit-box-shadow:0 0 0 4px #fff,inset 0 2px 0 transparent,0 3px 0 4px transparent;-moz-box-shadow:0 0 0 4px #fff,inset 0 2px 0 transparent,0 3px 0 4px transparent;box-shadow:0 0 0 4px #fff,inset 0 2px 0 transparent,0 3px 0 4px transparent}.jazz-timeline.white-timeline.one-sided:before,.white-timeline:before{background-color:#32363b;background-image:-webkit-linear-gradient(top,#fff 0,#c1c1c1 8%,#c1c1c1 92%,#fff 100%);background-image:-moz-linear-gradient(top,#fff 0,#c1c1c1 8%,#c1c1c1 92%,#fff 100%);background-image:-ms-linear-gradient(top,#fff 0,#c1c1c1 8%,#c1c1c1 92%,#fff 100%)}.jazz-timeline.white-timeline.one-sided .timeline-post .icon-dot .timeline-bar,.jazz-timeline.white-timeline.one-sided .timeline-post .icon-dot-full,.jazz-timeline.white-timeline.one-sided .timeline-post .icon-dot-full-white .timeline-bar,.white-timeline .timeline-post .icon-dot .timeline-bar,.white-timeline .timeline-post .icon-dot-full,.white-timeline .timeline-post .icon-dot-full-white .timeline-bar{background:#c1c1c1}.jazz-timeline.white-timeline.one-sided .timeline-post .icon-dot,.white-timeline .timeline-post .icon-dot{background:#fff}.white-timeline .timeline-post .iconbg-black,.white-timeline .timeline-post .iconbg-blue,.white-timeline .timeline-post .iconbg-brown,.white-timeline .timeline-post .iconbg-green,.white-timeline .timeline-post .iconbg-grey,.white-timeline .timeline-post .iconbg-indigo,.white-timeline .timeline-post .iconbg-opal,.white-timeline .timeline-post .iconbg-orange,.white-timeline .timeline-post .iconbg-pink,.white-timeline .timeline-post .iconbg-purple,.white-timeline .timeline-post .iconbg-red,.white-timeline .timeline-post .iconbg-turqoise,.white-timeline .timeline-post .iconbg-white{-webkit-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px rgba(0,0,0,.05),0 0 0 8px rgba(0,0,0,.2);-moz-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px rgba(0,0,0,.05),0 0 0 8px rgba(0,0,0,.2);box-shadow:0 0 0 4px #fff,inset 0 0 0 2px rgba(0,0,0,.05),0 0 0 8px rgba(0,0,0,.2)}.ultimate-style .timeline-post .timeline-content{padding:0;border:0}.ultimate-style .timeline-post .timeline-content:after,.ultimate-style .timeline-post .timeline-content:before{display:none}.ultimate-style .timeline-post .timeline-content .content-details{padding:30px;padding-top:20px}.ultimate-style .timeline-post .timeline-content .content-title{margin:0;padding:18px 30px;-webkit-border-radius:5px 5px 0 0;-moz-border-radius:5px 5px 0 0;border-radius:5px 5px 0 0;position:relative}.ultimate-style .timeline-post .red-title{background:#dc4747;color:#fff}.ultimate-style .timeline-post .opal-title{background:#49a7cf;color:#fff}.ultimate-style .timeline-post .blue-title{background:#0d83e3;color:#fff}.ultimate-style .timeline-post .grey-title{background:#697892;color:#fff}.ultimate-style .timeline-post .pink-title{background:#ec4aaf;color:#fff}.ultimate-style .timeline-post .black-title{background:#28313e;color:#fff}.ultimate-style .timeline-post .green-title{background:#4eb83a;color:#fff}.ultimate-style .timeline-post .brown-title{background:#d75e1c;color:#fff}.ultimate-style .timeline-post .white-title{background:#fff;color:#fff}.ultimate-style .timeline-post .purple-title{background:#872299;color:#fff}.ultimate-style .timeline-post .indigo-title{background:#3848a0;color:#fff}.ultimate-style .timeline-post .orange-title{background:#e6b613;color:#fff}.ultimate-style .timeline-post .turqoise-title{background:#25acb4;color:#fff}.ultimate-style .timeline-post .timeline-content .content-title:before{content:\"\";display:block;border:15px solid transparent;border-left-color:#fff;position:absolute;right:-24px;top:20px}.ultimate-style .timeline-post:nth-child(even) .timeline-content .content-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .content-title:before{border:15px solid transparent;border-right-color:#fff;left:-24px;right:auto}.ultimate-style .timeline-post .timeline-content .turqoise-title:before{border-left-color:#25acb4}.ultimate-style .timeline-post:nth-child(even) .timeline-content .turqoise-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .turqoise-title:before{border-right-color:#25acb4}.ultimate-style .timeline-post .timeline-content .orange-title:before{border-left-color:#e6b613}.ultimate-style .timeline-post:nth-child(even) .timeline-content .orange-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .orange-title:before{border-right-color:#e6b613}.ultimate-style .timeline-post .timeline-content .indigo-title:before{border-left-color:#3848a0}.ultimate-style .timeline-post:nth-child(even) .timeline-content .indigo-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .indigo-title:before{border-right-color:#3848a0}.ultimate-style .timeline-post .timeline-content .purple-title:before{border-left-color:#872299}.ultimate-style .timeline-post:nth-child(even) .timeline-content .purple-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .purple-title:before{border-right-color:#872299}.ultimate-style .timeline-post .timeline-content .white-title:before{border-left-color:#fff}.ultimate-style .timeline-post:nth-child(even) .timeline-content .white-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .white-title:before{border-right-color:#fff}.ultimate-style .timeline-post .timeline-content .brown-title:before{border-left-color:#d75e1c}.ultimate-style .timeline-post:nth-child(even) .timeline-content .brown-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .brown-title:before{border-right-color:#d75e1c}.ultimate-style .timeline-post .timeline-content .green-title:before{border-left-color:#4eb83a}.ultimate-style .timeline-post:nth-child(even) .timeline-content .green-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .green-title:before{border-right-color:#4eb83a}.ultimate-style .timeline-post .timeline-content .black-title:before{border-left-color:#28313e}.ultimate-style .timeline-post:nth-child(even) .timeline-content .black-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .black-title:before{border-right-color:#28313e}.ultimate-style .timeline-post .timeline-content .pink-title:before{border-left-color:#ec4aaf}.ultimate-style .timeline-post:nth-child(even) .timeline-content .pink-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .pink-title:before{border-right-color:#ec4aaf}.ultimate-style .timeline-post .timeline-content .grey-title:before{border-left-color:#697892}.ultimate-style .timeline-post:nth-child(even) .timeline-content .grey-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .grey-title:before{border-right-color:#697892}.ultimate-style .timeline-post .timeline-content .blue-title:before{border-left-color:#0d83e3}.ultimate-style .timeline-post:nth-child(even) .timeline-content .blue-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .blue-title:before{border-right-color:#0d83e3}.ultimate-style .timeline-post .timeline-content .opal-title:before{border-left-color:#49a7cf}.ultimate-style .timeline-post:nth-child(even) .timeline-content .opal-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .opal-title:before{border-right-color:#49a7cf}.ultimate-style .timeline-post .timeline-content .red-title:before{border-left-color:#dc4747}.ultimate-style .timeline-post:nth-child(even) .timeline-content .red-title:before,.ultimate-style.one-sided .timeline-post .timeline-content .red-title:before{border-right-color:#dc4747}.multiline-timeline .timeline-post .iconbg-black,.multiline-timeline .timeline-post .iconbg-blue,.multiline-timeline .timeline-post .iconbg-brown,.multiline-timeline .timeline-post .iconbg-green,.multiline-timeline .timeline-post .iconbg-grey,.multiline-timeline .timeline-post .iconbg-indigo,.multiline-timeline .timeline-post .iconbg-opal,.multiline-timeline .timeline-post .iconbg-orange,.multiline-timeline .timeline-post .iconbg-pink,.multiline-timeline .timeline-post .iconbg-purple,.multiline-timeline .timeline-post .iconbg-red,.multiline-timeline .timeline-post .iconbg-turqoise,.multiline-timeline .timeline-post .iconbg-white{-webkit-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px rgba(0,0,0,.05),0 0 0 8px #c1c1c1;-moz-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px rgba(0,0,0,.05),0 0 0 8px #c1c1c1;box-shadow:0 0 0 4px #fff,inset 0 0 0 2px rgba(0,0,0,.05),0 0 0 8px #c1c1c1}.multiline-timeline .timeline-post .timeline-icon,.multiline-timeline .timeline-post .timeline-meta,.multiline-timeline .timeline-post:before{left:100%}.multiline-timeline .timeline-post:nth-child(even) .timeline-icon,.multiline-timeline .timeline-post:nth-child(even):before,.multiline-timeline.one-sided .timeline-post:before,.multiline-timeline.one-sided .timeline-post:nth-child(even):before{left:0}.multiline-timeline .timeline-post:nth-child(even) .timeline-meta{right:100%}.multiline-timeline .timeline-post .timeline-meta .meta-details{white-space:nowrap}.multiline-timeline .turqoise-trail .icon-dot .timeline-bar,.multiline-timeline .turqoise-trail .icon-dot-full,.multiline-timeline .turqoise-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .turqoise-trail:before,.multiline-timeline.one-sided .timeline-post.turqoise-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.turqoise-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.turqoise-trail .icon-dot-full-white .timeline-bar{background:#28c0c6}.multiline-timeline .turqoise-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.turqoise-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #28c0c6;-moz-box-shadow:0 0 0 2px #28c0c6;box-shadow:0 0 0 2px #28c0c6}.multiline-timeline .turqoise-trail .iconbg-turqoise{-webkit-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #28c0c6;-moz-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #28c0c6;box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #28c0c6}.multiline-timeline .black-trail .icon-dot .timeline-bar,.multiline-timeline .black-trail .icon-dot-full,.multiline-timeline .black-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .black-trail:before,.multiline-timeline.one-sided .timeline-post.black-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.black-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.black-trail .icon-dot-full-white .timeline-bar{background:#2f3949}.multiline-timeline .black-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.black-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #2f3949;-moz-box-shadow:0 0 0 2px #2f3949;box-shadow:0 0 0 2px #2f3949}.multiline-timeline .black-trail .iconbg-black{-webkit-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #2f3949;-moz-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #2f3949;box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #2f3949}.multiline-timeline .brown-trail .icon-dot .timeline-bar,.multiline-timeline .brown-trail .icon-dot-full,.multiline-timeline .brown-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .brown-trail:before,.multiline-timeline.one-sided .timeline-post.brown-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.brown-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.brown-trail .icon-dot-full-white .timeline-bar{background:#e46d2b}.multiline-timeline .brown-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.brown-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #e46d2b;-moz-box-shadow:0 0 0 2px #e46d2b;box-shadow:0 0 0 2px #e46d2b}.multiline-timeline .brown-trail .iconbg-brown{-webkit-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #e46d2b;-moz-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #e46d2b;box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #e46d2b}.multiline-timeline .indigo-trail .icon-dot .timeline-bar,.multiline-timeline .indigo-trail .icon-dot-full,.multiline-timeline .indigo-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .indigo-trail:before,.multiline-timeline.one-sided .timeline-post.indigo-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.indigo-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.indigo-trail .icon-dot-full-white .timeline-bar{background:#3f51b5}.multiline-timeline .indigo-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.indigo-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #3f51b5;-moz-box-shadow:0 0 0 2px #3f51b5;box-shadow:0 0 0 2px #3f51b5}.multiline-timeline .indigo-trail .iconbg-indigo{-webkit-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #3f51b5;-moz-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #3f51b5;box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #3f51b5}.multiline-timeline .purple-trail .icon-dot .timeline-bar,.multiline-timeline .purple-trail .icon-dot-full,.multiline-timeline .purple-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .purple-trail:before,.multiline-timeline.one-sided .timeline-post.purple-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.purple-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.purple-trail .icon-dot-full-white .timeline-bar{background:#9c27b0}.multiline-timeline .purple-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.purple-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #9c27b0;-moz-box-shadow:0 0 0 2px #9c27b0;box-shadow:0 0 0 2px #9c27b0}.multiline-timeline .purple-trail .iconbg-purple{-webkit-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #9c27b0;-moz-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #9c27b0;box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #9c27b0}.multiline-timeline .grey-trail .icon-dot .timeline-bar,.multiline-timeline .grey-trail .icon-dot-full,.multiline-timeline .grey-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .grey-trail:before,.multiline-timeline.one-sided .timeline-post.grey-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.grey-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.grey-trail .icon-dot-full-white .timeline-bar{background:#7e8da3}.multiline-timeline .grey-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.grey-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #7e8da3;-moz-box-shadow:0 0 0 2px #7e8da3;box-shadow:0 0 0 2px #7e8da3}.multiline-timeline .grey-trail .iconbg-grey{-webkit-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #7e8da3;-moz-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #7e8da3;box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #7e8da3}.multiline-timeline .blue-trail .icon-dot .timeline-bar,.multiline-timeline .blue-trail .icon-dot-full,.multiline-timeline .blue-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .blue-trail:before,.multiline-timeline.one-sided .timeline-post.blue-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.blue-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.blue-trail .icon-dot-full-white .timeline-bar{background:#2196f3}.multiline-timeline .blue-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.blue-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #2196f3;-moz-box-shadow:0 0 0 2px #2196f3;box-shadow:0 0 0 2px #2196f3}.multiline-timeline .blue-trail .iconbg-blue{-webkit-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #2196f3;-moz-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #2196f3;box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #2196f3}.multiline-timeline .red-trail .icon-dot .timeline-bar,.multiline-timeline .red-trail .icon-dot-full,.multiline-timeline .red-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .red-trail:before,.multiline-timeline.one-sided .timeline-post.red-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.red-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.red-trail .icon-dot-full-white .timeline-bar{background:#f25b5a}.multiline-timeline .red-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.red-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #f25b5a;-moz-box-shadow:0 0 0 2px #f25b5a;box-shadow:0 0 0 2px #f25b5a}.multiline-timeline .red-trail .iconbg-red{-webkit-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #f25b5a;-moz-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #f25b5a;box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #f25b5a}.multiline-timeline .orange-trail .icon-dot .timeline-bar,.multiline-timeline .orange-trail .icon-dot-full,.multiline-timeline .orange-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .orange-trail:before,.multiline-timeline.one-sided .timeline-post.orange-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.orange-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.orange-trail .icon-dot-full-white .timeline-bar{background:#f0ca45}.multiline-timeline .orange-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.orange-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #f0ca45;-moz-box-shadow:0 0 0 2px #f0ca45;box-shadow:0 0 0 2px #f0ca45}.multiline-timeline .orange-trail .iconbg-orange{-webkit-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #f0ca45;-moz-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #f0ca45;box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #f0ca45}.multiline-timeline .opal-trail .icon-dot .timeline-bar,.multiline-timeline .opal-trail .icon-dot-full,.multiline-timeline .opal-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .opal-trail:before,.multiline-timeline.one-sided .timeline-post.opal-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.opal-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.opal-trail .icon-dot-full-white .timeline-bar{background:#76bbda}.multiline-timeline .opal-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.opal-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #76bbda;-moz-box-shadow:0 0 0 2px #76bbda;box-shadow:0 0 0 2px #76bbda}.multiline-timeline .opal-trail .iconbg-opal{-webkit-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #76bbda;-moz-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #76bbda;box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #76bbda}.multiline-timeline .green-trail .icon-dot .timeline-bar,.multiline-timeline .green-trail .icon-dot-full,.multiline-timeline .green-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .green-trail:before,.multiline-timeline.one-sided .timeline-post.green-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.green-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.green-trail .icon-dot-full-white .timeline-bar{background:#75ce66}.multiline-timeline .green-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.green-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #75ce66;-moz-box-shadow:0 0 0 2px #75ce66;box-shadow:0 0 0 2px #75ce66}.multiline-timeline .green-trail .iconbg-green{-webkit-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #75ce66;-moz-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #75ce66;box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #75ce66}.multiline-timeline .pink-trail .icon-dot .timeline-bar,.multiline-timeline .pink-trail .icon-dot-full,.multiline-timeline .pink-trail .icon-dot-full-white .timeline-bar,.multiline-timeline .pink-trail:before,.multiline-timeline.one-sided .timeline-post.pink-trail .icon-dot .timeline-bar,.multiline-timeline.one-sided .timeline-post.pink-trail .icon-dot-full,.multiline-timeline.one-sided .timeline-post.pink-trail .icon-dot-full-white .timeline-bar{background:#f282c7}.multiline-timeline .pink-trail .icon-dot-full-white,.multiline-timeline.one-sided .timeline-post.pink-trail .icon-dot-full-white{-webkit-box-shadow:0 0 0 2px #f282c7;-moz-box-shadow:0 0 0 2px #f282c7;box-shadow:0 0 0 2px #f282c7}.multiline-timeline .pink-trail .iconbg-pink{-webkit-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #f282c7;-moz-box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #f282c7;box-shadow:0 0 0 4px #fff,inset 0 0 0 2px transparent,0 0 0 8px #f282c7}.jazz-timeline .timeline-post .timeline-content .video-box:last-child,.jazz-timeline .timeline-post .timeline-content blockquote:last-child{margin-bottom:0}.jazz-timeline .timeline-post .timeline-content img{max-width:100%;display:block;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}.jazz-timeline .timeline-post .content-details .map{display:block;height:200px;width:100%}.jazz-timeline .timeline-post .content-details .map-wrap{width:240px;overflow:hidden}.jazz-timeline .timeline-post .content-details .map-wrap .map-title{font-size:14px;text-transform:uppercase;line-height:normal;padding-bottom:4px;display:block;color:#27acce;width:100%;margin:0}.jazz-timeline .timeline-post .content-details .map-wrap p{clear:both;font-size:14px;display:block;padding-bottom:2px;color:#999;margin:0}.jazz-timeline .timeline-post .content-details .map-wrap .map-info{font-size:12px;margin-top:5px;color:#444}.jazz-timeline .timeline-post .content-details .map-wrap .map-info i{margin-right:5px;font-size:14px}.jazz-timeline .timeline-post .content-details .map,.jazz-timeline .timeline-post .content-details .media-container{margin-top:10px;border:5px solid #fff;-webkit-box-shadow:0 0 4px rgba(0,0,0,.3);-moz-box-shadow:0 0 4px rgba(0,0,0,.3);box-shadow:0 0 4px rgba(0,0,0,.3)}.jazz-timeline .timeline-post .content-details .media-box{float:none;clear:both;width:100%;position:relative;padding-bottom:56.25%;padding-top:25px;height:0}.jazz-timeline .timeline-post .content-details .media-box embed,.jazz-timeline .timeline-post .content-details .media-box iframe,.jazz-timeline .timeline-post .content-details .media-box object,.jazz-timeline .timeline-post .content-details .media-box video{position:absolute;width:100%!important;height:100%!important;border:0;left:0;top:0}.jazz-timeline .timeline-post .content-details .audio-box iframe{width:100%!important;height:100%!important;display:block;margin:0;border:0}@media (max-width:860px){.jazz-timeline:before,.multiline-timeline .timeline-post:before{left:16px}.jazz-timeline .timeline-post,.jazz-timeline .timeline-post:nth-child(even){margin:0;padding:0 0 30px 60px;width:100%}.jazz-timeline .timeline-post .timeline-meta,.jazz-timeline .timeline-post:nth-child(even) .timeline-meta{left:0;right:0;margin:0 0 5px;position:relative;text-align:left}.jazz-timeline .timeline-post .timeline-icon{left:0;margin:22px 0 0}.jazz-timeline .timeline-post .timeline-content:before,.jazz-timeline .timeline-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#fff;left:-30px;right:auto}.jazz-timeline .timeline-post .timeline-content:after,.jazz-timeline .timeline-post:nth-child(even) .timeline-content:after{border:14px solid transparent;border-right-color:#fff;left:-28px;right:auto}.jazz-timeline .red-post .timeline-content:after,.jazz-timeline .red-post .timeline-content:before,.jazz-timeline .red-post:nth-child(even) .timeline-content:after,.jazz-timeline .red-post:nth-child(even) .timeline-content:before{border-right-color:#f25b5a}.jazz-timeline .opal-post .timeline-content:after,.jazz-timeline .opal-post .timeline-content:before,.jazz-timeline .opal-post:nth-child(even) .timeline-content:after,.jazz-timeline .opal-post:nth-child(even) .timeline-content:before{border-right-color:#76bbda}.jazz-timeline .blue-post .timeline-content:after,.jazz-timeline .blue-post .timeline-content:before,.jazz-timeline .blue-post:nth-child(even) .timeline-content:after,.jazz-timeline .blue-post:nth-child(even) .timeline-content:before{border-right-color:#2196f3}.jazz-timeline .grey-post .timeline-content:after,.jazz-timeline .grey-post .timeline-content:before,.jazz-timeline .grey-post:nth-child(even) .timeline-content:after,.jazz-timeline .grey-post:nth-child(even) .timeline-content:before{border-right-color:#7e8da3}.jazz-timeline .pink-post .timeline-content:after,.jazz-timeline .pink-post .timeline-content:before,.jazz-timeline .pink-post:nth-child(even) .timeline-content:after,.jazz-timeline .pink-post:nth-child(even) .timeline-content:before{border-right-color:#f282c7}.jazz-timeline .green-post .timeline-content:after,.jazz-timeline .green-post .timeline-content:before,.jazz-timeline .green-post:nth-child(even) .timeline-content:after,.jazz-timeline .green-post:nth-child(even) .timeline-content:before{border-right-color:#75ce66}.jazz-timeline .white-post .timeline-content:after,.jazz-timeline .white-post .timeline-content:before,.jazz-timeline .white-post:nth-child(even) .timeline-content:after,.jazz-timeline .white-post:nth-child(even) .timeline-content:before{border-right-color:#fff}.jazz-timeline .purple-post .timeline-content:after,.jazz-timeline .purple-post .timeline-content:before,.jazz-timeline .purple-post:nth-child(even) .timeline-content:after,.jazz-timeline .purple-post:nth-child(even) .timeline-content:before{border-right-color:#9c27b0}.jazz-timeline .indigo-post .timeline-content:after,.jazz-timeline .indigo-post .timeline-content:before,.jazz-timeline .indigo-post:nth-child(even) .timeline-content:after,.jazz-timeline .indigo-post:nth-child(even) .timeline-content:before{border-right-color:#3f51b5}.jazz-timeline .orange-post .timeline-content:after,.jazz-timeline .orange-post .timeline-content:before,.jazz-timeline .orange-post:nth-child(even) .timeline-content:after,.jazz-timeline .orange-post:nth-child(even) .timeline-content:before{border-right-color:#f0ca45}.jazz-timeline .turqoise-post .timeline-content:after,.jazz-timeline .turqoise-post .timeline-content:before,.jazz-timeline .turqoise-post:nth-child(even) .timeline-content:after,.jazz-timeline .turqoise-post:nth-child(even) .timeline-content:before{border-right-color:#28c0c6}.jazz-timeline .brown-post .timeline-content:after,.jazz-timeline .brown-post .timeline-content:before,.jazz-timeline .brown-post:nth-child(even) .timeline-content:after,.jazz-timeline .brown-post:nth-child(even) .timeline-content:before{border-right-color:#e46d2b}.jazz-timeline .black-post .timeline-content:after,.jazz-timeline .black-post .timeline-content:before,.jazz-timeline .black-post:nth-child(even) .timeline-content:after,.jazz-timeline .black-post:nth-child(even) .timeline-content:before{border-right-color:#2f3949}.solid-shadow .timeline-post .timeline-content:before,.solid-shadow .timeline-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:rgba(0,0,0,.2);left:-31px;top:29px}.jazz-timeline .timeline-post .timeline-content .content-details img{width:100%}.jazz-timeline .timeline-post .icon-dot .timeline-bar{left:4px}.jazz-timeline .timeline-post .icon-dot{margin:30px 0 0 10px;height:14px;width:14px}.bordered-timeline .timeline-post .timeline-content:before,.bordered-timeline .timeline-post:nth-child(even) .timeline-content:before{border:15px solid transparent;border-right-color:#bbb;left:-30px;top:26px}.jazz-timeline .timeline-post .icon-dot-full,.jazz-timeline .timeline-post .icon-dot-full-white{margin:30px 0 0 9px}.jazz-timeline .timeline-post .icon-larger,.jazz-timeline.one-sided .timeline-post .icon-larger{left:0;margin:22px 0 0 -10px;line-height:50px;height:50px;width:50px}.jazz-timeline.one-sided .timeline-post .icon-larger{margin:22px 0 0 -25px}.jazz-timeline.one-sided .timeline-post,.jazz-timeline.one-sided .timeline-post:nth-child(even){padding:0 0 30px 50px}.jazz-timeline .timeline-post .icon-larger .icon-placeholder{padding:2px 0}.jazz-timeline .timeline-post .icon-larger .icon-placeholder i{line-height:48px}.jazz-timeline .timeline-post .icon-larger .icon-placeholder span{line-height:0;font-weight:700;font-size:18px}.ultimate-style .timeline-post .timeline-content .content-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .content-title:before{content:\"\";display:block;border:15px solid transparent;border-right-color:#fff;position:absolute;left:-24px;right:auto;top:20px}.multiline-timeline .timeline-post .timeline-icon,.multiline-timeline .timeline-post .timeline-meta,.multiline-timeline .timeline-post:before,.multiline-timeline .timeline-post:nth-child(even) .timeline-icon,.multiline-timeline .timeline-post:nth-child(even) .timeline-meta,.multiline-timeline .timeline-post:nth-child(even):before{left:0;right:auto}.multiline-timeline .timeline-post .timeline-icon,.multiline-timeline .timeline-post:nth-child(even) .timeline-icon{margin:22px 0 0 -25px}.multiline-timeline .timeline-post .icon-dot,.multiline-timeline .timeline-post:nth-child(even) .icon-dot{margin:30px 0 0 -6px}.multiline-timeline .timeline-post .icon-dot-full,.multiline-timeline .timeline-post .icon-dot-full-white,.multiline-timeline .timeline-post:nth-child(even) .icon-dot-full,.multiline-timeline .timeline-post:nth-child(even) .icon-dot-full-white{margin:30px 0 0 -7px}.ultimate-style .timeline-post .timeline-content .turqoise-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .turqoise-title:before{border-right-color:#25acb4}.ultimate-style .timeline-post .timeline-content .orange-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .orange-title:before{border-right-color:#e6b613}.ultimate-style .timeline-post .timeline-content .indigo-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .indigo-title:before{border-right-color:#3848a0}.ultimate-style .timeline-post .timeline-content .purple-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .purple-title:before{border-right-color:#872299}.ultimate-style .timeline-post .timeline-content .white-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .white-title:before{border-right-color:#fff}.ultimate-style .timeline-post .timeline-content .brown-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .brown-title:before{border-right-color:#d75e1c}.ultimate-style .timeline-post .timeline-content .green-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .green-title:before{border-right-color:#4eb83a}.ultimate-style .timeline-post .timeline-content .black-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .black-title:before{border-right-color:#28313e}.ultimate-style .timeline-post .timeline-content .pink-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .pink-title:before{border-right-color:#ec4aaf}.ultimate-style .timeline-post .timeline-content .grey-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .grey-title:before{border-right-color:#697892}.ultimate-style .timeline-post .timeline-content .blue-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .blue-title:before{border-right-color:#0d83e3}.ultimate-style .timeline-post .timeline-content .opal-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .opal-title:before{border-right-color:#49a7cf}.ultimate-style .timeline-post .timeline-content .red-title:before,.ultimate-style .timeline-post:nth-child(even) .timeline-content .red-title:before{border-right-color:#dc4747}}\n/* rebuild by neat */"}],"Post":[{"title":"Centos7 配置https协议","date":"2018-03-23T06:20:03.000Z","_content":"本文用的是Let's Encrypt数字证书认证机构免费提供的ssl证书。letsencrypt基于ACME协议自助颁发证书的过程由letsencrypt提供一个工具完成，工具名称现在叫做：certbot，在linux下certbot工具安装后也就是certbot命令。\n\n1,.安装certbot用于生成证书\n```php\n    ##安装epel-release扩展包\n    yum install epel-release\n    ##更新yum缓存\n    yum makecache\n    ##直接yum安装certbot\n    yum install certbot\n```\n2.使用certbot申请Let's Encrypt免费的ssl证书\n\n配置Let's Encrypt有两种模式，standalone和webroot。至于两种模式的区别可自行百度一下。我们这里使用的是webroot模式。\n```php\n    ##--webroot指定你的网站的根目录\n    certbot certonly --webroot -w /var/www/blog -d blog.ibeeasy.cn\n```\n对于nginx而言web根目录下的隐藏目录默认情况下是不允许访问的，所以nginx情况下再执行非standalone模式申请ssl证书之前，需要将nginx网站根目录下的.well-known隐藏目录设置成允许访问。\n\n申请过程中可能会需要输入邮箱接受通知，还有一个同意协议的选项，选y。\n\n不出意外的话，证书文件会在以下的位置：\n```php\n    /etc/letsencrypt/live/你的域名/\n```\n3.配置nginx\n\n以前我们使用的是80（http）端口，而https协议是443端口，所以我们要将80端口转发到443端口，在你当前网站的配置文件里修改配置如下：\n```php\n    server{\n    listen 80;\n    server_name blog.ibeeasy.cn;\n    rewrite ^(.*) https://$server_name$1 permanent; \n    }\n\n\n    server {\n    listen 443 ssl http2;\n    server_name  blog.ibeeasy.cn;\n       #告诉浏览器当前页面禁止被frame\n    add_header X-Frame-Options DENY;\n    #告诉浏览器不要猜测mime类型\n    add_header X-Content-Type-Options nosniff;\n    #证书路径\n    ssl_certificate /etc/letsencrypt/live/blog.ibeeasy.cn/fullchain.pem;\n    #私钥路径\n    ssl_certificate_key /etc/letsencrypt/live/blog.ibeeasy.cn/privkey.pem;\n    #安全链接可选的加密协议\n    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n    #可选的加密算法,顺序很重要,越靠前的优先级越高.\n    ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-RC4-SHA:!ECDHE-RSA-RC4-SHA:ECDH-ECDSA-RC4-SHA:ECDH-RSA-RC4-SHA:ECDHE-RSA-AES256-SHA:HIGH:!RC4-SHA:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!CBC:!EDH:!kEDH:!PSK:!SRP:!kECDH;\n    #在 SSLv3 或 TLSv1 握手过程一般使用客户端的首选算法,如果启用下面的配置,则会使用服务器端的首选算法.\n    ssl_prefer_server_ciphers on;\n    #储存SSL会话的缓存类型和大小\n    ssl_session_cache shared:SSL:10m;\n    #缓存有效期\n    ssl_session_timeout 60m;\n       #其他配置照原先的不变，这里就不列出来了\n    }\n```\n配置完成后重启Nginx或重新加载配置：\n```php\n    #或重启nginx\n    systemctl restart nginx\n    #重新加载配置\n    systemctl reload nginx\n```\n至此，https协议就部署完成了，如果还是无法访问，请确定443端口是否开启，或者是否添加安全组443端口的入方向。\n\n4.添加脚本执行证书更新\n\n因为ssl证书的有效期是90天，所以我们要设置一个定时任务来自动更新证书，证书更新的命令如下：\n```php\n    ./letsencrypt-auto renew\n```\n如果要指定更新某个域名的证书, 则要使用 certonly 参数,：\n```php\n    ./letsencrypt-auto certonly --webroot --renew-by-default --email admin@ibeeasy.cn -w /var/www/blog -d blog.ibeeasy.cn -d a.ibeeasy.cn\n```\n当然，官方也提供了 cron 运行脚本的方式可以实现定时续期，脚本如下：\n```php\n    #!/bin/sh\n    #停止 nginx 服务,使用 --standalone 独立服务器验证需要停止当前 web server.\n    systemctl stop nginx\n    if ! /path/to/letsencrypt-auto renew -nvv --standalone > /var/log/letsencrypt/renew.log 2>&1 ; then\n    echo Automated renewal failed:\n    cat /var/log/letsencrypt/renew.log\n    exit 1\n    fi\n    #启动 nginx\n    systemctl start nginx\n```\n将以上脚本保存为 letsencrypt-renew.sh\n\n添加可执行权限：\n```php\n    chmod +x letsencrypt-renew.sh\n```\n编辑 crontab 配置文件或执行` crontab -e` 添加 cron 任务：\n```php\n    nano /etc/crontab\n```\n我这里设置为每月1号0点执行此脚本.\n```php\n    #分 时 日 月 星期 执行用户 执行命令\n     0 0 1 *  *   root/脚本目录/letsencrypt-renew.sh\n```\n加入后Ctrl+X保存退出即可。","source":"_posts/Centos7-https.md","raw":"---\ntitle: Centos7 配置https协议\ndate: 2018-03-23 14:20:03\ncategories: Linux\ntags:\n\thttps\n---\n本文用的是Let's Encrypt数字证书认证机构免费提供的ssl证书。letsencrypt基于ACME协议自助颁发证书的过程由letsencrypt提供一个工具完成，工具名称现在叫做：certbot，在linux下certbot工具安装后也就是certbot命令。\n\n1,.安装certbot用于生成证书\n```php\n    ##安装epel-release扩展包\n    yum install epel-release\n    ##更新yum缓存\n    yum makecache\n    ##直接yum安装certbot\n    yum install certbot\n```\n2.使用certbot申请Let's Encrypt免费的ssl证书\n\n配置Let's Encrypt有两种模式，standalone和webroot。至于两种模式的区别可自行百度一下。我们这里使用的是webroot模式。\n```php\n    ##--webroot指定你的网站的根目录\n    certbot certonly --webroot -w /var/www/blog -d blog.ibeeasy.cn\n```\n对于nginx而言web根目录下的隐藏目录默认情况下是不允许访问的，所以nginx情况下再执行非standalone模式申请ssl证书之前，需要将nginx网站根目录下的.well-known隐藏目录设置成允许访问。\n\n申请过程中可能会需要输入邮箱接受通知，还有一个同意协议的选项，选y。\n\n不出意外的话，证书文件会在以下的位置：\n```php\n    /etc/letsencrypt/live/你的域名/\n```\n3.配置nginx\n\n以前我们使用的是80（http）端口，而https协议是443端口，所以我们要将80端口转发到443端口，在你当前网站的配置文件里修改配置如下：\n```php\n    server{\n    listen 80;\n    server_name blog.ibeeasy.cn;\n    rewrite ^(.*) https://$server_name$1 permanent; \n    }\n\n\n    server {\n    listen 443 ssl http2;\n    server_name  blog.ibeeasy.cn;\n       #告诉浏览器当前页面禁止被frame\n    add_header X-Frame-Options DENY;\n    #告诉浏览器不要猜测mime类型\n    add_header X-Content-Type-Options nosniff;\n    #证书路径\n    ssl_certificate /etc/letsencrypt/live/blog.ibeeasy.cn/fullchain.pem;\n    #私钥路径\n    ssl_certificate_key /etc/letsencrypt/live/blog.ibeeasy.cn/privkey.pem;\n    #安全链接可选的加密协议\n    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n    #可选的加密算法,顺序很重要,越靠前的优先级越高.\n    ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-RC4-SHA:!ECDHE-RSA-RC4-SHA:ECDH-ECDSA-RC4-SHA:ECDH-RSA-RC4-SHA:ECDHE-RSA-AES256-SHA:HIGH:!RC4-SHA:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!CBC:!EDH:!kEDH:!PSK:!SRP:!kECDH;\n    #在 SSLv3 或 TLSv1 握手过程一般使用客户端的首选算法,如果启用下面的配置,则会使用服务器端的首选算法.\n    ssl_prefer_server_ciphers on;\n    #储存SSL会话的缓存类型和大小\n    ssl_session_cache shared:SSL:10m;\n    #缓存有效期\n    ssl_session_timeout 60m;\n       #其他配置照原先的不变，这里就不列出来了\n    }\n```\n配置完成后重启Nginx或重新加载配置：\n```php\n    #或重启nginx\n    systemctl restart nginx\n    #重新加载配置\n    systemctl reload nginx\n```\n至此，https协议就部署完成了，如果还是无法访问，请确定443端口是否开启，或者是否添加安全组443端口的入方向。\n\n4.添加脚本执行证书更新\n\n因为ssl证书的有效期是90天，所以我们要设置一个定时任务来自动更新证书，证书更新的命令如下：\n```php\n    ./letsencrypt-auto renew\n```\n如果要指定更新某个域名的证书, 则要使用 certonly 参数,：\n```php\n    ./letsencrypt-auto certonly --webroot --renew-by-default --email admin@ibeeasy.cn -w /var/www/blog -d blog.ibeeasy.cn -d a.ibeeasy.cn\n```\n当然，官方也提供了 cron 运行脚本的方式可以实现定时续期，脚本如下：\n```php\n    #!/bin/sh\n    #停止 nginx 服务,使用 --standalone 独立服务器验证需要停止当前 web server.\n    systemctl stop nginx\n    if ! /path/to/letsencrypt-auto renew -nvv --standalone > /var/log/letsencrypt/renew.log 2>&1 ; then\n    echo Automated renewal failed:\n    cat /var/log/letsencrypt/renew.log\n    exit 1\n    fi\n    #启动 nginx\n    systemctl start nginx\n```\n将以上脚本保存为 letsencrypt-renew.sh\n\n添加可执行权限：\n```php\n    chmod +x letsencrypt-renew.sh\n```\n编辑 crontab 配置文件或执行` crontab -e` 添加 cron 任务：\n```php\n    nano /etc/crontab\n```\n我这里设置为每月1号0点执行此脚本.\n```php\n    #分 时 日 月 星期 执行用户 执行命令\n     0 0 1 *  *   root/脚本目录/letsencrypt-renew.sh\n```\n加入后Ctrl+X保存退出即可。","slug":"Centos7-https","published":1,"updated":"2021-11-25T03:28:13.069Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwn8bfx40001twnfcmzq05sn","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>本文用的是Let’s Encrypt数字证书认证机构免费提供的ssl证书。letsencrypt基于ACME协议自助颁发证书的过程由letsencrypt提供一个工具完成，工具名称现在叫做：certbot，在linux下certbot工具安装后也就是certbot命令。</p>\n<p>1,.安装certbot用于生成证书</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">##安装epel-release扩展包</span></span><br><span class=\"line\">yum install epel-release</span><br><span class=\"line\"><span class=\"comment\">##更新yum缓存</span></span><br><span class=\"line\">yum makecache</span><br><span class=\"line\"><span class=\"comment\">##直接yum安装certbot</span></span><br><span class=\"line\">yum install certbot</span><br></pre></td></tr></table></figure>\n<p>2.使用certbot申请Let’s Encrypt免费的ssl证书</p>\n<p>配置Let’s Encrypt有两种模式，standalone和webroot。至于两种模式的区别可自行百度一下。我们这里使用的是webroot模式。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">##--webroot指定你的网站的根目录</span></span><br><span class=\"line\">certbot certonly --webroot -w /<span class=\"keyword\">var</span>/www/blog -d blog.ibeeasy.cn</span><br></pre></td></tr></table></figure>\n<p>对于nginx而言web根目录下的隐藏目录默认情况下是不允许访问的，所以nginx情况下再执行非standalone模式申请ssl证书之前，需要将nginx网站根目录下的.well-known隐藏目录设置成允许访问。</p>\n<p>申请过程中可能会需要输入邮箱接受通知，还有一个同意协议的选项，选y。</p>\n<p>不出意外的话，证书文件会在以下的位置：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/etc/letsencrypt/live/你的域名/</span><br></pre></td></tr></table></figure>\n<p>3.配置nginx</p>\n<p>以前我们使用的是80（http）端口，而https协议是443端口，所以我们要将80端口转发到443端口，在你当前网站的配置文件里修改配置如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server&#123;</span><br><span class=\"line\">listen <span class=\"number\">80</span>;</span><br><span class=\"line\">server_name blog.ibeeasy.cn;</span><br><span class=\"line\">rewrite ^(.*) https:<span class=\"comment\">//$server_name$1 permanent; </span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">listen <span class=\"number\">443</span> ssl http2;</span><br><span class=\"line\">server_name  blog.ibeeasy.cn;</span><br><span class=\"line\">   <span class=\"comment\">#告诉浏览器当前页面禁止被frame</span></span><br><span class=\"line\">add_header X-Frame-Options DENY;</span><br><span class=\"line\"><span class=\"comment\">#告诉浏览器不要猜测mime类型</span></span><br><span class=\"line\">add_header X-Content-Type-Options nosniff;</span><br><span class=\"line\"><span class=\"comment\">#证书路径</span></span><br><span class=\"line\">ssl_certificate /etc/letsencrypt/live/blog.ibeeasy.cn/fullchain.pem;</span><br><span class=\"line\"><span class=\"comment\">#私钥路径</span></span><br><span class=\"line\">ssl_certificate_key /etc/letsencrypt/live/blog.ibeeasy.cn/privkey.pem;</span><br><span class=\"line\"><span class=\"comment\">#安全链接可选的加密协议</span></span><br><span class=\"line\">ssl_protocols TLSv1 TLSv1.<span class=\"number\">1</span> TLSv1.<span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"comment\">#可选的加密算法,顺序很重要,越靠前的优先级越高.</span></span><br><span class=\"line\">ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-RC4-SHA:!ECDHE-RSA-RC4-SHA:ECDH-ECDSA-RC4-SHA:ECDH-RSA-RC4-SHA:ECDHE-RSA-AES256-SHA:HIGH:!RC4-SHA:!aNULL:!eNULL:!LOW:!<span class=\"number\">3</span>DES:!MD5:!EXP:!CBC:!EDH:!kEDH:!PSK:!SRP:!kECDH;</span><br><span class=\"line\"><span class=\"comment\">#在 SSLv3 或 TLSv1 握手过程一般使用客户端的首选算法,如果启用下面的配置,则会使用服务器端的首选算法.</span></span><br><span class=\"line\">ssl_prefer_server_ciphers on;</span><br><span class=\"line\"><span class=\"comment\">#储存SSL会话的缓存类型和大小</span></span><br><span class=\"line\">ssl_session_cache shared:SSL:<span class=\"number\">10</span>m;</span><br><span class=\"line\"><span class=\"comment\">#缓存有效期</span></span><br><span class=\"line\">ssl_session_timeout <span class=\"number\">60</span>m;</span><br><span class=\"line\">   <span class=\"comment\">#其他配置照原先的不变，这里就不列出来了</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>配置完成后重启Nginx或重新加载配置：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#或重启nginx</span></span><br><span class=\"line\">systemctl restart nginx</span><br><span class=\"line\"><span class=\"comment\">#重新加载配置</span></span><br><span class=\"line\">systemctl reload nginx</span><br></pre></td></tr></table></figure>\n<p>至此，https协议就部署完成了，如果还是无法访问，请确定443端口是否开启，或者是否添加安全组443端口的入方向。</p>\n<p>4.添加脚本执行证书更新</p>\n<p>因为ssl证书的有效期是90天，所以我们要设置一个定时任务来自动更新证书，证书更新的命令如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./letsencrypt-auto renew</span><br></pre></td></tr></table></figure>\n<p>如果要指定更新某个域名的证书, 则要使用 certonly 参数,：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./letsencrypt-auto certonly --webroot --renew-by-<span class=\"keyword\">default</span> --email admin@ibeeasy.cn -w /<span class=\"keyword\">var</span>/www/blog -d blog.ibeeasy.cn -d a.ibeeasy.cn</span><br></pre></td></tr></table></figure>\n<p>当然，官方也提供了 cron 运行脚本的方式可以实现定时续期，脚本如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/bin/sh</span></span><br><span class=\"line\"><span class=\"comment\">#停止 nginx 服务,使用 --standalone 独立服务器验证需要停止当前 web server.</span></span><br><span class=\"line\">systemctl stop nginx</span><br><span class=\"line\"><span class=\"keyword\">if</span> ! /path/to/letsencrypt-auto renew -nvv --standalone &gt; /<span class=\"keyword\">var</span>/log/letsencrypt/renew.log <span class=\"number\">2</span>&gt;&amp;<span class=\"number\">1</span> ; then</span><br><span class=\"line\"><span class=\"keyword\">echo</span> Automated renewal failed:</span><br><span class=\"line\">cat /<span class=\"keyword\">var</span>/log/letsencrypt/renew.log</span><br><span class=\"line\"><span class=\"keyword\">exit</span> <span class=\"number\">1</span></span><br><span class=\"line\">fi</span><br><span class=\"line\"><span class=\"comment\">#启动 nginx</span></span><br><span class=\"line\">systemctl start nginx</span><br></pre></td></tr></table></figure>\n<p>将以上脚本保存为 letsencrypt-renew.sh</p>\n<p>添加可执行权限：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod +x letsencrypt-renew.sh</span><br></pre></td></tr></table></figure>\n<p>编辑 crontab 配置文件或执行<code> crontab -e</code> 添加 cron 任务：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nano /etc/crontab</span><br></pre></td></tr></table></figure>\n<p>我这里设置为每月1号0点执行此脚本.</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#分 时 日 月 星期 执行用户 执行命令</span></span><br><span class=\"line\"> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">1</span> *  *   root/脚本目录/letsencrypt-renew.sh</span><br></pre></td></tr></table></figure>\n<p>加入后Ctrl+X保存退出即可。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>本文用的是Let’s Encrypt数字证书认证机构免费提供的ssl证书。letsencrypt基于ACME协议自助颁发证书的过程由letsencrypt提供一个工具完成，工具名称现在叫做：certbot，在linux下certbot工具安装后也就是certbot命令。</p>\n<p>1,.安装certbot用于生成证书</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">##安装epel-release扩展包</span></span><br><span class=\"line\">yum install epel-release</span><br><span class=\"line\"><span class=\"comment\">##更新yum缓存</span></span><br><span class=\"line\">yum makecache</span><br><span class=\"line\"><span class=\"comment\">##直接yum安装certbot</span></span><br><span class=\"line\">yum install certbot</span><br></pre></td></tr></table></figure>\n<p>2.使用certbot申请Let’s Encrypt免费的ssl证书</p>\n<p>配置Let’s Encrypt有两种模式，standalone和webroot。至于两种模式的区别可自行百度一下。我们这里使用的是webroot模式。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">##--webroot指定你的网站的根目录</span></span><br><span class=\"line\">certbot certonly --webroot -w /<span class=\"keyword\">var</span>/www/blog -d blog.ibeeasy.cn</span><br></pre></td></tr></table></figure>\n<p>对于nginx而言web根目录下的隐藏目录默认情况下是不允许访问的，所以nginx情况下再执行非standalone模式申请ssl证书之前，需要将nginx网站根目录下的.well-known隐藏目录设置成允许访问。</p>\n<p>申请过程中可能会需要输入邮箱接受通知，还有一个同意协议的选项，选y。</p>\n<p>不出意外的话，证书文件会在以下的位置：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/etc/letsencrypt/live/你的域名/</span><br></pre></td></tr></table></figure>\n<p>3.配置nginx</p>\n<p>以前我们使用的是80（http）端口，而https协议是443端口，所以我们要将80端口转发到443端口，在你当前网站的配置文件里修改配置如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server&#123;</span><br><span class=\"line\">listen <span class=\"number\">80</span>;</span><br><span class=\"line\">server_name blog.ibeeasy.cn;</span><br><span class=\"line\">rewrite ^(.*) https:<span class=\"comment\">//$server_name$1 permanent; </span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">listen <span class=\"number\">443</span> ssl http2;</span><br><span class=\"line\">server_name  blog.ibeeasy.cn;</span><br><span class=\"line\">   <span class=\"comment\">#告诉浏览器当前页面禁止被frame</span></span><br><span class=\"line\">add_header X-Frame-Options DENY;</span><br><span class=\"line\"><span class=\"comment\">#告诉浏览器不要猜测mime类型</span></span><br><span class=\"line\">add_header X-Content-Type-Options nosniff;</span><br><span class=\"line\"><span class=\"comment\">#证书路径</span></span><br><span class=\"line\">ssl_certificate /etc/letsencrypt/live/blog.ibeeasy.cn/fullchain.pem;</span><br><span class=\"line\"><span class=\"comment\">#私钥路径</span></span><br><span class=\"line\">ssl_certificate_key /etc/letsencrypt/live/blog.ibeeasy.cn/privkey.pem;</span><br><span class=\"line\"><span class=\"comment\">#安全链接可选的加密协议</span></span><br><span class=\"line\">ssl_protocols TLSv1 TLSv1.<span class=\"number\">1</span> TLSv1.<span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"comment\">#可选的加密算法,顺序很重要,越靠前的优先级越高.</span></span><br><span class=\"line\">ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-RC4-SHA:!ECDHE-RSA-RC4-SHA:ECDH-ECDSA-RC4-SHA:ECDH-RSA-RC4-SHA:ECDHE-RSA-AES256-SHA:HIGH:!RC4-SHA:!aNULL:!eNULL:!LOW:!<span class=\"number\">3</span>DES:!MD5:!EXP:!CBC:!EDH:!kEDH:!PSK:!SRP:!kECDH;</span><br><span class=\"line\"><span class=\"comment\">#在 SSLv3 或 TLSv1 握手过程一般使用客户端的首选算法,如果启用下面的配置,则会使用服务器端的首选算法.</span></span><br><span class=\"line\">ssl_prefer_server_ciphers on;</span><br><span class=\"line\"><span class=\"comment\">#储存SSL会话的缓存类型和大小</span></span><br><span class=\"line\">ssl_session_cache shared:SSL:<span class=\"number\">10</span>m;</span><br><span class=\"line\"><span class=\"comment\">#缓存有效期</span></span><br><span class=\"line\">ssl_session_timeout <span class=\"number\">60</span>m;</span><br><span class=\"line\">   <span class=\"comment\">#其他配置照原先的不变，这里就不列出来了</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>配置完成后重启Nginx或重新加载配置：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#或重启nginx</span></span><br><span class=\"line\">systemctl restart nginx</span><br><span class=\"line\"><span class=\"comment\">#重新加载配置</span></span><br><span class=\"line\">systemctl reload nginx</span><br></pre></td></tr></table></figure>\n<p>至此，https协议就部署完成了，如果还是无法访问，请确定443端口是否开启，或者是否添加安全组443端口的入方向。</p>\n<p>4.添加脚本执行证书更新</p>\n<p>因为ssl证书的有效期是90天，所以我们要设置一个定时任务来自动更新证书，证书更新的命令如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./letsencrypt-auto renew</span><br></pre></td></tr></table></figure>\n<p>如果要指定更新某个域名的证书, 则要使用 certonly 参数,：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./letsencrypt-auto certonly --webroot --renew-by-<span class=\"keyword\">default</span> --email admin@ibeeasy.cn -w /<span class=\"keyword\">var</span>/www/blog -d blog.ibeeasy.cn -d a.ibeeasy.cn</span><br></pre></td></tr></table></figure>\n<p>当然，官方也提供了 cron 运行脚本的方式可以实现定时续期，脚本如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/bin/sh</span></span><br><span class=\"line\"><span class=\"comment\">#停止 nginx 服务,使用 --standalone 独立服务器验证需要停止当前 web server.</span></span><br><span class=\"line\">systemctl stop nginx</span><br><span class=\"line\"><span class=\"keyword\">if</span> ! /path/to/letsencrypt-auto renew -nvv --standalone &gt; /<span class=\"keyword\">var</span>/log/letsencrypt/renew.log <span class=\"number\">2</span>&gt;&amp;<span class=\"number\">1</span> ; then</span><br><span class=\"line\"><span class=\"keyword\">echo</span> Automated renewal failed:</span><br><span class=\"line\">cat /<span class=\"keyword\">var</span>/log/letsencrypt/renew.log</span><br><span class=\"line\"><span class=\"keyword\">exit</span> <span class=\"number\">1</span></span><br><span class=\"line\">fi</span><br><span class=\"line\"><span class=\"comment\">#启动 nginx</span></span><br><span class=\"line\">systemctl start nginx</span><br></pre></td></tr></table></figure>\n<p>将以上脚本保存为 letsencrypt-renew.sh</p>\n<p>添加可执行权限：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod +x letsencrypt-renew.sh</span><br></pre></td></tr></table></figure>\n<p>编辑 crontab 配置文件或执行<code> crontab -e</code> 添加 cron 任务：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nano /etc/crontab</span><br></pre></td></tr></table></figure>\n<p>我这里设置为每月1号0点执行此脚本.</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#分 时 日 月 星期 执行用户 执行命令</span></span><br><span class=\"line\"> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">1</span> *  *   root/脚本目录/letsencrypt-renew.sh</span><br></pre></td></tr></table></figure>\n<p>加入后Ctrl+X保存退出即可。</p>\n"},{"title":"Docker使用（Windows系统）","date":"2018-03-23T06:46:56.000Z","_content":"首先从Docker官网上面下载最新版本点击前往\n\n安装过程可能会有点长，因为需要在线下载很多文件。\n\n安装好了之后桌面上会出现一个这样的图标：\n\n\n![](https://i.imgur.com/ddozzz9.png)\n\n双击之后出现running就ok了\n\n然后打开命令提示符输入：\n```php\n    docker version\n\n    PS C:\\WINDOWS\\system32> docker version\n    Client:\n     Version:   17.12.0-ce\n     API version:   1.35\n     Go version:go1.9.2\n     Git commit:c97c6d6\n     Built: Wed Dec 27 20:05:22 2017\n     OS/Arch:   windows/amd64\n    \n    Server:\n     Engine:\n      Version:  17.12.0-ce\n      API version:  1.35 (minimum version 1.12)\n      Go version:   go1.9.2\n      Git commit:   c97c6d6\n      Built:Wed Dec 27 20:12:29 2017\n      OS/Arch:  linux/amd64\n      Experimental: true\n```\n会出现很多版本相关信息。\n```php\n    PS C:\\WINDOWS\\system32> docker images //查看当前已有镜像\n    REPOSITORY  TAG IMAGE ID\n    CREATED SIZE\n    centos  latest  2d194b392dd1\n    32 hours ago195MB\n    docker4w/nsenter-dockerdlatest  cae870735e91\n    4 months ago187kB\n    registry.cn-hangzhou.aliyuncs.com/diligentyang/centos6.7_nginx_1.10_php5.6.29   v1.0072258802250\n    14 months ago   854MB\n```\n关于镜像可以使用命令：\n\n```php\n    docker search centos\n```\n来查找与centos相关的镜像\n```php\n    PS C:\\WINDOWS\\system32> docker search centos\n    NAME   DESCRIPTION STARS   OFFICIAL\n       AUTOMATED\n    centos The official build of CentOS.   4079[OK]\n    \n    ansible/centos7-ansibleAnsible on Centos7  105\n···\n其中越靠前是STARS越多，相当于使用的人最多，当我们选择了一个镜像后查看它的AUTOMATED就能直接拉取镜像\n```php\n    docker pull registry.cn-hangzhou.aliyuncs.com/diligentyang/centos6.7_nginx_1.10_php5.6.29:v1.0\n```\n这里使用的是一个阿里云搭建的php5.6+nginx1.10的镜像\n```php\n    $ docker run -p 80:80 --name ali -it 5a7e /bin/bash\n```\ndocker run ：创建一个新的容器并运行一个命令，常用参数:\n```php\n- -i: 以交互模式运行容器，通常与 -t 同时使用；\n- -t: 为容器重新分配一个伪输入终端，通常与 -i 同时使用\n- –name=”nginx-lb”: 为容器指定一个名称；\n- -P 将容器的80端口映射到主机随机端口。\n- -p 80:80 将容器的80端口映射到主机的80端口\n- -v 映射主机目录和容器目录\n```\n其中 5a7e为镜像的IMAGE ID\n\n如果出现报错的情况：\n```php\n    $ docker run -p 80:80 --name ali -it 5a7e /bin/bash\n    cannot enable tty mode on non tty input\n```\n总结出两条解决方案\n\n1: 在命令前面加上winpty\n2: 首先执行 docker-machine ssh default\n\n不出意外的话就能直接进入到镜像了\n```php\n    [root@ec600fcf672e /]# ls\n    bin   dev  home  lib64  lost+found  mnt   opt   root  selinux  sys  usr\n    boot  etc  lib   local  media   mysql-community-release-el7-5.noarch.rpm  proc  sbin  srv  tmp  var\n```\n该镜像已经配置好了php环境，所以我们只需要：\n```php\n    [root@ec600fcf672e /]# php-fpm\n    [root@ec600fcf672e /]# service nginx\n```\n就能启动了\n\n在浏览器地址栏输入localhost 或者你的内网ip如果出现phpinfo的相关信息就说明启动成功。\n\n其中网站根目录为  /var/www\n\n如果想退出这个容器（在后台运行）需要按下ctrl+p ctrl+q （偶尔会失效。。）\n\n如果想要切回去继续工作只需要docker attach 容器id（可以为前几位，只要和别的区分开就好）\n\n查看所有容器：\n```php\n    PS C:\\WINDOWS\\system32> docker ps -a\n    CONTAINER IDIMAGE   COMMAND CREATED STATUS   PORTS\n      NAMES\n    ec600fcf672e0722\"/bin/bash\" About an hour ago   Up About an hour 0.0.0.0:80->8\n    tcp   ali\n    fe985915775ecentos  \"ls\"6 hours ago Exited (0) 6 hours ago\n```\n删除不用的容器\n\ndocker rm 容器id\n\n如果容器正在运行可以使用docker stop 容器id，关闭容器后再删除。或者直接使用docker rm -f 容器id\n\n删除镜像\n\ndocker rmi 镜像id\n\n那么如何将本地目录映射到容器里进行调试呢\n\n可以在启动容器的加上一个-v参数，映射主机目录和容器目录\n```php\n    docker run -p 80:80 --name test -v /e/wamp/www:/var/www -it ec60 /bin/bash\n```\n由于我们之前已经配置并启动了镜像，那么我们可以将本地的项目拷贝到容器里：\n```php\n    $ docker cp /e/wamp/www/test ec60:/var/www\n```\n注意项目的路径写法。\n\n","source":"_posts/Docker-Windows.md","raw":"---\ntitle: Docker使用（Windows系统）\ndate: 2018-03-23 14:46:56\ncategories: PHP\ntags:\n\tDocker\n---\n首先从Docker官网上面下载最新版本点击前往\n\n安装过程可能会有点长，因为需要在线下载很多文件。\n\n安装好了之后桌面上会出现一个这样的图标：\n\n\n![](https://i.imgur.com/ddozzz9.png)\n\n双击之后出现running就ok了\n\n然后打开命令提示符输入：\n```php\n    docker version\n\n    PS C:\\WINDOWS\\system32> docker version\n    Client:\n     Version:   17.12.0-ce\n     API version:   1.35\n     Go version:go1.9.2\n     Git commit:c97c6d6\n     Built: Wed Dec 27 20:05:22 2017\n     OS/Arch:   windows/amd64\n    \n    Server:\n     Engine:\n      Version:  17.12.0-ce\n      API version:  1.35 (minimum version 1.12)\n      Go version:   go1.9.2\n      Git commit:   c97c6d6\n      Built:Wed Dec 27 20:12:29 2017\n      OS/Arch:  linux/amd64\n      Experimental: true\n```\n会出现很多版本相关信息。\n```php\n    PS C:\\WINDOWS\\system32> docker images //查看当前已有镜像\n    REPOSITORY  TAG IMAGE ID\n    CREATED SIZE\n    centos  latest  2d194b392dd1\n    32 hours ago195MB\n    docker4w/nsenter-dockerdlatest  cae870735e91\n    4 months ago187kB\n    registry.cn-hangzhou.aliyuncs.com/diligentyang/centos6.7_nginx_1.10_php5.6.29   v1.0072258802250\n    14 months ago   854MB\n```\n关于镜像可以使用命令：\n\n```php\n    docker search centos\n```\n来查找与centos相关的镜像\n```php\n    PS C:\\WINDOWS\\system32> docker search centos\n    NAME   DESCRIPTION STARS   OFFICIAL\n       AUTOMATED\n    centos The official build of CentOS.   4079[OK]\n    \n    ansible/centos7-ansibleAnsible on Centos7  105\n···\n其中越靠前是STARS越多，相当于使用的人最多，当我们选择了一个镜像后查看它的AUTOMATED就能直接拉取镜像\n```php\n    docker pull registry.cn-hangzhou.aliyuncs.com/diligentyang/centos6.7_nginx_1.10_php5.6.29:v1.0\n```\n这里使用的是一个阿里云搭建的php5.6+nginx1.10的镜像\n```php\n    $ docker run -p 80:80 --name ali -it 5a7e /bin/bash\n```\ndocker run ：创建一个新的容器并运行一个命令，常用参数:\n```php\n- -i: 以交互模式运行容器，通常与 -t 同时使用；\n- -t: 为容器重新分配一个伪输入终端，通常与 -i 同时使用\n- –name=”nginx-lb”: 为容器指定一个名称；\n- -P 将容器的80端口映射到主机随机端口。\n- -p 80:80 将容器的80端口映射到主机的80端口\n- -v 映射主机目录和容器目录\n```\n其中 5a7e为镜像的IMAGE ID\n\n如果出现报错的情况：\n```php\n    $ docker run -p 80:80 --name ali -it 5a7e /bin/bash\n    cannot enable tty mode on non tty input\n```\n总结出两条解决方案\n\n1: 在命令前面加上winpty\n2: 首先执行 docker-machine ssh default\n\n不出意外的话就能直接进入到镜像了\n```php\n    [root@ec600fcf672e /]# ls\n    bin   dev  home  lib64  lost+found  mnt   opt   root  selinux  sys  usr\n    boot  etc  lib   local  media   mysql-community-release-el7-5.noarch.rpm  proc  sbin  srv  tmp  var\n```\n该镜像已经配置好了php环境，所以我们只需要：\n```php\n    [root@ec600fcf672e /]# php-fpm\n    [root@ec600fcf672e /]# service nginx\n```\n就能启动了\n\n在浏览器地址栏输入localhost 或者你的内网ip如果出现phpinfo的相关信息就说明启动成功。\n\n其中网站根目录为  /var/www\n\n如果想退出这个容器（在后台运行）需要按下ctrl+p ctrl+q （偶尔会失效。。）\n\n如果想要切回去继续工作只需要docker attach 容器id（可以为前几位，只要和别的区分开就好）\n\n查看所有容器：\n```php\n    PS C:\\WINDOWS\\system32> docker ps -a\n    CONTAINER IDIMAGE   COMMAND CREATED STATUS   PORTS\n      NAMES\n    ec600fcf672e0722\"/bin/bash\" About an hour ago   Up About an hour 0.0.0.0:80->8\n    tcp   ali\n    fe985915775ecentos  \"ls\"6 hours ago Exited (0) 6 hours ago\n```\n删除不用的容器\n\ndocker rm 容器id\n\n如果容器正在运行可以使用docker stop 容器id，关闭容器后再删除。或者直接使用docker rm -f 容器id\n\n删除镜像\n\ndocker rmi 镜像id\n\n那么如何将本地目录映射到容器里进行调试呢\n\n可以在启动容器的加上一个-v参数，映射主机目录和容器目录\n```php\n    docker run -p 80:80 --name test -v /e/wamp/www:/var/www -it ec60 /bin/bash\n```\n由于我们之前已经配置并启动了镜像，那么我们可以将本地的项目拷贝到容器里：\n```php\n    $ docker cp /e/wamp/www/test ec60:/var/www\n```\n注意项目的路径写法。\n\n","slug":"Docker-Windows","published":1,"updated":"2021-11-25T03:28:13.070Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwn8bfx70003twnfgc6oco74","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>首先从Docker官网上面下载最新版本点击前往</p>\n<p>安装过程可能会有点长，因为需要在线下载很多文件。</p>\n<p>安装好了之后桌面上会出现一个这样的图标：</p>\n<p><img src=\"https://i.imgur.com/ddozzz9.png\"></p>\n<p>双击之后出现running就ok了</p>\n<p>然后打开命令提示符输入：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker version</span><br><span class=\"line\"></span><br><span class=\"line\">PS C:\\WINDOWS\\system32&gt; docker version</span><br><span class=\"line\">Client:</span><br><span class=\"line\"> Version:   <span class=\"number\">17.12</span>.<span class=\"number\">0</span>-ce</span><br><span class=\"line\"> API version:   <span class=\"number\">1.35</span></span><br><span class=\"line\"> Go version:go1.<span class=\"number\">9.2</span></span><br><span class=\"line\"> Git commit:c97c6d6</span><br><span class=\"line\"> Built: Wed Dec <span class=\"number\">27</span> <span class=\"number\">20</span>:<span class=\"number\">05</span>:<span class=\"number\">22</span> <span class=\"number\">2017</span></span><br><span class=\"line\"> OS/Arch:   windows/amd64</span><br><span class=\"line\"></span><br><span class=\"line\">Server:</span><br><span class=\"line\"> Engine:</span><br><span class=\"line\">  Version:  <span class=\"number\">17.12</span>.<span class=\"number\">0</span>-ce</span><br><span class=\"line\">  API version:  <span class=\"number\">1.35</span> (minimum version <span class=\"number\">1.12</span>)</span><br><span class=\"line\">  Go version:   go1.<span class=\"number\">9.2</span></span><br><span class=\"line\">  Git commit:   c97c6d6</span><br><span class=\"line\">  Built:Wed Dec <span class=\"number\">27</span> <span class=\"number\">20</span>:<span class=\"number\">12</span>:<span class=\"number\">29</span> <span class=\"number\">2017</span></span><br><span class=\"line\">  OS/Arch:  linux/amd64</span><br><span class=\"line\">  Experimental: <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p>会出现很多版本相关信息。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS C:\\WINDOWS\\system32&gt; docker images <span class=\"comment\">//查看当前已有镜像</span></span><br><span class=\"line\">REPOSITORY  TAG IMAGE ID</span><br><span class=\"line\">CREATED SIZE</span><br><span class=\"line\">centos  latest  <span class=\"number\">2</span>d194b392dd1</span><br><span class=\"line\"><span class=\"number\">32</span> hours ago195MB</span><br><span class=\"line\">docker4w/nsenter-dockerdlatest  cae870735e91</span><br><span class=\"line\"><span class=\"number\">4</span> months ago187kB</span><br><span class=\"line\">registry.cn-hangzhou.aliyuncs.com/diligentyang/centos6.<span class=\"number\">7</span>_nginx_1.<span class=\"number\">10</span>_php5.<span class=\"number\">6.29</span>   v1.<span class=\"number\">0072258802250</span></span><br><span class=\"line\"><span class=\"number\">14</span> months ago   <span class=\"number\">854</span>MB</span><br></pre></td></tr></table></figure>\n<p>关于镜像可以使用命令：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker search centos</span><br></pre></td></tr></table></figure>\n<p>来查找与centos相关的镜像</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    PS C:\\WINDOWS\\system32&gt; docker search centos</span><br><span class=\"line\">    NAME   DESCRIPTION STARS   OFFICIAL</span><br><span class=\"line\">       AUTOMATED</span><br><span class=\"line\">    centos The official build of CentOS.   <span class=\"number\">4079</span>[OK]</span><br><span class=\"line\">    </span><br><span class=\"line\">    ansible/centos7-ansibleAnsible on Centos7  <span class=\"number\">105</span></span><br><span class=\"line\">···</span><br><span class=\"line\">其中越靠前是STARS越多，相当于使用的人最多，当我们选择了一个镜像后查看它的AUTOMATED就能直接拉取镜像</span><br><span class=\"line\">```php</span><br><span class=\"line\">    docker pull registry.cn-hangzhou.aliyuncs.com/diligentyang/centos6.<span class=\"number\">7</span>_nginx_1.<span class=\"number\">10</span>_php5.<span class=\"number\">6.29</span>:v1.<span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n<p>这里使用的是一个阿里云搭建的php5.6+nginx1.10的镜像</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker run -p <span class=\"number\">80</span>:<span class=\"number\">80</span> --name ali -it <span class=\"number\">5</span>a7e /bin/bash</span><br></pre></td></tr></table></figure>\n<p>docker run ：创建一个新的容器并运行一个命令，常用参数:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- -i: 以交互模式运行容器，通常与 -t 同时使用；</span><br><span class=\"line\">- -t: 为容器重新分配一个伪输入终端，通常与 -i 同时使用</span><br><span class=\"line\">- –name=”nginx-lb”: 为容器指定一个名称；</span><br><span class=\"line\">- -P 将容器的<span class=\"number\">80</span>端口映射到主机随机端口。</span><br><span class=\"line\">- -p <span class=\"number\">80</span>:<span class=\"number\">80</span> 将容器的<span class=\"number\">80</span>端口映射到主机的<span class=\"number\">80</span>端口</span><br><span class=\"line\">- -v 映射主机目录和容器目录</span><br></pre></td></tr></table></figure>\n<p>其中 5a7e为镜像的IMAGE ID</p>\n<p>如果出现报错的情况：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker run -p <span class=\"number\">80</span>:<span class=\"number\">80</span> --name ali -it <span class=\"number\">5</span>a7e /bin/bash</span><br><span class=\"line\">cannot enable tty mode on non tty input</span><br></pre></td></tr></table></figure>\n<p>总结出两条解决方案</p>\n<p>1: 在命令前面加上winpty<br>2: 首先执行 docker-machine ssh default</p>\n<p>不出意外的话就能直接进入到镜像了</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ec600fcf672e /]<span class=\"comment\"># ls</span></span><br><span class=\"line\">bin   dev  home  lib64  lost+found  mnt   opt   root  selinux  sys  usr</span><br><span class=\"line\">boot  etc  lib   local  media   mysql-community-release-el7-<span class=\"number\">5</span>.noarch.rpm  proc  sbin  srv  tmp  <span class=\"keyword\">var</span></span><br></pre></td></tr></table></figure>\n<p>该镜像已经配置好了php环境，所以我们只需要：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ec600fcf672e /]<span class=\"comment\"># php-fpm</span></span><br><span class=\"line\">[root@ec600fcf672e /]<span class=\"comment\"># service nginx</span></span><br></pre></td></tr></table></figure>\n<p>就能启动了</p>\n<p>在浏览器地址栏输入localhost 或者你的内网ip如果出现phpinfo的相关信息就说明启动成功。</p>\n<p>其中网站根目录为  /var/www</p>\n<p>如果想退出这个容器（在后台运行）需要按下ctrl+p ctrl+q （偶尔会失效。。）</p>\n<p>如果想要切回去继续工作只需要docker attach 容器id（可以为前几位，只要和别的区分开就好）</p>\n<p>查看所有容器：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS C:\\WINDOWS\\system32&gt; docker ps -a</span><br><span class=\"line\">CONTAINER IDIMAGE   COMMAND CREATED STATUS   PORTS</span><br><span class=\"line\">  NAMES</span><br><span class=\"line\">ec600fcf672e0722<span class=\"string\">&quot;/bin/bash&quot;</span> About an hour ago   Up About an hour <span class=\"number\">0.0</span>.<span class=\"number\">0.0</span>:<span class=\"number\">80</span>-&gt;<span class=\"number\">8</span></span><br><span class=\"line\">tcp   ali</span><br><span class=\"line\">fe985915775ecentos  <span class=\"string\">&quot;ls&quot;</span><span class=\"number\">6</span> hours ago Exited (<span class=\"number\">0</span>) <span class=\"number\">6</span> hours ago</span><br></pre></td></tr></table></figure>\n<p>删除不用的容器</p>\n<p>docker rm 容器id</p>\n<p>如果容器正在运行可以使用docker stop 容器id，关闭容器后再删除。或者直接使用docker rm -f 容器id</p>\n<p>删除镜像</p>\n<p>docker rmi 镜像id</p>\n<p>那么如何将本地目录映射到容器里进行调试呢</p>\n<p>可以在启动容器的加上一个-v参数，映射主机目录和容器目录</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -p <span class=\"number\">80</span>:<span class=\"number\">80</span> --name test -v /e/wamp/www:/<span class=\"keyword\">var</span>/www -it ec60 /bin/bash</span><br></pre></td></tr></table></figure>\n<p>由于我们之前已经配置并启动了镜像，那么我们可以将本地的项目拷贝到容器里：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker cp /e/wamp/www/test ec60:/<span class=\"keyword\">var</span>/www</span><br></pre></td></tr></table></figure>\n<p>注意项目的路径写法。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>首先从Docker官网上面下载最新版本点击前往</p>\n<p>安装过程可能会有点长，因为需要在线下载很多文件。</p>\n<p>安装好了之后桌面上会出现一个这样的图标：</p>\n<p><img src=\"https://i.imgur.com/ddozzz9.png\"></p>\n<p>双击之后出现running就ok了</p>\n<p>然后打开命令提示符输入：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker version</span><br><span class=\"line\"></span><br><span class=\"line\">PS C:\\WINDOWS\\system32&gt; docker version</span><br><span class=\"line\">Client:</span><br><span class=\"line\"> Version:   <span class=\"number\">17.12</span>.<span class=\"number\">0</span>-ce</span><br><span class=\"line\"> API version:   <span class=\"number\">1.35</span></span><br><span class=\"line\"> Go version:go1.<span class=\"number\">9.2</span></span><br><span class=\"line\"> Git commit:c97c6d6</span><br><span class=\"line\"> Built: Wed Dec <span class=\"number\">27</span> <span class=\"number\">20</span>:<span class=\"number\">05</span>:<span class=\"number\">22</span> <span class=\"number\">2017</span></span><br><span class=\"line\"> OS/Arch:   windows/amd64</span><br><span class=\"line\"></span><br><span class=\"line\">Server:</span><br><span class=\"line\"> Engine:</span><br><span class=\"line\">  Version:  <span class=\"number\">17.12</span>.<span class=\"number\">0</span>-ce</span><br><span class=\"line\">  API version:  <span class=\"number\">1.35</span> (minimum version <span class=\"number\">1.12</span>)</span><br><span class=\"line\">  Go version:   go1.<span class=\"number\">9.2</span></span><br><span class=\"line\">  Git commit:   c97c6d6</span><br><span class=\"line\">  Built:Wed Dec <span class=\"number\">27</span> <span class=\"number\">20</span>:<span class=\"number\">12</span>:<span class=\"number\">29</span> <span class=\"number\">2017</span></span><br><span class=\"line\">  OS/Arch:  linux/amd64</span><br><span class=\"line\">  Experimental: <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p>会出现很多版本相关信息。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS C:\\WINDOWS\\system32&gt; docker images <span class=\"comment\">//查看当前已有镜像</span></span><br><span class=\"line\">REPOSITORY  TAG IMAGE ID</span><br><span class=\"line\">CREATED SIZE</span><br><span class=\"line\">centos  latest  <span class=\"number\">2</span>d194b392dd1</span><br><span class=\"line\"><span class=\"number\">32</span> hours ago195MB</span><br><span class=\"line\">docker4w/nsenter-dockerdlatest  cae870735e91</span><br><span class=\"line\"><span class=\"number\">4</span> months ago187kB</span><br><span class=\"line\">registry.cn-hangzhou.aliyuncs.com/diligentyang/centos6.<span class=\"number\">7</span>_nginx_1.<span class=\"number\">10</span>_php5.<span class=\"number\">6.29</span>   v1.<span class=\"number\">0072258802250</span></span><br><span class=\"line\"><span class=\"number\">14</span> months ago   <span class=\"number\">854</span>MB</span><br></pre></td></tr></table></figure>\n<p>关于镜像可以使用命令：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker search centos</span><br></pre></td></tr></table></figure>\n<p>来查找与centos相关的镜像</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    PS C:\\WINDOWS\\system32&gt; docker search centos</span><br><span class=\"line\">    NAME   DESCRIPTION STARS   OFFICIAL</span><br><span class=\"line\">       AUTOMATED</span><br><span class=\"line\">    centos The official build of CentOS.   <span class=\"number\">4079</span>[OK]</span><br><span class=\"line\">    </span><br><span class=\"line\">    ansible/centos7-ansibleAnsible on Centos7  <span class=\"number\">105</span></span><br><span class=\"line\">···</span><br><span class=\"line\">其中越靠前是STARS越多，相当于使用的人最多，当我们选择了一个镜像后查看它的AUTOMATED就能直接拉取镜像</span><br><span class=\"line\">```php</span><br><span class=\"line\">    docker pull registry.cn-hangzhou.aliyuncs.com/diligentyang/centos6.<span class=\"number\">7</span>_nginx_1.<span class=\"number\">10</span>_php5.<span class=\"number\">6.29</span>:v1.<span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n<p>这里使用的是一个阿里云搭建的php5.6+nginx1.10的镜像</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker run -p <span class=\"number\">80</span>:<span class=\"number\">80</span> --name ali -it <span class=\"number\">5</span>a7e /bin/bash</span><br></pre></td></tr></table></figure>\n<p>docker run ：创建一个新的容器并运行一个命令，常用参数:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- -i: 以交互模式运行容器，通常与 -t 同时使用；</span><br><span class=\"line\">- -t: 为容器重新分配一个伪输入终端，通常与 -i 同时使用</span><br><span class=\"line\">- –name=”nginx-lb”: 为容器指定一个名称；</span><br><span class=\"line\">- -P 将容器的<span class=\"number\">80</span>端口映射到主机随机端口。</span><br><span class=\"line\">- -p <span class=\"number\">80</span>:<span class=\"number\">80</span> 将容器的<span class=\"number\">80</span>端口映射到主机的<span class=\"number\">80</span>端口</span><br><span class=\"line\">- -v 映射主机目录和容器目录</span><br></pre></td></tr></table></figure>\n<p>其中 5a7e为镜像的IMAGE ID</p>\n<p>如果出现报错的情况：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker run -p <span class=\"number\">80</span>:<span class=\"number\">80</span> --name ali -it <span class=\"number\">5</span>a7e /bin/bash</span><br><span class=\"line\">cannot enable tty mode on non tty input</span><br></pre></td></tr></table></figure>\n<p>总结出两条解决方案</p>\n<p>1: 在命令前面加上winpty<br>2: 首先执行 docker-machine ssh default</p>\n<p>不出意外的话就能直接进入到镜像了</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ec600fcf672e /]<span class=\"comment\"># ls</span></span><br><span class=\"line\">bin   dev  home  lib64  lost+found  mnt   opt   root  selinux  sys  usr</span><br><span class=\"line\">boot  etc  lib   local  media   mysql-community-release-el7-<span class=\"number\">5</span>.noarch.rpm  proc  sbin  srv  tmp  <span class=\"keyword\">var</span></span><br></pre></td></tr></table></figure>\n<p>该镜像已经配置好了php环境，所以我们只需要：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ec600fcf672e /]<span class=\"comment\"># php-fpm</span></span><br><span class=\"line\">[root@ec600fcf672e /]<span class=\"comment\"># service nginx</span></span><br></pre></td></tr></table></figure>\n<p>就能启动了</p>\n<p>在浏览器地址栏输入localhost 或者你的内网ip如果出现phpinfo的相关信息就说明启动成功。</p>\n<p>其中网站根目录为  /var/www</p>\n<p>如果想退出这个容器（在后台运行）需要按下ctrl+p ctrl+q （偶尔会失效。。）</p>\n<p>如果想要切回去继续工作只需要docker attach 容器id（可以为前几位，只要和别的区分开就好）</p>\n<p>查看所有容器：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS C:\\WINDOWS\\system32&gt; docker ps -a</span><br><span class=\"line\">CONTAINER IDIMAGE   COMMAND CREATED STATUS   PORTS</span><br><span class=\"line\">  NAMES</span><br><span class=\"line\">ec600fcf672e0722<span class=\"string\">&quot;/bin/bash&quot;</span> About an hour ago   Up About an hour <span class=\"number\">0.0</span>.<span class=\"number\">0.0</span>:<span class=\"number\">80</span>-&gt;<span class=\"number\">8</span></span><br><span class=\"line\">tcp   ali</span><br><span class=\"line\">fe985915775ecentos  <span class=\"string\">&quot;ls&quot;</span><span class=\"number\">6</span> hours ago Exited (<span class=\"number\">0</span>) <span class=\"number\">6</span> hours ago</span><br></pre></td></tr></table></figure>\n<p>删除不用的容器</p>\n<p>docker rm 容器id</p>\n<p>如果容器正在运行可以使用docker stop 容器id，关闭容器后再删除。或者直接使用docker rm -f 容器id</p>\n<p>删除镜像</p>\n<p>docker rmi 镜像id</p>\n<p>那么如何将本地目录映射到容器里进行调试呢</p>\n<p>可以在启动容器的加上一个-v参数，映射主机目录和容器目录</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -p <span class=\"number\">80</span>:<span class=\"number\">80</span> --name test -v /e/wamp/www:/<span class=\"keyword\">var</span>/www -it ec60 /bin/bash</span><br></pre></td></tr></table></figure>\n<p>由于我们之前已经配置并启动了镜像，那么我们可以将本地的项目拷贝到容器里：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker cp /e/wamp/www/test ec60:/<span class=\"keyword\">var</span>/www</span><br></pre></td></tr></table></figure>\n<p>注意项目的路径写法。</p>\n"},{"title":"Laravel使用（Cache）","date":"2018-03-23T06:54:51.000Z","_content":"1,Cache的使用\nLaravel目前支持流行的缓存后端包括Memcached和Redis等，下面说的是数据库缓存：\n\n使用database缓存驱动时，你需要设置一张表包含缓存缓存项。下面是该表的Schema声明：\n```php\n    Schema::create('cache', function (Blueprint $table) {\n    \t\t\t$table->string('key')->unique();\n    \t\t\t$table->text('value');\n    \t\t\t$table->integer('expiration');\n    \t\t});\n```\n首先创建表迁移：\n```php\n    php artisan make:migration create_cache_table\n```\n再将表迁移内容替换进去，就是第一段替换\n\n执行表迁移：\n```php\n    PS E:\\wamp\\www\\blog> php artisan migrate\n    Migrating: 2018_03_22_160436_create_cache_table\n    Migrated:  2018_03_22_160436_create_cache_table\n```\n那么就可以使用数据库缓存了\n\n在需要使用的控制器里使用：\n```php\n    use Cache；\n```\n比如要将文章的详情页存入到数据库缓存，并且在没有该详情页缓存的时候添加进去：\n```php\n    \tpublic function show($id) {\n    \t\t$result['result'] = Cache::remember('news_' . $id, 10060, function () use ($id) {//news_$id用于区分不同的文章详情，10060表示缓存时间，单位分，\n    后面是缓存内容，使用闭包函数use连接文章id调用模型来获取数据\n\n    \t\t\treturn Index::where('id', $id)->first();\n    \t\t});\n    \n    \t\t$result['category_id'] = $result['result']['category_id'];\n    \n    \t\treturn view('home.index.show', $result);\n    \t}\n```\nCache的remember方法第一个参数代表的是缓存的key，第二个参数代表缓存的时间，第三个参数表示的是在没有该key的情况下设置的默认值，该参数支持闭包函数。\n\n你也可使用remember和forever方法：\n```php\n    $value = Cache::rememberForever('news_' . $id,function () use ($id) { return Index::where('id', $id)->first();});\n```\n来永久缓存数据。\n\n扩展：比如一些导航栏是每个页面都要获取，我们也可以将其加入到缓存中：\n\n在之前的文章里，公用的数据我们都放在app/Providers/目录下的服务提供者文件里统一加载数据。\n\n首先在服务提供者的文件里：\n```php\n\tpublic function boot() {\n\t\t//基于闭包的composer\n\t\tview()->composer('layouts.home', function ($view) {\n\t\t\t$config = DB::table('config')//获取网站的全局配置参数，如客服电话，公司地址等。。\n\t\t\t\t->where('id', 1)\n\t\t\t\t->first();\n\t\t\t$banner = DB::table('image')\n\t\t\t\t->where('is_see', 1)\n\t\t\t\t->get();\n\t\t\t$view->with('config', $config)->with('banner', $banner);\n\t\t});\n\n\t}\n```\n将站点配置$config和$banner加入到缓存中：\n```php\n\tpublic function boot() {\n\t\t//基于闭包的composer\n\t\tview()->composer('layouts.home', function ($view) {\n\t\t\t$config = Cache::remember('config', 10060, function () {//获取key=config的数据，如果没有则使用闭包函数从数据库获取并存入缓存\n\t\t\t\treturn DB::table('config')->where('id', 1)->first();\n\t\t\t});\n\t\t\t$banner = Cache::remember('banner', 10060, function () {\n\t\t\t\treturn DB::table('image')->where('is_see', 1)->get();\n\t\t\t});\n\t\t\t$view->with('config', $config)->with('banner', $banner);\n\t\t});\n\t}\n```\n那么在第一次访问的时候借用laravel-debugbar调试器是这样的：\n\n![](https://i.imgur.com/UGjLq7y.png)\n\n当第二次访问的时候：\n\n![](https://i.imgur.com/1nivQRB.png)\n\n因为之前的全局数据以及文章详情都存入到了缓存中，所以没有查询数据库。\n\n**windows下使用Redis缓存**\n\n首先需要下载Redis服务Windows版本，因为官方不提供windows版本，所以只能再github上下载。\n\n下载地址：[http://github.com/MSOpenTech/redis/tags](http://github.com/MSOpenTech/redis/tags)\n\n下载时选择msi文件安装，可避免之后使用的时候要一直保持窗口打开才行。\n\n安装过程基本上能打钩的都打上勾。\n\n然后在计算机管理→服务与应用程序→服务  可以看到Redis服务，可直接点击启动服务或停止服务。\n\n同时你也可以使用命令行来开启Redis服务，不过需要命令行窗口常开。\n\n在Reids安装目录输入命令`redis-server.exe redis.windows.conf`\n\n出现Redis服务相关信息就说明启动成功。\n\n测试方法也可自行百度。\n\n在Laravel5 中使用Redis缓存，首先需要在config/databasez中配置redis缓存服务（默认已经配置好了）\n\t'redis' => [\n\n\t\t'client' => 'predis',\n\n\t\t'default' => [\n\t\t\t'host' => env('REDIS_HOST', '127.0.0.1'),\n\t\t\t'password' => env('REDIS_PASSWORD', null),\n\t\t\t'port' => env('REDIS_PORT', 6379),\n\t\t\t'database' => 0,\n\t\t],\n\n\t],\n\n然后在我们的config/cache.php中将驱动改为redis即可。\n\n下载辅助工具RedisDesktopManager，能够在windows环境下更清楚的查看缓存。\n\n例如：\n\n\t\tview()->composer('home/*', function ($view) {\n\n\t\t\t$carousel = Cache::remember('carousel', 10060, function () {\n\t\t\t\treturn Carousel::get();\n\t\t\t});\n\n\t\t\t// // 分配数据\n\t\t\t$assign = compact('carousel');\n\t\t\t$view->with($assign);\n\t\t});\n\n将数据加入到redis缓存中，同时在RedisDesktopManager工具中我们可以看到：\n\n![](https://i.imgur.com/YsvEhKV.png)\n\n说明已经存储到redis服务中。\n","source":"_posts/Laravel-Cache.md","raw":"---\ntitle: Laravel使用（Cache）\ndate: 2018-03-23 14:54:51\ncategories: PHP\ntags:\n\t- laravel\n\t- cache\n---\n1,Cache的使用\nLaravel目前支持流行的缓存后端包括Memcached和Redis等，下面说的是数据库缓存：\n\n使用database缓存驱动时，你需要设置一张表包含缓存缓存项。下面是该表的Schema声明：\n```php\n    Schema::create('cache', function (Blueprint $table) {\n    \t\t\t$table->string('key')->unique();\n    \t\t\t$table->text('value');\n    \t\t\t$table->integer('expiration');\n    \t\t});\n```\n首先创建表迁移：\n```php\n    php artisan make:migration create_cache_table\n```\n再将表迁移内容替换进去，就是第一段替换\n\n执行表迁移：\n```php\n    PS E:\\wamp\\www\\blog> php artisan migrate\n    Migrating: 2018_03_22_160436_create_cache_table\n    Migrated:  2018_03_22_160436_create_cache_table\n```\n那么就可以使用数据库缓存了\n\n在需要使用的控制器里使用：\n```php\n    use Cache；\n```\n比如要将文章的详情页存入到数据库缓存，并且在没有该详情页缓存的时候添加进去：\n```php\n    \tpublic function show($id) {\n    \t\t$result['result'] = Cache::remember('news_' . $id, 10060, function () use ($id) {//news_$id用于区分不同的文章详情，10060表示缓存时间，单位分，\n    后面是缓存内容，使用闭包函数use连接文章id调用模型来获取数据\n\n    \t\t\treturn Index::where('id', $id)->first();\n    \t\t});\n    \n    \t\t$result['category_id'] = $result['result']['category_id'];\n    \n    \t\treturn view('home.index.show', $result);\n    \t}\n```\nCache的remember方法第一个参数代表的是缓存的key，第二个参数代表缓存的时间，第三个参数表示的是在没有该key的情况下设置的默认值，该参数支持闭包函数。\n\n你也可使用remember和forever方法：\n```php\n    $value = Cache::rememberForever('news_' . $id,function () use ($id) { return Index::where('id', $id)->first();});\n```\n来永久缓存数据。\n\n扩展：比如一些导航栏是每个页面都要获取，我们也可以将其加入到缓存中：\n\n在之前的文章里，公用的数据我们都放在app/Providers/目录下的服务提供者文件里统一加载数据。\n\n首先在服务提供者的文件里：\n```php\n\tpublic function boot() {\n\t\t//基于闭包的composer\n\t\tview()->composer('layouts.home', function ($view) {\n\t\t\t$config = DB::table('config')//获取网站的全局配置参数，如客服电话，公司地址等。。\n\t\t\t\t->where('id', 1)\n\t\t\t\t->first();\n\t\t\t$banner = DB::table('image')\n\t\t\t\t->where('is_see', 1)\n\t\t\t\t->get();\n\t\t\t$view->with('config', $config)->with('banner', $banner);\n\t\t});\n\n\t}\n```\n将站点配置$config和$banner加入到缓存中：\n```php\n\tpublic function boot() {\n\t\t//基于闭包的composer\n\t\tview()->composer('layouts.home', function ($view) {\n\t\t\t$config = Cache::remember('config', 10060, function () {//获取key=config的数据，如果没有则使用闭包函数从数据库获取并存入缓存\n\t\t\t\treturn DB::table('config')->where('id', 1)->first();\n\t\t\t});\n\t\t\t$banner = Cache::remember('banner', 10060, function () {\n\t\t\t\treturn DB::table('image')->where('is_see', 1)->get();\n\t\t\t});\n\t\t\t$view->with('config', $config)->with('banner', $banner);\n\t\t});\n\t}\n```\n那么在第一次访问的时候借用laravel-debugbar调试器是这样的：\n\n![](https://i.imgur.com/UGjLq7y.png)\n\n当第二次访问的时候：\n\n![](https://i.imgur.com/1nivQRB.png)\n\n因为之前的全局数据以及文章详情都存入到了缓存中，所以没有查询数据库。\n\n**windows下使用Redis缓存**\n\n首先需要下载Redis服务Windows版本，因为官方不提供windows版本，所以只能再github上下载。\n\n下载地址：[http://github.com/MSOpenTech/redis/tags](http://github.com/MSOpenTech/redis/tags)\n\n下载时选择msi文件安装，可避免之后使用的时候要一直保持窗口打开才行。\n\n安装过程基本上能打钩的都打上勾。\n\n然后在计算机管理→服务与应用程序→服务  可以看到Redis服务，可直接点击启动服务或停止服务。\n\n同时你也可以使用命令行来开启Redis服务，不过需要命令行窗口常开。\n\n在Reids安装目录输入命令`redis-server.exe redis.windows.conf`\n\n出现Redis服务相关信息就说明启动成功。\n\n测试方法也可自行百度。\n\n在Laravel5 中使用Redis缓存，首先需要在config/databasez中配置redis缓存服务（默认已经配置好了）\n\t'redis' => [\n\n\t\t'client' => 'predis',\n\n\t\t'default' => [\n\t\t\t'host' => env('REDIS_HOST', '127.0.0.1'),\n\t\t\t'password' => env('REDIS_PASSWORD', null),\n\t\t\t'port' => env('REDIS_PORT', 6379),\n\t\t\t'database' => 0,\n\t\t],\n\n\t],\n\n然后在我们的config/cache.php中将驱动改为redis即可。\n\n下载辅助工具RedisDesktopManager，能够在windows环境下更清楚的查看缓存。\n\n例如：\n\n\t\tview()->composer('home/*', function ($view) {\n\n\t\t\t$carousel = Cache::remember('carousel', 10060, function () {\n\t\t\t\treturn Carousel::get();\n\t\t\t});\n\n\t\t\t// // 分配数据\n\t\t\t$assign = compact('carousel');\n\t\t\t$view->with($assign);\n\t\t});\n\n将数据加入到redis缓存中，同时在RedisDesktopManager工具中我们可以看到：\n\n![](https://i.imgur.com/YsvEhKV.png)\n\n说明已经存储到redis服务中。\n","slug":"Laravel-Cache","published":1,"updated":"2021-11-25T03:28:13.071Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwn8bfxb0007twnfhkvsfios","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>1,Cache的使用<br>Laravel目前支持流行的缓存后端包括Memcached和Redis等，下面说的是数据库缓存：</p>\n<p>使用database缓存驱动时，你需要设置一张表包含缓存缓存项。下面是该表的Schema声明：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Schema::create(<span class=\"string\">&#x27;cache&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">Blueprint <span class=\"variable\">$table</span></span>) </span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"variable\">$table</span>-&gt;string(<span class=\"string\">&#x27;key&#x27;</span>)-&gt;unique();</span><br><span class=\"line\">\t\t\t<span class=\"variable\">$table</span>-&gt;text(<span class=\"string\">&#x27;value&#x27;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"variable\">$table</span>-&gt;integer(<span class=\"string\">&#x27;expiration&#x27;</span>);</span><br><span class=\"line\">\t\t&#125;);</span><br></pre></td></tr></table></figure>\n<p>首先创建表迁移：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan make:migration create_cache_table</span><br></pre></td></tr></table></figure>\n<p>再将表迁移内容替换进去，就是第一段替换</p>\n<p>执行表迁移：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS E:\\wamp\\www\\blog&gt; php artisan migrate</span><br><span class=\"line\">Migrating: <span class=\"number\">2018_03_22_160436</span>_create_cache_table</span><br><span class=\"line\">Migrated:  <span class=\"number\">2018_03_22_160436</span>_create_cache_table</span><br></pre></td></tr></table></figure>\n<p>那么就可以使用数据库缓存了</p>\n<p>在需要使用的控制器里使用：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Cache</span>；</span><br></pre></td></tr></table></figure>\n<p>比如要将文章的详情页存入到数据库缓存，并且在没有该详情页缓存的时候添加进去：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">show</span>(<span class=\"params\"><span class=\"variable\">$id</span></span>) </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"variable\">$result</span>[<span class=\"string\">&#x27;result&#x27;</span>] = Cache::remember(<span class=\"string\">&#x27;news_&#x27;</span> . <span class=\"variable\">$id</span>, <span class=\"number\">10060</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) <span class=\"keyword\">use</span> (<span class=\"params\"><span class=\"variable\">$id</span></span>) </span>&#123;<span class=\"comment\">//news_$id用于区分不同的文章详情，10060表示缓存时间，单位分，</span></span><br><span class=\"line\">后面是缓存内容，使用闭包函数<span class=\"keyword\">use</span>连接文章<span class=\"title\">id</span>调用模型来获取数据</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"title\">return</span> <span class=\"title\">Index</span>::<span class=\"title\">where</span>(&#x27;<span class=\"title\">id</span>&#x27;, $<span class=\"title\">id</span>)-&gt;<span class=\"title\">first</span>();</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"variable\">$result</span>[<span class=\"string\">&#x27;category_id&#x27;</span>] = <span class=\"variable\">$result</span>[<span class=\"string\">&#x27;result&#x27;</span>][<span class=\"string\">&#x27;category_id&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> view(<span class=\"string\">&#x27;home.index.show&#x27;</span>, <span class=\"variable\">$result</span>);</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>\n<p>Cache的remember方法第一个参数代表的是缓存的key，第二个参数代表缓存的时间，第三个参数表示的是在没有该key的情况下设置的默认值，该参数支持闭包函数。</p>\n<p>你也可使用remember和forever方法：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$value</span> = Cache::rememberForever(<span class=\"string\">&#x27;news_&#x27;</span> . <span class=\"variable\">$id</span>,<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) <span class=\"keyword\">use</span> (<span class=\"params\"><span class=\"variable\">$id</span></span>) </span>&#123; <span class=\"keyword\">return</span> Index::where(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"variable\">$id</span>)-&gt;first();&#125;);</span><br></pre></td></tr></table></figure>\n<p>来永久缓存数据。</p>\n<p>扩展：比如一些导航栏是每个页面都要获取，我们也可以将其加入到缓存中：</p>\n<p>在之前的文章里，公用的数据我们都放在app/Providers/目录下的服务提供者文件里统一加载数据。</p>\n<p>首先在服务提供者的文件里：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">boot</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//基于闭包的composer</span></span><br><span class=\"line\">\tview()-&gt;composer(<span class=\"string\">&#x27;layouts.home&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"variable\">$view</span></span>) </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"variable\">$config</span> = DB::table(<span class=\"string\">&#x27;config&#x27;</span>)<span class=\"comment\">//获取网站的全局配置参数，如客服电话，公司地址等。。</span></span><br><span class=\"line\">\t\t\t-&gt;where(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t-&gt;first();</span><br><span class=\"line\">\t\t<span class=\"variable\">$banner</span> = DB::table(<span class=\"string\">&#x27;image&#x27;</span>)</span><br><span class=\"line\">\t\t\t-&gt;where(<span class=\"string\">&#x27;is_see&#x27;</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t-&gt;get();</span><br><span class=\"line\">\t\t<span class=\"variable\">$view</span>-&gt;with(<span class=\"string\">&#x27;config&#x27;</span>, <span class=\"variable\">$config</span>)-&gt;with(<span class=\"string\">&#x27;banner&#x27;</span>, <span class=\"variable\">$banner</span>);</span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>将站点配置$config和$banner加入到缓存中：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">boot</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//基于闭包的composer</span></span><br><span class=\"line\">\tview()-&gt;composer(<span class=\"string\">&#x27;layouts.home&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"variable\">$view</span></span>) </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"variable\">$config</span> = Cache::remember(<span class=\"string\">&#x27;config&#x27;</span>, <span class=\"number\">10060</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;<span class=\"comment\">//获取key=config的数据，如果没有则使用闭包函数从数据库获取并存入缓存</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> DB::table(<span class=\"string\">&#x27;config&#x27;</span>)-&gt;where(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"number\">1</span>)-&gt;first();</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t\t<span class=\"variable\">$banner</span> = Cache::remember(<span class=\"string\">&#x27;banner&#x27;</span>, <span class=\"number\">10060</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> DB::table(<span class=\"string\">&#x27;image&#x27;</span>)-&gt;where(<span class=\"string\">&#x27;is_see&#x27;</span>, <span class=\"number\">1</span>)-&gt;get();</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t\t<span class=\"variable\">$view</span>-&gt;with(<span class=\"string\">&#x27;config&#x27;</span>, <span class=\"variable\">$config</span>)-&gt;with(<span class=\"string\">&#x27;banner&#x27;</span>, <span class=\"variable\">$banner</span>);</span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>那么在第一次访问的时候借用laravel-debugbar调试器是这样的：</p>\n<p><img src=\"https://i.imgur.com/UGjLq7y.png\"></p>\n<p>当第二次访问的时候：</p>\n<p><img src=\"https://i.imgur.com/1nivQRB.png\"></p>\n<p>因为之前的全局数据以及文章详情都存入到了缓存中，所以没有查询数据库。</p>\n<p><strong>windows下使用Redis缓存</strong></p>\n<p>首先需要下载Redis服务Windows版本，因为官方不提供windows版本，所以只能再github上下载。</p>\n<p>下载地址：<a href=\"http://github.com/MSOpenTech/redis/tags\">http://github.com/MSOpenTech/redis/tags</a></p>\n<p>下载时选择msi文件安装，可避免之后使用的时候要一直保持窗口打开才行。</p>\n<p>安装过程基本上能打钩的都打上勾。</p>\n<p>然后在计算机管理→服务与应用程序→服务  可以看到Redis服务，可直接点击启动服务或停止服务。</p>\n<p>同时你也可以使用命令行来开启Redis服务，不过需要命令行窗口常开。</p>\n<p>在Reids安装目录输入命令<code>redis-server.exe redis.windows.conf</code></p>\n<p>出现Redis服务相关信息就说明启动成功。</p>\n<p>测试方法也可自行百度。</p>\n<p>在Laravel5 中使用Redis缓存，首先需要在config/databasez中配置redis缓存服务（默认已经配置好了）<br>    ‘redis’ =&gt; [</p>\n<pre><code>    &#39;client&#39; =&gt; &#39;predis&#39;,\n\n    &#39;default&#39; =&gt; [\n        &#39;host&#39; =&gt; env(&#39;REDIS_HOST&#39;, &#39;127.0.0.1&#39;),\n        &#39;password&#39; =&gt; env(&#39;REDIS_PASSWORD&#39;, null),\n        &#39;port&#39; =&gt; env(&#39;REDIS_PORT&#39;, 6379),\n        &#39;database&#39; =&gt; 0,\n    ],\n\n],\n</code></pre>\n<p>然后在我们的config/cache.php中将驱动改为redis即可。</p>\n<p>下载辅助工具RedisDesktopManager，能够在windows环境下更清楚的查看缓存。</p>\n<p>例如：</p>\n<pre><code>    view()-&gt;composer(&#39;home/*&#39;, function ($view) &#123;\n\n        $carousel = Cache::remember(&#39;carousel&#39;, 10060, function () &#123;\n            return Carousel::get();\n        &#125;);\n\n        // // 分配数据\n        $assign = compact(&#39;carousel&#39;);\n        $view-&gt;with($assign);\n    &#125;);\n</code></pre>\n<p>将数据加入到redis缓存中，同时在RedisDesktopManager工具中我们可以看到：</p>\n<p><img src=\"https://i.imgur.com/YsvEhKV.png\"></p>\n<p>说明已经存储到redis服务中。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>1,Cache的使用<br>Laravel目前支持流行的缓存后端包括Memcached和Redis等，下面说的是数据库缓存：</p>\n<p>使用database缓存驱动时，你需要设置一张表包含缓存缓存项。下面是该表的Schema声明：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Schema::create(<span class=\"string\">&#x27;cache&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">Blueprint <span class=\"variable\">$table</span></span>) </span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"variable\">$table</span>-&gt;string(<span class=\"string\">&#x27;key&#x27;</span>)-&gt;unique();</span><br><span class=\"line\">\t\t\t<span class=\"variable\">$table</span>-&gt;text(<span class=\"string\">&#x27;value&#x27;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"variable\">$table</span>-&gt;integer(<span class=\"string\">&#x27;expiration&#x27;</span>);</span><br><span class=\"line\">\t\t&#125;);</span><br></pre></td></tr></table></figure>\n<p>首先创建表迁移：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan make:migration create_cache_table</span><br></pre></td></tr></table></figure>\n<p>再将表迁移内容替换进去，就是第一段替换</p>\n<p>执行表迁移：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS E:\\wamp\\www\\blog&gt; php artisan migrate</span><br><span class=\"line\">Migrating: <span class=\"number\">2018_03_22_160436</span>_create_cache_table</span><br><span class=\"line\">Migrated:  <span class=\"number\">2018_03_22_160436</span>_create_cache_table</span><br></pre></td></tr></table></figure>\n<p>那么就可以使用数据库缓存了</p>\n<p>在需要使用的控制器里使用：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Cache</span>；</span><br></pre></td></tr></table></figure>\n<p>比如要将文章的详情页存入到数据库缓存，并且在没有该详情页缓存的时候添加进去：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">show</span>(<span class=\"params\"><span class=\"variable\">$id</span></span>) </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"variable\">$result</span>[<span class=\"string\">&#x27;result&#x27;</span>] = Cache::remember(<span class=\"string\">&#x27;news_&#x27;</span> . <span class=\"variable\">$id</span>, <span class=\"number\">10060</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) <span class=\"keyword\">use</span> (<span class=\"params\"><span class=\"variable\">$id</span></span>) </span>&#123;<span class=\"comment\">//news_$id用于区分不同的文章详情，10060表示缓存时间，单位分，</span></span><br><span class=\"line\">后面是缓存内容，使用闭包函数<span class=\"keyword\">use</span>连接文章<span class=\"title\">id</span>调用模型来获取数据</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"title\">return</span> <span class=\"title\">Index</span>::<span class=\"title\">where</span>(&#x27;<span class=\"title\">id</span>&#x27;, $<span class=\"title\">id</span>)-&gt;<span class=\"title\">first</span>();</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"variable\">$result</span>[<span class=\"string\">&#x27;category_id&#x27;</span>] = <span class=\"variable\">$result</span>[<span class=\"string\">&#x27;result&#x27;</span>][<span class=\"string\">&#x27;category_id&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> view(<span class=\"string\">&#x27;home.index.show&#x27;</span>, <span class=\"variable\">$result</span>);</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>\n<p>Cache的remember方法第一个参数代表的是缓存的key，第二个参数代表缓存的时间，第三个参数表示的是在没有该key的情况下设置的默认值，该参数支持闭包函数。</p>\n<p>你也可使用remember和forever方法：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$value</span> = Cache::rememberForever(<span class=\"string\">&#x27;news_&#x27;</span> . <span class=\"variable\">$id</span>,<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) <span class=\"keyword\">use</span> (<span class=\"params\"><span class=\"variable\">$id</span></span>) </span>&#123; <span class=\"keyword\">return</span> Index::where(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"variable\">$id</span>)-&gt;first();&#125;);</span><br></pre></td></tr></table></figure>\n<p>来永久缓存数据。</p>\n<p>扩展：比如一些导航栏是每个页面都要获取，我们也可以将其加入到缓存中：</p>\n<p>在之前的文章里，公用的数据我们都放在app/Providers/目录下的服务提供者文件里统一加载数据。</p>\n<p>首先在服务提供者的文件里：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">boot</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//基于闭包的composer</span></span><br><span class=\"line\">\tview()-&gt;composer(<span class=\"string\">&#x27;layouts.home&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"variable\">$view</span></span>) </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"variable\">$config</span> = DB::table(<span class=\"string\">&#x27;config&#x27;</span>)<span class=\"comment\">//获取网站的全局配置参数，如客服电话，公司地址等。。</span></span><br><span class=\"line\">\t\t\t-&gt;where(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t-&gt;first();</span><br><span class=\"line\">\t\t<span class=\"variable\">$banner</span> = DB::table(<span class=\"string\">&#x27;image&#x27;</span>)</span><br><span class=\"line\">\t\t\t-&gt;where(<span class=\"string\">&#x27;is_see&#x27;</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t-&gt;get();</span><br><span class=\"line\">\t\t<span class=\"variable\">$view</span>-&gt;with(<span class=\"string\">&#x27;config&#x27;</span>, <span class=\"variable\">$config</span>)-&gt;with(<span class=\"string\">&#x27;banner&#x27;</span>, <span class=\"variable\">$banner</span>);</span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>将站点配置$config和$banner加入到缓存中：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">boot</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//基于闭包的composer</span></span><br><span class=\"line\">\tview()-&gt;composer(<span class=\"string\">&#x27;layouts.home&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"variable\">$view</span></span>) </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"variable\">$config</span> = Cache::remember(<span class=\"string\">&#x27;config&#x27;</span>, <span class=\"number\">10060</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;<span class=\"comment\">//获取key=config的数据，如果没有则使用闭包函数从数据库获取并存入缓存</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> DB::table(<span class=\"string\">&#x27;config&#x27;</span>)-&gt;where(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"number\">1</span>)-&gt;first();</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t\t<span class=\"variable\">$banner</span> = Cache::remember(<span class=\"string\">&#x27;banner&#x27;</span>, <span class=\"number\">10060</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> DB::table(<span class=\"string\">&#x27;image&#x27;</span>)-&gt;where(<span class=\"string\">&#x27;is_see&#x27;</span>, <span class=\"number\">1</span>)-&gt;get();</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t\t<span class=\"variable\">$view</span>-&gt;with(<span class=\"string\">&#x27;config&#x27;</span>, <span class=\"variable\">$config</span>)-&gt;with(<span class=\"string\">&#x27;banner&#x27;</span>, <span class=\"variable\">$banner</span>);</span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>那么在第一次访问的时候借用laravel-debugbar调试器是这样的：</p>\n<p><img src=\"https://i.imgur.com/UGjLq7y.png\"></p>\n<p>当第二次访问的时候：</p>\n<p><img src=\"https://i.imgur.com/1nivQRB.png\"></p>\n<p>因为之前的全局数据以及文章详情都存入到了缓存中，所以没有查询数据库。</p>\n<p><strong>windows下使用Redis缓存</strong></p>\n<p>首先需要下载Redis服务Windows版本，因为官方不提供windows版本，所以只能再github上下载。</p>\n<p>下载地址：<a href=\"http://github.com/MSOpenTech/redis/tags\">http://github.com/MSOpenTech/redis/tags</a></p>\n<p>下载时选择msi文件安装，可避免之后使用的时候要一直保持窗口打开才行。</p>\n<p>安装过程基本上能打钩的都打上勾。</p>\n<p>然后在计算机管理→服务与应用程序→服务  可以看到Redis服务，可直接点击启动服务或停止服务。</p>\n<p>同时你也可以使用命令行来开启Redis服务，不过需要命令行窗口常开。</p>\n<p>在Reids安装目录输入命令<code>redis-server.exe redis.windows.conf</code></p>\n<p>出现Redis服务相关信息就说明启动成功。</p>\n<p>测试方法也可自行百度。</p>\n<p>在Laravel5 中使用Redis缓存，首先需要在config/databasez中配置redis缓存服务（默认已经配置好了）<br>    ‘redis’ =&gt; [</p>\n<pre><code>    &#39;client&#39; =&gt; &#39;predis&#39;,\n\n    &#39;default&#39; =&gt; [\n        &#39;host&#39; =&gt; env(&#39;REDIS_HOST&#39;, &#39;127.0.0.1&#39;),\n        &#39;password&#39; =&gt; env(&#39;REDIS_PASSWORD&#39;, null),\n        &#39;port&#39; =&gt; env(&#39;REDIS_PORT&#39;, 6379),\n        &#39;database&#39; =&gt; 0,\n    ],\n\n],\n</code></pre>\n<p>然后在我们的config/cache.php中将驱动改为redis即可。</p>\n<p>下载辅助工具RedisDesktopManager，能够在windows环境下更清楚的查看缓存。</p>\n<p>例如：</p>\n<pre><code>    view()-&gt;composer(&#39;home/*&#39;, function ($view) &#123;\n\n        $carousel = Cache::remember(&#39;carousel&#39;, 10060, function () &#123;\n            return Carousel::get();\n        &#125;);\n\n        // // 分配数据\n        $assign = compact(&#39;carousel&#39;);\n        $view-&gt;with($assign);\n    &#125;);\n</code></pre>\n<p>将数据加入到redis缓存中，同时在RedisDesktopManager工具中我们可以看到：</p>\n<p><img src=\"https://i.imgur.com/YsvEhKV.png\"></p>\n<p>说明已经存储到redis服务中。</p>\n"},{"title":"Centos下LNMP环境搭建","date":"2018-03-23T06:24:56.000Z","_content":"1,.安装Nginx\n\n添加CentOS 7 Nginx yum资源库\n```php\nrpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm\n```\n安装：\n```php\nyum -y install nginx\n```\n启动：\n```php\nsystemctl start nginx.service\n```\n设置开机启动：\n```php\nsystemctl enable nginx.service\n```\nnginx配置：\n\n默认配置文件在 /etc/nginx/conf.d/default.conf\n\n我们只需要复制一份配置文件来实现根据域名来访问不同的目录\n```php\ncp default.conf beeasy.conf\n```\n然后beeasy.conf的配置如下：\n![](https://i.imgur.com/Bbs4OzM.png)\n\n\nserver_name 即配置的访问域名\n\nroot 后面即为访问该域名的根目录\n\n该配置解决了在WordPress框架下修改固定链接后除首页其他页面404的问题。\n\n重启nginx：\n```php\nsystemctl restart nginx.service\n```\n2.安装php7.0\n\n添加CentOS 7 php7 yum资源库\n```php\nrpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\nrpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm\n```\n安装：\n```php\nyum install php70w php70w-opcache\nyum install php70w-fpm php70w-opcache\nyum install php70w-mysql\n```\n你也可以安装一些其他扩展：\n```php\nyum install yum-plugin-replace\nyum replace php-common --replace-with=php70w-common\n```\n还包涵一些其他的扩展包，可以根据需求安装：\n```php\nphp70w-dba，php70w-devel，php70w-embedded，php70w-enchant，php70w-gd，php70w-pdo等。。\n```\n可参考https://webtatic.com/packages/php70/\n\n3.安装mysql\n```php\nyum -y install mysql\n```\n安装mysql-server\n```php\nyum -y install mysql-server\n```\n虽然可能会报错，但是不要慌\n```php\nwget http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm\n\nrpm -ivh mysql-community-release-el7-5.noarch.rpm\n\nyum install mysql-community-server\n```\n然后需要确定几次，都按y回车即可\n\n安装mysql扩展包：\n```php\nyum -y install mysql-connector-odbc mysql-devel libdbi-dbd-mysql\n```\n重启对应服务：\n```php\nservice mysqld restart\n\nservice php-fpm start\n\nservice nginx restart\n```\n初次安装mysql是没有密码的,我们要设置密码，mysql的默认账户为root\n\n设置 MySQL 数据 root 账户的密码：\n\n命令：\n```php\nmysql_secure_installation\n```\n当出现如下提示时候直接按回车：\n```php\nEnter current password for root\n```\n出现如下再次回车：\n```php\nSet root password? [Y/n]\n```\n出现如下提示输入你需要设置的密码，这里输入了root,输入密码是不显示的，回车后再输入一次确认：\n```php\nRemove anonymous users? [Y/n]\nDisallow root login remotely? [Y/n]\nRemove test database and access to it? [Y/n]\nReload privilege tables now? [Y/n]\n```\n以上的教程都是搭建完成以后写的，如果存在问题，还请指出。","source":"_posts/Centos-LNMP.md","raw":"---\ntitle: Centos下LNMP环境搭建\ndate: 2018-03-23 14:24:56\ncategories: Linux\ntags:\n\t- mysql\n\t- nginx\n\t- php\n---\n1,.安装Nginx\n\n添加CentOS 7 Nginx yum资源库\n```php\nrpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm\n```\n安装：\n```php\nyum -y install nginx\n```\n启动：\n```php\nsystemctl start nginx.service\n```\n设置开机启动：\n```php\nsystemctl enable nginx.service\n```\nnginx配置：\n\n默认配置文件在 /etc/nginx/conf.d/default.conf\n\n我们只需要复制一份配置文件来实现根据域名来访问不同的目录\n```php\ncp default.conf beeasy.conf\n```\n然后beeasy.conf的配置如下：\n![](https://i.imgur.com/Bbs4OzM.png)\n\n\nserver_name 即配置的访问域名\n\nroot 后面即为访问该域名的根目录\n\n该配置解决了在WordPress框架下修改固定链接后除首页其他页面404的问题。\n\n重启nginx：\n```php\nsystemctl restart nginx.service\n```\n2.安装php7.0\n\n添加CentOS 7 php7 yum资源库\n```php\nrpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\nrpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm\n```\n安装：\n```php\nyum install php70w php70w-opcache\nyum install php70w-fpm php70w-opcache\nyum install php70w-mysql\n```\n你也可以安装一些其他扩展：\n```php\nyum install yum-plugin-replace\nyum replace php-common --replace-with=php70w-common\n```\n还包涵一些其他的扩展包，可以根据需求安装：\n```php\nphp70w-dba，php70w-devel，php70w-embedded，php70w-enchant，php70w-gd，php70w-pdo等。。\n```\n可参考https://webtatic.com/packages/php70/\n\n3.安装mysql\n```php\nyum -y install mysql\n```\n安装mysql-server\n```php\nyum -y install mysql-server\n```\n虽然可能会报错，但是不要慌\n```php\nwget http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm\n\nrpm -ivh mysql-community-release-el7-5.noarch.rpm\n\nyum install mysql-community-server\n```\n然后需要确定几次，都按y回车即可\n\n安装mysql扩展包：\n```php\nyum -y install mysql-connector-odbc mysql-devel libdbi-dbd-mysql\n```\n重启对应服务：\n```php\nservice mysqld restart\n\nservice php-fpm start\n\nservice nginx restart\n```\n初次安装mysql是没有密码的,我们要设置密码，mysql的默认账户为root\n\n设置 MySQL 数据 root 账户的密码：\n\n命令：\n```php\nmysql_secure_installation\n```\n当出现如下提示时候直接按回车：\n```php\nEnter current password for root\n```\n出现如下再次回车：\n```php\nSet root password? [Y/n]\n```\n出现如下提示输入你需要设置的密码，这里输入了root,输入密码是不显示的，回车后再输入一次确认：\n```php\nRemove anonymous users? [Y/n]\nDisallow root login remotely? [Y/n]\nRemove test database and access to it? [Y/n]\nReload privilege tables now? [Y/n]\n```\n以上的教程都是搭建完成以后写的，如果存在问题，还请指出。","slug":"Centos-LNMP","published":1,"updated":"2021-11-25T03:28:13.069Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwn8bfxd0009twnffts55kmz","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>1,.安装Nginx</p>\n<p>添加CentOS 7 Nginx yum资源库</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -Uvh http:<span class=\"comment\">//nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm</span></span><br></pre></td></tr></table></figure>\n<p>安装：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install nginx</span><br></pre></td></tr></table></figure>\n<p>启动：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl start nginx.service</span><br></pre></td></tr></table></figure>\n<p>设置开机启动：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl enable nginx.service</span><br></pre></td></tr></table></figure>\n<p>nginx配置：</p>\n<p>默认配置文件在 /etc/nginx/conf.d/default.conf</p>\n<p>我们只需要复制一份配置文件来实现根据域名来访问不同的目录</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp <span class=\"keyword\">default</span>.conf beeasy.conf</span><br></pre></td></tr></table></figure>\n<p>然后beeasy.conf的配置如下：<br><img src=\"https://i.imgur.com/Bbs4OzM.png\"></p>\n<p>server_name 即配置的访问域名</p>\n<p>root 后面即为访问该域名的根目录</p>\n<p>该配置解决了在WordPress框架下修改固定链接后除首页其他页面404的问题。</p>\n<p>重启nginx：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart nginx.service</span><br></pre></td></tr></table></figure>\n<p>2.安装php7.0</p>\n<p>添加CentOS 7 php7 yum资源库</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -Uvh https:<span class=\"comment\">//dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span></span><br><span class=\"line\">rpm -Uvh https:<span class=\"comment\">//mirror.webtatic.com/yum/el7/webtatic-release.rpm</span></span><br></pre></td></tr></table></figure>\n<p>安装：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install php70w php70w-opcache</span><br><span class=\"line\">yum install php70w-fpm php70w-opcache</span><br><span class=\"line\">yum install php70w-mysql</span><br></pre></td></tr></table></figure>\n<p>你也可以安装一些其他扩展：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install yum-plugin-replace</span><br><span class=\"line\">yum replace php-common --replace-with=php70w-common</span><br></pre></td></tr></table></figure>\n<p>还包涵一些其他的扩展包，可以根据需求安装：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php70w-dba，php70w-devel，php70w-embedded，php70w-enchant，php70w-gd，php70w-pdo等。。</span><br></pre></td></tr></table></figure>\n<p>可参考<a href=\"https://webtatic.com/packages/php70/\">https://webtatic.com/packages/php70/</a></p>\n<p>3.安装mysql</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install mysql</span><br></pre></td></tr></table></figure>\n<p>安装mysql-server</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install mysql-server</span><br></pre></td></tr></table></figure>\n<p>虽然可能会报错，但是不要慌</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http:<span class=\"comment\">//dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm</span></span><br><span class=\"line\"></span><br><span class=\"line\">rpm -ivh mysql-community-release-el7-<span class=\"number\">5</span>.noarch.rpm</span><br><span class=\"line\"></span><br><span class=\"line\">yum install mysql-community-server</span><br></pre></td></tr></table></figure>\n<p>然后需要确定几次，都按y回车即可</p>\n<p>安装mysql扩展包：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install mysql-connector-odbc mysql-devel libdbi-dbd-mysql</span><br></pre></td></tr></table></figure>\n<p>重启对应服务：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service mysqld restart</span><br><span class=\"line\"></span><br><span class=\"line\">service php-fpm start</span><br><span class=\"line\"></span><br><span class=\"line\">service nginx restart</span><br></pre></td></tr></table></figure>\n<p>初次安装mysql是没有密码的,我们要设置密码，mysql的默认账户为root</p>\n<p>设置 MySQL 数据 root 账户的密码：</p>\n<p>命令：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql_secure_installation</span><br></pre></td></tr></table></figure>\n<p>当出现如下提示时候直接按回车：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Enter current password <span class=\"keyword\">for</span> root</span><br></pre></td></tr></table></figure>\n<p>出现如下再次回车：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Set root password? [Y/n]</span><br></pre></td></tr></table></figure>\n<p>出现如下提示输入你需要设置的密码，这里输入了root,输入密码是不显示的，回车后再输入一次确认：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Remove anonymous users? [Y/n]</span><br><span class=\"line\">Disallow root login remotely? [Y/n]</span><br><span class=\"line\">Remove test database <span class=\"keyword\">and</span> access to it? [Y/n]</span><br><span class=\"line\">Reload privilege tables now? [Y/n]</span><br></pre></td></tr></table></figure>\n<p>以上的教程都是搭建完成以后写的，如果存在问题，还请指出。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>1,.安装Nginx</p>\n<p>添加CentOS 7 Nginx yum资源库</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -Uvh http:<span class=\"comment\">//nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm</span></span><br></pre></td></tr></table></figure>\n<p>安装：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install nginx</span><br></pre></td></tr></table></figure>\n<p>启动：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl start nginx.service</span><br></pre></td></tr></table></figure>\n<p>设置开机启动：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl enable nginx.service</span><br></pre></td></tr></table></figure>\n<p>nginx配置：</p>\n<p>默认配置文件在 /etc/nginx/conf.d/default.conf</p>\n<p>我们只需要复制一份配置文件来实现根据域名来访问不同的目录</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp <span class=\"keyword\">default</span>.conf beeasy.conf</span><br></pre></td></tr></table></figure>\n<p>然后beeasy.conf的配置如下：<br><img src=\"https://i.imgur.com/Bbs4OzM.png\"></p>\n<p>server_name 即配置的访问域名</p>\n<p>root 后面即为访问该域名的根目录</p>\n<p>该配置解决了在WordPress框架下修改固定链接后除首页其他页面404的问题。</p>\n<p>重启nginx：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart nginx.service</span><br></pre></td></tr></table></figure>\n<p>2.安装php7.0</p>\n<p>添加CentOS 7 php7 yum资源库</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -Uvh https:<span class=\"comment\">//dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span></span><br><span class=\"line\">rpm -Uvh https:<span class=\"comment\">//mirror.webtatic.com/yum/el7/webtatic-release.rpm</span></span><br></pre></td></tr></table></figure>\n<p>安装：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install php70w php70w-opcache</span><br><span class=\"line\">yum install php70w-fpm php70w-opcache</span><br><span class=\"line\">yum install php70w-mysql</span><br></pre></td></tr></table></figure>\n<p>你也可以安装一些其他扩展：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install yum-plugin-replace</span><br><span class=\"line\">yum replace php-common --replace-with=php70w-common</span><br></pre></td></tr></table></figure>\n<p>还包涵一些其他的扩展包，可以根据需求安装：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php70w-dba，php70w-devel，php70w-embedded，php70w-enchant，php70w-gd，php70w-pdo等。。</span><br></pre></td></tr></table></figure>\n<p>可参考<a href=\"https://webtatic.com/packages/php70/\">https://webtatic.com/packages/php70/</a></p>\n<p>3.安装mysql</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install mysql</span><br></pre></td></tr></table></figure>\n<p>安装mysql-server</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install mysql-server</span><br></pre></td></tr></table></figure>\n<p>虽然可能会报错，但是不要慌</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http:<span class=\"comment\">//dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm</span></span><br><span class=\"line\"></span><br><span class=\"line\">rpm -ivh mysql-community-release-el7-<span class=\"number\">5</span>.noarch.rpm</span><br><span class=\"line\"></span><br><span class=\"line\">yum install mysql-community-server</span><br></pre></td></tr></table></figure>\n<p>然后需要确定几次，都按y回车即可</p>\n<p>安装mysql扩展包：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install mysql-connector-odbc mysql-devel libdbi-dbd-mysql</span><br></pre></td></tr></table></figure>\n<p>重启对应服务：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service mysqld restart</span><br><span class=\"line\"></span><br><span class=\"line\">service php-fpm start</span><br><span class=\"line\"></span><br><span class=\"line\">service nginx restart</span><br></pre></td></tr></table></figure>\n<p>初次安装mysql是没有密码的,我们要设置密码，mysql的默认账户为root</p>\n<p>设置 MySQL 数据 root 账户的密码：</p>\n<p>命令：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql_secure_installation</span><br></pre></td></tr></table></figure>\n<p>当出现如下提示时候直接按回车：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Enter current password <span class=\"keyword\">for</span> root</span><br></pre></td></tr></table></figure>\n<p>出现如下再次回车：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Set root password? [Y/n]</span><br></pre></td></tr></table></figure>\n<p>出现如下提示输入你需要设置的密码，这里输入了root,输入密码是不显示的，回车后再输入一次确认：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Remove anonymous users? [Y/n]</span><br><span class=\"line\">Disallow root login remotely? [Y/n]</span><br><span class=\"line\">Remove test database <span class=\"keyword\">and</span> access to it? [Y/n]</span><br><span class=\"line\">Reload privilege tables now? [Y/n]</span><br></pre></td></tr></table></figure>\n<p>以上的教程都是搭建完成以后写的，如果存在问题，还请指出。</p>\n"},{"title":"Laravel使用（队列）","date":"2018-05-24T07:49:01.000Z","_content":"**首先是使用队列的原因**\n\n例如\n\n    请求时间比较长，影响用户体验\n    \n    可以通过异步来处理\n    \n    不确定一次执行就能成功\n\n\n**使用**\n\n首先要生成队列表并创建表迁移\n```php\n    php artisan queue:table\n    \n    php artisan migrate\n```\n然后创建需要操作的队列，例如发邮件：\n```php\n    php artisan make:job SendResetEmail\n```\n一下是部分代码可根据个人需求做调整：\n```php\n    class SendResetEmail implements ShouldQueue {\n\tuse Dispatchable, InteractsWithQueue, Queueable, SerializesModels;\n\n\tprotected $email;//队列类的属性只会在本类中调用 所以不需要设置public属性\n\tprotected $name;  //protected 属性即可\n\t/**\n\t * Create a new job instance.\n\t *\n\t * @return void\n\t */\n\tpublic function __construct($email, $name) {//用于传递控制器中的邮箱地址以及其他参数，可以为对象\n\t\t$this->email = $email;\n\t\t$this->name = $name;\n\t}\n\n\t/**\n\t * Execute the job.\n\t *\n\t * @return void\n\t */\n\tpublic function handle() {//获取邮箱地址以及其他参数 调用Mail类进行邮件发送\n\t\t$email = $this->email;\n\t\t$name = $this->name;\n\t\t$token = str_random(random_int(20, 30));\n\t\t$url = \"http://www.test.cn/password/reset?name=$name&token=$token\";\n\t\tCache::put(\"user_$name\", $token, 10); //将token进行缓存\n\t\tMail::send('emails.password', ['name' => $name, 'url' => $url], function ($message) use ($email) {\n\t\t\t$to = $email;\n\t\t\t$message->to($to)->subject('找回密码');\n\t\t});\n\t\treturn true;\n\t}\n\n\tpublic function failed(Exception $exception) {//队列执行失败执行的操作\n\t\treturn false;\n\t}\n    }\n\n```\n调用的时候只需要在控制层使用dispatch方法\n```php\n    use App\\Jobs\\SendResetEmail;\n\t...\n    $result = $this->dispatch(new SendResetEmail($user->EMail, $user->ID));\n```\n当然，在调用前必须开启监听队列：\n```php\nphp artisan queue:\n\n    queue:work 默认只执行一次队列请求, 当请求执行完成后就终止；\n    \n    queue:listen 监听队列请求，只要运行着，就能一直接受请求，除非手动终止；\n    \n    queue:work --daemon同listen一样，不同的是work不需要再次加载框架，直接运行任务，一般推荐使用这个来处理队列监听。\n    \n    注：使用 queue:work --daemon ，当更新代码的时候，需要停止，然后重新启动，这样才能把修改的代码应用上。\n```\n> 那么什么时候使用 queue:listen 什么时候使用 queue:work？\n> Laravel 5.3 的文档已经不写 queue:listen这个指令怎么用了，所以你可以看出来可能官方已经不怎么建议使用 queue:listen了，但是在本地调试的时候要使用 queue:listen，因为 queue:work在启动后，代码修改，queue:work不会再 Load 上下文，但是 queue:listen仍然会重新 Load 新代码。\n\n其余情况全部使用 queue:work吧，因为效率更高。\n\n以下为常用的Artisan命令开启队列监听：\n```php\n    php artisan queue:work --daemon --quiet --queue=default --delay=3 --sleep=3 --tries=3\n```\n--daemon\nsupervisor 中一般要加这个 option，可以节省 CPU 使用。\n\n--quiet\n\n不输出任何内容\n\n--delay=3\n\n一个任务失败后，延迟多长时间后再重试，单位是秒。这个值的设定我个人建议不要太短，因为一个任务失败（比如网络原因），重试时间太短可能会出现连续失败的情况。\n\n--sleep=3\n\n去 Redis 中拿任务的时候，发现没有任务，休息多长时间，单位是秒。这个值的设定要看你的任务是否紧急，如果是那种非常紧急的任务，不能等待太长时间。\n\n--tries=3\n\n定义失败任务最多重试次数。这个值的设定根据任务的重要程度来确定，一般 3 次比较适合。\n\n一些其他心得：\n\n在开发环境我们想测试的时候，可以把 Queue driver 设置成为 sync，这样队列就变成了同步执行，方便调试队列里面的任务。\nJob 里面的 handle 方法是可以注入别的 class 的，就像在 Controller action 里面也可以注入一样。","source":"_posts/Laravel-Queue.md","raw":"---\ntitle: Laravel使用（队列）\ndate: 2018-05-24 15:49:01\ncategories: PHP\ntags:\n\t- laravel\n\t- 队列\n---\n**首先是使用队列的原因**\n\n例如\n\n    请求时间比较长，影响用户体验\n    \n    可以通过异步来处理\n    \n    不确定一次执行就能成功\n\n\n**使用**\n\n首先要生成队列表并创建表迁移\n```php\n    php artisan queue:table\n    \n    php artisan migrate\n```\n然后创建需要操作的队列，例如发邮件：\n```php\n    php artisan make:job SendResetEmail\n```\n一下是部分代码可根据个人需求做调整：\n```php\n    class SendResetEmail implements ShouldQueue {\n\tuse Dispatchable, InteractsWithQueue, Queueable, SerializesModels;\n\n\tprotected $email;//队列类的属性只会在本类中调用 所以不需要设置public属性\n\tprotected $name;  //protected 属性即可\n\t/**\n\t * Create a new job instance.\n\t *\n\t * @return void\n\t */\n\tpublic function __construct($email, $name) {//用于传递控制器中的邮箱地址以及其他参数，可以为对象\n\t\t$this->email = $email;\n\t\t$this->name = $name;\n\t}\n\n\t/**\n\t * Execute the job.\n\t *\n\t * @return void\n\t */\n\tpublic function handle() {//获取邮箱地址以及其他参数 调用Mail类进行邮件发送\n\t\t$email = $this->email;\n\t\t$name = $this->name;\n\t\t$token = str_random(random_int(20, 30));\n\t\t$url = \"http://www.test.cn/password/reset?name=$name&token=$token\";\n\t\tCache::put(\"user_$name\", $token, 10); //将token进行缓存\n\t\tMail::send('emails.password', ['name' => $name, 'url' => $url], function ($message) use ($email) {\n\t\t\t$to = $email;\n\t\t\t$message->to($to)->subject('找回密码');\n\t\t});\n\t\treturn true;\n\t}\n\n\tpublic function failed(Exception $exception) {//队列执行失败执行的操作\n\t\treturn false;\n\t}\n    }\n\n```\n调用的时候只需要在控制层使用dispatch方法\n```php\n    use App\\Jobs\\SendResetEmail;\n\t...\n    $result = $this->dispatch(new SendResetEmail($user->EMail, $user->ID));\n```\n当然，在调用前必须开启监听队列：\n```php\nphp artisan queue:\n\n    queue:work 默认只执行一次队列请求, 当请求执行完成后就终止；\n    \n    queue:listen 监听队列请求，只要运行着，就能一直接受请求，除非手动终止；\n    \n    queue:work --daemon同listen一样，不同的是work不需要再次加载框架，直接运行任务，一般推荐使用这个来处理队列监听。\n    \n    注：使用 queue:work --daemon ，当更新代码的时候，需要停止，然后重新启动，这样才能把修改的代码应用上。\n```\n> 那么什么时候使用 queue:listen 什么时候使用 queue:work？\n> Laravel 5.3 的文档已经不写 queue:listen这个指令怎么用了，所以你可以看出来可能官方已经不怎么建议使用 queue:listen了，但是在本地调试的时候要使用 queue:listen，因为 queue:work在启动后，代码修改，queue:work不会再 Load 上下文，但是 queue:listen仍然会重新 Load 新代码。\n\n其余情况全部使用 queue:work吧，因为效率更高。\n\n以下为常用的Artisan命令开启队列监听：\n```php\n    php artisan queue:work --daemon --quiet --queue=default --delay=3 --sleep=3 --tries=3\n```\n--daemon\nsupervisor 中一般要加这个 option，可以节省 CPU 使用。\n\n--quiet\n\n不输出任何内容\n\n--delay=3\n\n一个任务失败后，延迟多长时间后再重试，单位是秒。这个值的设定我个人建议不要太短，因为一个任务失败（比如网络原因），重试时间太短可能会出现连续失败的情况。\n\n--sleep=3\n\n去 Redis 中拿任务的时候，发现没有任务，休息多长时间，单位是秒。这个值的设定要看你的任务是否紧急，如果是那种非常紧急的任务，不能等待太长时间。\n\n--tries=3\n\n定义失败任务最多重试次数。这个值的设定根据任务的重要程度来确定，一般 3 次比较适合。\n\n一些其他心得：\n\n在开发环境我们想测试的时候，可以把 Queue driver 设置成为 sync，这样队列就变成了同步执行，方便调试队列里面的任务。\nJob 里面的 handle 方法是可以注入别的 class 的，就像在 Controller action 里面也可以注入一样。","slug":"Laravel-Queue","published":1,"updated":"2021-11-25T03:28:13.072Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwn8bfxe000btwnf1yqmgmpn","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p><strong>首先是使用队列的原因</strong></p>\n<p>例如</p>\n<pre><code>请求时间比较长，影响用户体验\n\n可以通过异步来处理\n\n不确定一次执行就能成功\n</code></pre>\n<p><strong>使用</strong></p>\n<p>首先要生成队列表并创建表迁移</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan queue:table</span><br><span class=\"line\"></span><br><span class=\"line\">php artisan migrate</span><br></pre></td></tr></table></figure>\n<p>然后创建需要操作的队列，例如发邮件：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan make:job SendResetEmail</span><br></pre></td></tr></table></figure>\n<p>一下是部分代码可根据个人需求做调整：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SendResetEmail</span> <span class=\"keyword\">implements</span> <span class=\"title\">ShouldQueue</span> </span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Dispatchable</span>, <span class=\"title\">InteractsWithQueue</span>, <span class=\"title\">Queueable</span>, <span class=\"title\">SerializesModels</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"variable\">$email</span>;<span class=\"comment\">//队列类的属性只会在本类中调用 所以不需要设置public属性</span></span><br><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"variable\">$name</span>;  <span class=\"comment\">//protected 属性即可</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Create a new job instance.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> void</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$email</span>, <span class=\"variable\">$name</span></span>) </span>&#123;<span class=\"comment\">//用于传递控制器中的邮箱地址以及其他参数，可以为对象</span></span><br><span class=\"line\">\t<span class=\"keyword\">$this</span>-&gt;email = <span class=\"variable\">$email</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">$this</span>-&gt;name = <span class=\"variable\">$name</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Execute the job.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> void</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handle</span>(<span class=\"params\"></span>) </span>&#123;<span class=\"comment\">//获取邮箱地址以及其他参数 调用Mail类进行邮件发送</span></span><br><span class=\"line\">\t<span class=\"variable\">$email</span> = <span class=\"keyword\">$this</span>-&gt;email;</span><br><span class=\"line\">\t<span class=\"variable\">$name</span> = <span class=\"keyword\">$this</span>-&gt;name;</span><br><span class=\"line\">\t<span class=\"variable\">$token</span> = str_random(random_int(<span class=\"number\">20</span>, <span class=\"number\">30</span>));</span><br><span class=\"line\">\t<span class=\"variable\">$url</span> = <span class=\"string\">&quot;http://www.test.cn/password/reset?name=<span class=\"subst\">$name</span>&amp;token=<span class=\"subst\">$token</span>&quot;</span>;</span><br><span class=\"line\">\tCache::put(<span class=\"string\">&quot;user_<span class=\"subst\">$name</span>&quot;</span>, <span class=\"variable\">$token</span>, <span class=\"number\">10</span>); <span class=\"comment\">//将token进行缓存</span></span><br><span class=\"line\">\tMail::send(<span class=\"string\">&#x27;emails.password&#x27;</span>, [<span class=\"string\">&#x27;name&#x27;</span> =&gt; <span class=\"variable\">$name</span>, <span class=\"string\">&#x27;url&#x27;</span> =&gt; <span class=\"variable\">$url</span>], <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"variable\">$message</span></span>) <span class=\"keyword\">use</span> (<span class=\"params\"><span class=\"variable\">$email</span></span>) </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"variable\">$to</span> = <span class=\"variable\">$email</span>;</span><br><span class=\"line\">\t\t<span class=\"variable\">$message</span>-&gt;to(<span class=\"variable\">$to</span>)-&gt;subject(<span class=\"string\">&#x27;找回密码&#x27;</span>);</span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">failed</span>(<span class=\"params\"><span class=\"built_in\">Exception</span> <span class=\"variable\">$exception</span></span>) </span>&#123;<span class=\"comment\">//队列执行失败执行的操作</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>调用的时候只需要在控制层使用dispatch方法</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"keyword\">use</span> <span class=\"title\">App</span>\\<span class=\"title\">Jobs</span>\\<span class=\"title\">SendResetEmail</span>;</span><br><span class=\"line\">...</span><br><span class=\"line\">   <span class=\"variable\">$result</span> = <span class=\"keyword\">$this</span>-&gt;dispatch(<span class=\"keyword\">new</span> SendResetEmail(<span class=\"variable\">$user</span>-&gt;EMail, <span class=\"variable\">$user</span>-&gt;ID));</span><br></pre></td></tr></table></figure>\n<p>当然，在调用前必须开启监听队列：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan queue:</span><br><span class=\"line\"></span><br><span class=\"line\">    queue:work 默认只执行一次队列请求, 当请求执行完成后就终止；</span><br><span class=\"line\">    </span><br><span class=\"line\">    queue:listen 监听队列请求，只要运行着，就能一直接受请求，除非手动终止；</span><br><span class=\"line\">    </span><br><span class=\"line\">    queue:work --daemon同listen一样，不同的是work不需要再次加载框架，直接运行任务，一般推荐使用这个来处理队列监听。</span><br><span class=\"line\">    </span><br><span class=\"line\">    注：使用 queue:work --daemon ，当更新代码的时候，需要停止，然后重新启动，这样才能把修改的代码应用上。</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>那么什么时候使用 queue:listen 什么时候使用 queue:work？<br>Laravel 5.3 的文档已经不写 queue:listen这个指令怎么用了，所以你可以看出来可能官方已经不怎么建议使用 queue:listen了，但是在本地调试的时候要使用 queue:listen，因为 queue:work在启动后，代码修改，queue:work不会再 Load 上下文，但是 queue:listen仍然会重新 Load 新代码。</p>\n</blockquote>\n<p>其余情况全部使用 queue:work吧，因为效率更高。</p>\n<p>以下为常用的Artisan命令开启队列监听：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan queue:work --daemon --quiet --queue=<span class=\"keyword\">default</span> --delay=<span class=\"number\">3</span> --sleep=<span class=\"number\">3</span> --tries=<span class=\"number\">3</span></span><br></pre></td></tr></table></figure>\n<p>–daemon<br>supervisor 中一般要加这个 option，可以节省 CPU 使用。</p>\n<p>–quiet</p>\n<p>不输出任何内容</p>\n<p>–delay=3</p>\n<p>一个任务失败后，延迟多长时间后再重试，单位是秒。这个值的设定我个人建议不要太短，因为一个任务失败（比如网络原因），重试时间太短可能会出现连续失败的情况。</p>\n<p>–sleep=3</p>\n<p>去 Redis 中拿任务的时候，发现没有任务，休息多长时间，单位是秒。这个值的设定要看你的任务是否紧急，如果是那种非常紧急的任务，不能等待太长时间。</p>\n<p>–tries=3</p>\n<p>定义失败任务最多重试次数。这个值的设定根据任务的重要程度来确定，一般 3 次比较适合。</p>\n<p>一些其他心得：</p>\n<p>在开发环境我们想测试的时候，可以把 Queue driver 设置成为 sync，这样队列就变成了同步执行，方便调试队列里面的任务。<br>Job 里面的 handle 方法是可以注入别的 class 的，就像在 Controller action 里面也可以注入一样。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>首先是使用队列的原因</strong></p>\n<p>例如</p>\n<pre><code>请求时间比较长，影响用户体验\n\n可以通过异步来处理\n\n不确定一次执行就能成功\n</code></pre>\n<p><strong>使用</strong></p>\n<p>首先要生成队列表并创建表迁移</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan queue:table</span><br><span class=\"line\"></span><br><span class=\"line\">php artisan migrate</span><br></pre></td></tr></table></figure>\n<p>然后创建需要操作的队列，例如发邮件：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan make:job SendResetEmail</span><br></pre></td></tr></table></figure>\n<p>一下是部分代码可根据个人需求做调整：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SendResetEmail</span> <span class=\"keyword\">implements</span> <span class=\"title\">ShouldQueue</span> </span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Dispatchable</span>, <span class=\"title\">InteractsWithQueue</span>, <span class=\"title\">Queueable</span>, <span class=\"title\">SerializesModels</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"variable\">$email</span>;<span class=\"comment\">//队列类的属性只会在本类中调用 所以不需要设置public属性</span></span><br><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"variable\">$name</span>;  <span class=\"comment\">//protected 属性即可</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Create a new job instance.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> void</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$email</span>, <span class=\"variable\">$name</span></span>) </span>&#123;<span class=\"comment\">//用于传递控制器中的邮箱地址以及其他参数，可以为对象</span></span><br><span class=\"line\">\t<span class=\"keyword\">$this</span>-&gt;email = <span class=\"variable\">$email</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">$this</span>-&gt;name = <span class=\"variable\">$name</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Execute the job.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> void</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handle</span>(<span class=\"params\"></span>) </span>&#123;<span class=\"comment\">//获取邮箱地址以及其他参数 调用Mail类进行邮件发送</span></span><br><span class=\"line\">\t<span class=\"variable\">$email</span> = <span class=\"keyword\">$this</span>-&gt;email;</span><br><span class=\"line\">\t<span class=\"variable\">$name</span> = <span class=\"keyword\">$this</span>-&gt;name;</span><br><span class=\"line\">\t<span class=\"variable\">$token</span> = str_random(random_int(<span class=\"number\">20</span>, <span class=\"number\">30</span>));</span><br><span class=\"line\">\t<span class=\"variable\">$url</span> = <span class=\"string\">&quot;http://www.test.cn/password/reset?name=<span class=\"subst\">$name</span>&amp;token=<span class=\"subst\">$token</span>&quot;</span>;</span><br><span class=\"line\">\tCache::put(<span class=\"string\">&quot;user_<span class=\"subst\">$name</span>&quot;</span>, <span class=\"variable\">$token</span>, <span class=\"number\">10</span>); <span class=\"comment\">//将token进行缓存</span></span><br><span class=\"line\">\tMail::send(<span class=\"string\">&#x27;emails.password&#x27;</span>, [<span class=\"string\">&#x27;name&#x27;</span> =&gt; <span class=\"variable\">$name</span>, <span class=\"string\">&#x27;url&#x27;</span> =&gt; <span class=\"variable\">$url</span>], <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"variable\">$message</span></span>) <span class=\"keyword\">use</span> (<span class=\"params\"><span class=\"variable\">$email</span></span>) </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"variable\">$to</span> = <span class=\"variable\">$email</span>;</span><br><span class=\"line\">\t\t<span class=\"variable\">$message</span>-&gt;to(<span class=\"variable\">$to</span>)-&gt;subject(<span class=\"string\">&#x27;找回密码&#x27;</span>);</span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">failed</span>(<span class=\"params\"><span class=\"built_in\">Exception</span> <span class=\"variable\">$exception</span></span>) </span>&#123;<span class=\"comment\">//队列执行失败执行的操作</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>调用的时候只需要在控制层使用dispatch方法</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"keyword\">use</span> <span class=\"title\">App</span>\\<span class=\"title\">Jobs</span>\\<span class=\"title\">SendResetEmail</span>;</span><br><span class=\"line\">...</span><br><span class=\"line\">   <span class=\"variable\">$result</span> = <span class=\"keyword\">$this</span>-&gt;dispatch(<span class=\"keyword\">new</span> SendResetEmail(<span class=\"variable\">$user</span>-&gt;EMail, <span class=\"variable\">$user</span>-&gt;ID));</span><br></pre></td></tr></table></figure>\n<p>当然，在调用前必须开启监听队列：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan queue:</span><br><span class=\"line\"></span><br><span class=\"line\">    queue:work 默认只执行一次队列请求, 当请求执行完成后就终止；</span><br><span class=\"line\">    </span><br><span class=\"line\">    queue:listen 监听队列请求，只要运行着，就能一直接受请求，除非手动终止；</span><br><span class=\"line\">    </span><br><span class=\"line\">    queue:work --daemon同listen一样，不同的是work不需要再次加载框架，直接运行任务，一般推荐使用这个来处理队列监听。</span><br><span class=\"line\">    </span><br><span class=\"line\">    注：使用 queue:work --daemon ，当更新代码的时候，需要停止，然后重新启动，这样才能把修改的代码应用上。</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>那么什么时候使用 queue:listen 什么时候使用 queue:work？<br>Laravel 5.3 的文档已经不写 queue:listen这个指令怎么用了，所以你可以看出来可能官方已经不怎么建议使用 queue:listen了，但是在本地调试的时候要使用 queue:listen，因为 queue:work在启动后，代码修改，queue:work不会再 Load 上下文，但是 queue:listen仍然会重新 Load 新代码。</p>\n</blockquote>\n<p>其余情况全部使用 queue:work吧，因为效率更高。</p>\n<p>以下为常用的Artisan命令开启队列监听：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan queue:work --daemon --quiet --queue=<span class=\"keyword\">default</span> --delay=<span class=\"number\">3</span> --sleep=<span class=\"number\">3</span> --tries=<span class=\"number\">3</span></span><br></pre></td></tr></table></figure>\n<p>–daemon<br>supervisor 中一般要加这个 option，可以节省 CPU 使用。</p>\n<p>–quiet</p>\n<p>不输出任何内容</p>\n<p>–delay=3</p>\n<p>一个任务失败后，延迟多长时间后再重试，单位是秒。这个值的设定我个人建议不要太短，因为一个任务失败（比如网络原因），重试时间太短可能会出现连续失败的情况。</p>\n<p>–sleep=3</p>\n<p>去 Redis 中拿任务的时候，发现没有任务，休息多长时间，单位是秒。这个值的设定要看你的任务是否紧急，如果是那种非常紧急的任务，不能等待太长时间。</p>\n<p>–tries=3</p>\n<p>定义失败任务最多重试次数。这个值的设定根据任务的重要程度来确定，一般 3 次比较适合。</p>\n<p>一些其他心得：</p>\n<p>在开发环境我们想测试的时候，可以把 Queue driver 设置成为 sync，这样队列就变成了同步执行，方便调试队列里面的任务。<br>Job 里面的 handle 方法是可以注入别的 class 的，就像在 Controller action 里面也可以注入一样。</p>\n"},{"title":"Laravel使用（事件监听）","date":"2018-05-12T03:46:26.000Z","_content":"---\n**1.事件监听**\n\n有时候我们需要在执行完一步操作后自动执行下一步事件，比如在用户购买商品后增加到购买记录的同时将商品增加到订单表中。\n\n首先需要注册事件/监听器，在`\\app\\Providers\\EventServiceProvider.php`文件中\n```php\n\tprotected $listen = [\n\t\t'SocialiteProviders\\Manager\\SocialiteWasCalled' => [\n\t\t\t'SocialiteProviders\\Weibo\\WeiboExtendSocialite@handle',\n\t\t\t'SocialiteProviders\\QQ\\QqExtendSocialite@handle',\n\t\t],\n\t\t'Illuminate\\Auth\\Events\\Login' => [\n\t\t\t'App\\Listeners\\LoginStoreSession',\n\t\t],\n\t//增加一个订单触发的事件\n\t\t'App\\Event\\Order' => [\n\t\t//这里是事件监听，可以是多个，即一个事件可以对应多个监听器\n\t\t\t'App\\Listeners\\CreateOrder',\n\t\t],\n\t];\n```\n之后执行`php artisan event:generate` 会分别自动在` app/Events`和`app/Listensers`目录下生成 Order.php和CreateOrder.php文件。\nOrder.php文件中是定义变量与监听器进行变量传递的过程，其中变量可以是表单数据，也可以是自带的数据参数，我们这里自定义一个$data数组用于将数据写入写入订单\n```php\n    class Order {\n    \tuse Dispatchable, InteractsWithSockets, SerializesModels;\n    \n    \tpublic function __construct($data) {\n    \t\t$this->data = $data;\n    \t}\n    \n    \t/**\n    \t * Get the channels the event should broadcast on.\n    \t *\n    \t * @return \\Illuminate\\Broadcasting\\Channel|array\n    \t */\n    \tpublic function broadcastOn() {\n    \t\treturn new PrivateChannel('channel-name');\n    \t}\n    }\n```\n然后去`app\\Listeners`目录CreateOrder.php文件中创建各种要做的事件监听类。\n```php\n\t/**\n\t * Create the event listener.\n\t *\n\t * @return void\n\t */\n\tpublic function __construct() {\n\t\t//\n\t}\n\n\t/**\n\t * Handle the event.\n\t *\n\t * @param  Order  $event\n\t * @return void\n\t */\n\tpublic function handle(Order $event) {\n\t\t$data = $event->data;\n\t\tDB::table('orders')->insert($data);\n\t}\n```\n监听器在handle方法中接收事件的实例，你可以获取到Order实例中的所有属性以及使用。我们这里是直接将$data数据直接从实例Order中拿到并使用。\n\n那么事件与监听器都设置好了，接下来就是如何触发事件即监听：\n```php\n    use App\\Event\\Order;//使用到的事件\n    \n    DB::table('purchase_records')->insert($data);//这是将数据加入购买记录\n\tEvent::fire(new Order($data));//增加成功后触发事件Order同时带上数据$data\n\n```\n当然，你也可以使用助手函数来增加触发事件：\n```php\n    event(new Order($data));\n\n```","source":"_posts/Laravel-Event.md","raw":"---\ntitle: Laravel使用（事件监听）\ndate: 2018-05-12 11:46:26\ncategories: PHP\ntags:\n\t- laravel\n\t- 事件监听\n---\n---\n**1.事件监听**\n\n有时候我们需要在执行完一步操作后自动执行下一步事件，比如在用户购买商品后增加到购买记录的同时将商品增加到订单表中。\n\n首先需要注册事件/监听器，在`\\app\\Providers\\EventServiceProvider.php`文件中\n```php\n\tprotected $listen = [\n\t\t'SocialiteProviders\\Manager\\SocialiteWasCalled' => [\n\t\t\t'SocialiteProviders\\Weibo\\WeiboExtendSocialite@handle',\n\t\t\t'SocialiteProviders\\QQ\\QqExtendSocialite@handle',\n\t\t],\n\t\t'Illuminate\\Auth\\Events\\Login' => [\n\t\t\t'App\\Listeners\\LoginStoreSession',\n\t\t],\n\t//增加一个订单触发的事件\n\t\t'App\\Event\\Order' => [\n\t\t//这里是事件监听，可以是多个，即一个事件可以对应多个监听器\n\t\t\t'App\\Listeners\\CreateOrder',\n\t\t],\n\t];\n```\n之后执行`php artisan event:generate` 会分别自动在` app/Events`和`app/Listensers`目录下生成 Order.php和CreateOrder.php文件。\nOrder.php文件中是定义变量与监听器进行变量传递的过程，其中变量可以是表单数据，也可以是自带的数据参数，我们这里自定义一个$data数组用于将数据写入写入订单\n```php\n    class Order {\n    \tuse Dispatchable, InteractsWithSockets, SerializesModels;\n    \n    \tpublic function __construct($data) {\n    \t\t$this->data = $data;\n    \t}\n    \n    \t/**\n    \t * Get the channels the event should broadcast on.\n    \t *\n    \t * @return \\Illuminate\\Broadcasting\\Channel|array\n    \t */\n    \tpublic function broadcastOn() {\n    \t\treturn new PrivateChannel('channel-name');\n    \t}\n    }\n```\n然后去`app\\Listeners`目录CreateOrder.php文件中创建各种要做的事件监听类。\n```php\n\t/**\n\t * Create the event listener.\n\t *\n\t * @return void\n\t */\n\tpublic function __construct() {\n\t\t//\n\t}\n\n\t/**\n\t * Handle the event.\n\t *\n\t * @param  Order  $event\n\t * @return void\n\t */\n\tpublic function handle(Order $event) {\n\t\t$data = $event->data;\n\t\tDB::table('orders')->insert($data);\n\t}\n```\n监听器在handle方法中接收事件的实例，你可以获取到Order实例中的所有属性以及使用。我们这里是直接将$data数据直接从实例Order中拿到并使用。\n\n那么事件与监听器都设置好了，接下来就是如何触发事件即监听：\n```php\n    use App\\Event\\Order;//使用到的事件\n    \n    DB::table('purchase_records')->insert($data);//这是将数据加入购买记录\n\tEvent::fire(new Order($data));//增加成功后触发事件Order同时带上数据$data\n\n```\n当然，你也可以使用助手函数来增加触发事件：\n```php\n    event(new Order($data));\n\n```","slug":"Laravel-Event","published":1,"updated":"2021-11-25T03:28:13.071Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwn8bfxg000gtwnf5dx76hk1","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><hr>\n<p><strong>1.事件监听</strong></p>\n<p>有时候我们需要在执行完一步操作后自动执行下一步事件，比如在用户购买商品后增加到购买记录的同时将商品增加到订单表中。</p>\n<p>首先需要注册事件/监听器，在<code>\\app\\Providers\\EventServiceProvider.php</code>文件中</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"variable\">$listen</span> = [</span><br><span class=\"line\">\t<span class=\"string\">&#x27;SocialiteProviders\\Manager\\SocialiteWasCalled&#x27;</span> =&gt; [</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;SocialiteProviders\\Weibo\\WeiboExtendSocialite@handle&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;SocialiteProviders\\QQ\\QqExtendSocialite@handle&#x27;</span>,</span><br><span class=\"line\">\t],</span><br><span class=\"line\">\t<span class=\"string\">&#x27;Illuminate\\Auth\\Events\\Login&#x27;</span> =&gt; [</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;App\\Listeners\\LoginStoreSession&#x27;</span>,</span><br><span class=\"line\">\t],</span><br><span class=\"line\"><span class=\"comment\">//增加一个订单触发的事件</span></span><br><span class=\"line\">\t<span class=\"string\">&#x27;App\\Event\\Order&#x27;</span> =&gt; [</span><br><span class=\"line\">\t<span class=\"comment\">//这里是事件监听，可以是多个，即一个事件可以对应多个监听器</span></span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;App\\Listeners\\CreateOrder&#x27;</span>,</span><br><span class=\"line\">\t],</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n<p>之后执行<code>php artisan event:generate</code> 会分别自动在<code> app/Events</code>和<code>app/Listensers</code>目录下生成 Order.php和CreateOrder.php文件。<br>Order.php文件中是定义变量与监听器进行变量传递的过程，其中变量可以是表单数据，也可以是自带的数据参数，我们这里自定义一个$data数组用于将数据写入写入订单</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Order</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">use</span> <span class=\"title\">Dispatchable</span>, <span class=\"title\">InteractsWithSockets</span>, <span class=\"title\">SerializesModels</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$data</span></span>) </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">$this</span>-&gt;data = <span class=\"variable\">$data</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * Get the channels the event should broadcast on.</span></span><br><span class=\"line\"><span class=\"comment\">\t *</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> \\Illuminate\\Broadcasting\\Channel|array</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">broadcastOn</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> PrivateChannel(<span class=\"string\">&#x27;channel-name&#x27;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后去<code>app\\Listeners</code>目录CreateOrder.php文件中创建各种要做的事件监听类。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Create the event listener.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> void</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Handle the event.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span>  Order  $event</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> void</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handle</span>(<span class=\"params\">Order <span class=\"variable\">$event</span></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"variable\">$data</span> = <span class=\"variable\">$event</span>-&gt;data;</span><br><span class=\"line\">\tDB::table(<span class=\"string\">&#x27;orders&#x27;</span>)-&gt;insert(<span class=\"variable\">$data</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>监听器在handle方法中接收事件的实例，你可以获取到Order实例中的所有属性以及使用。我们这里是直接将$data数据直接从实例Order中拿到并使用。</p>\n<p>那么事件与监听器都设置好了，接下来就是如何触发事件即监听：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"keyword\">use</span> <span class=\"title\">App</span>\\<span class=\"title\">Event</span>\\<span class=\"title\">Order</span>;<span class=\"comment\">//使用到的事件</span></span><br><span class=\"line\">   </span><br><span class=\"line\">   DB::table(<span class=\"string\">&#x27;purchase_records&#x27;</span>)-&gt;insert(<span class=\"variable\">$data</span>);<span class=\"comment\">//这是将数据加入购买记录</span></span><br><span class=\"line\">Event::fire(<span class=\"keyword\">new</span> Order(<span class=\"variable\">$data</span>));<span class=\"comment\">//增加成功后触发事件Order同时带上数据$data</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>当然，你也可以使用助手函数来增加触发事件：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">event(<span class=\"keyword\">new</span> Order(<span class=\"variable\">$data</span>));</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<hr>\n<p><strong>1.事件监听</strong></p>\n<p>有时候我们需要在执行完一步操作后自动执行下一步事件，比如在用户购买商品后增加到购买记录的同时将商品增加到订单表中。</p>\n<p>首先需要注册事件/监听器，在<code>\\app\\Providers\\EventServiceProvider.php</code>文件中</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"variable\">$listen</span> = [</span><br><span class=\"line\">\t<span class=\"string\">&#x27;SocialiteProviders\\Manager\\SocialiteWasCalled&#x27;</span> =&gt; [</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;SocialiteProviders\\Weibo\\WeiboExtendSocialite@handle&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;SocialiteProviders\\QQ\\QqExtendSocialite@handle&#x27;</span>,</span><br><span class=\"line\">\t],</span><br><span class=\"line\">\t<span class=\"string\">&#x27;Illuminate\\Auth\\Events\\Login&#x27;</span> =&gt; [</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;App\\Listeners\\LoginStoreSession&#x27;</span>,</span><br><span class=\"line\">\t],</span><br><span class=\"line\"><span class=\"comment\">//增加一个订单触发的事件</span></span><br><span class=\"line\">\t<span class=\"string\">&#x27;App\\Event\\Order&#x27;</span> =&gt; [</span><br><span class=\"line\">\t<span class=\"comment\">//这里是事件监听，可以是多个，即一个事件可以对应多个监听器</span></span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;App\\Listeners\\CreateOrder&#x27;</span>,</span><br><span class=\"line\">\t],</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n<p>之后执行<code>php artisan event:generate</code> 会分别自动在<code> app/Events</code>和<code>app/Listensers</code>目录下生成 Order.php和CreateOrder.php文件。<br>Order.php文件中是定义变量与监听器进行变量传递的过程，其中变量可以是表单数据，也可以是自带的数据参数，我们这里自定义一个$data数组用于将数据写入写入订单</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Order</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">use</span> <span class=\"title\">Dispatchable</span>, <span class=\"title\">InteractsWithSockets</span>, <span class=\"title\">SerializesModels</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$data</span></span>) </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">$this</span>-&gt;data = <span class=\"variable\">$data</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * Get the channels the event should broadcast on.</span></span><br><span class=\"line\"><span class=\"comment\">\t *</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> \\Illuminate\\Broadcasting\\Channel|array</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">broadcastOn</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> PrivateChannel(<span class=\"string\">&#x27;channel-name&#x27;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后去<code>app\\Listeners</code>目录CreateOrder.php文件中创建各种要做的事件监听类。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Create the event listener.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> void</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Handle the event.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span>  Order  $event</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> void</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handle</span>(<span class=\"params\">Order <span class=\"variable\">$event</span></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"variable\">$data</span> = <span class=\"variable\">$event</span>-&gt;data;</span><br><span class=\"line\">\tDB::table(<span class=\"string\">&#x27;orders&#x27;</span>)-&gt;insert(<span class=\"variable\">$data</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>监听器在handle方法中接收事件的实例，你可以获取到Order实例中的所有属性以及使用。我们这里是直接将$data数据直接从实例Order中拿到并使用。</p>\n<p>那么事件与监听器都设置好了，接下来就是如何触发事件即监听：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"keyword\">use</span> <span class=\"title\">App</span>\\<span class=\"title\">Event</span>\\<span class=\"title\">Order</span>;<span class=\"comment\">//使用到的事件</span></span><br><span class=\"line\">   </span><br><span class=\"line\">   DB::table(<span class=\"string\">&#x27;purchase_records&#x27;</span>)-&gt;insert(<span class=\"variable\">$data</span>);<span class=\"comment\">//这是将数据加入购买记录</span></span><br><span class=\"line\">Event::fire(<span class=\"keyword\">new</span> Order(<span class=\"variable\">$data</span>));<span class=\"comment\">//增加成功后触发事件Order同时带上数据$data</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>当然，你也可以使用助手函数来增加触发事件：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">event(<span class=\"keyword\">new</span> Order(<span class=\"variable\">$data</span>));</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"Laravel使用（UEditor,表单验证）","date":"2018-03-23T06:54:40.000Z","_content":"1.富文本编辑器（UEditor）\nlaravel的依赖管理工具composer中可以快速的帮助我们集成ueditor到框架中，配置过程：\n\n在laravel项目根目录配置composer.json文件，在require中写入：\n```php\n    \"stevenyangecho/laravel-u-editor\": \"~1.4\"\n```\n然后在cmd模式下输入：composer update （需要将composer配置为全局变量）\n```php\n    PS E:\\wamp\\www\\blog> composer update\n    Loading composer repositories with package information\n    Updating dependencies (including require-dev)\n    Package operations: 3 installs, 31 updates, 0 removals\n     - Updating symfony/polyfill-mbstring (v1.6.0 => v1.7.0): Downloading (100%)\n     - Updating symfony/var-dumper (v3.3.13 => v3.4.6): Downloading (100%)\n     - Updating symfony/debug (v3.3.13 => v3.4.6): Downloading (100%)\n    .......//省略部分内容\n    Package manifest generated successfully.\n```\n更新完成之后，修改laravel的配置文件（config/app.php）:\n\n在 \"providers\" 这个key 最后加上 ：\n```php\n    Stevenyangecho\\UEditor\\UEditorServiceProvider::class\n```\n在\"aliases\" 这个key最后加上：\n```php\n    'UEditor'=>Stevenyangecho\\UEditor\\UEditorServiceProvider::class\n```\n配置完之后，命令提示符进入项目的根目录：\n```php\n    PS E:\\wamp\\www> cd blog\n    PS E:\\wamp\\www\\blog> php artisan vendor:publish\n    \n    \n      [Symfony\\Component\\Debug\\Exception\\FatalThrowableError]\n      Class 'Stevenyangecho\\UEditor\\UEditorServiceProvider' not found\n```\n提示以上的错误要确定之前的步骤是否正确：\n```php\n    PS E:\\wamp\\www\\blog> php artisan vendor:publish\n    \n     Which provider or tag's files would you like to publish?:\n      [0 ] Publish files from all providers and tags listed below\n    .......\n     > 0//输入0\n    \n    .......\n    Publishing complete.\n```\n出现以上信息说明已经配置完成。\n\n一串文件下载配置之后，laravel项目的public目录下会自动建立一个laravel-u-editor的文件夹。这个文件夹里包含的是编辑器本身的JS文件。同时在config文件夹下也会生成一个名为UEditorUpload.php的文件，这个是基础的配置文件。当这些文件都生成之后，说明编辑器已经在项目中集成好了，下一步就可以在视图文件中进行注入了\n\n前端视图中整合ue编辑器：\n\n首先引入JS等文件，因为laravel框架已经帮我们集成好了，直接在视图文件尾部加入\n```php\n@include('UEditor::head') 即可\n```\n然后加载编辑器的容器，最后实例化编辑器，这部分比较简单，直接贴代码：\n\n 加载编辑器的容器 \n```php\n    <div id=\"detail_info\">\n    <script id=\"container\" name=\"content\" type=\"text/plain\" style=\"width: 900px;position:absolute;left:300px;top:120px;\">\n    {!! html_entity_decode($article->content) !!} //将富文本编辑器内容转义并在页面上显示\n    </script>\n```\n    \n 实例化编辑器 \n```php\n    <script>\n    \n    var ue = UE.getEditor('container');\n    ue.ready(function(){ \n    ue.execCommand('serverparam', '_token', '{{ csrf_token() }}'); //这里添加laravel安全token：便于数据提交\n    });\n    </script>\n```\n**UEditor增加视频上传**\nUEditor安装好了之后并没有很好的支持插入视频，即便插入视频之后还是显示空白。\n\n查阅了网上相关资料后，可以用一下方法实现视频上传：\n修改ueditor.all.js文件（Laravel项目在public\\laravel-u-editor下）\n\nueditor.all.js，17769行\n\nhtml.push(creatInsertStr( vi.url, vi.width || 420,  vi.height || 280, id + i, null, cl, 'image'));修改为\n\nhtml.push(creatInsertStr( vi.url, vi.width || 420,  vi.height || 280, id + i, null, cl, 'video'));\n\n7343,7344,7346行，注释掉代码：\n\nvar root = UE.htmlparser(html);\n\nme.filterInputRule(root);\n\nhtml = root.toHtml();\n\n然后清除一下缓存，刷新页面即可添加视频。\n\n![](https://i.imgur.com/yhHVRiN.png)\n\n视频无法预览，但是仍可改变布局和大小。\n\n看到有些博客写将whitList修改为whiteList，好像并没有什么效果。。\n\n**Ueditor图片上传**\n\n在laravel中使用ueditor上传图片依旧会出现上传错误的提示，按F12可以看到：\n\n![](https://i.imgur.com/AREcTBq.png)\n\n说明是一个图片上传的请求地址，原因可能出在上传的图片的保存路径。打开Ueditor扩展包的配置文件`config/UEditorUpload.php`：\n\n    /* 上传图片配置项 */\n    'upload' => [\n        \"imageActionName\" => \"uploadimage\", /* 执行上传图片的action名称 */\n        \"imageFieldName\" => \"upfile\", /* 提交的图片表单名称 */\n        \"imageMaxSize\" => 2048000, /* 上传大小限制，单位B */\n        \"imageAllowFiles\" => [\".png\", \".jpg\", \".jpeg\", \".gif\", \".bmp\"], /* 上传图片格式显示 */\n        \"imageCompressEnable\" => true, /* 是否压缩图片,默认是true */\n        \"imageCompressBorder\" => 1600, /* 图片压缩最长边限制 */\n        \"imageInsertAlign\" => \"none\", /* 插入的图片浮动方式 */\n        \"imageUrlPrefix\" => \"\", /* 图片访问路径前缀 */\n        \"imagePathFormat\" => \"/uploads/ueditor/image/{yyyy}{mm}{dd}/{time}{rand:6}\", /* 上传保存路径,可以自定义保存路径和文件名格式 */\n\n将imagePathFormat改为图片保存的目录。Linux系统需要注意权限问题。修改之后重新选择图片本地上传，还是会出现以下问题：\n\n![](https://i.imgur.com/hhv7yHL.jpg)\n\n在这个Upload.php中rand 第二个参数太长导致的，然后找到这个文件，路径：`vendor\\stevenyangecho\\laravel-u-editor\\src\\Uploader`下面。然后找到131行，发现：\n`$randNum = rand(1, 10000000000) . rand(1, 10000000000);`  更改成\n    $randNum = rand(1, 1000000) . rand(1, 1000000);\n修改之后上传的问题解决了。Linux系统下还是需要注意文件的路径问题以及权限问题。\n\n**Ueditor图片左右浮动**\n\n\n```php\n    ,xssFilterRules: true\n    //input xss过滤\n    ,inputXssFilter: true\n    //output xss过滤\n    ,outputXssFilter: true\n```\n然后设置元素的白名单过滤：\n```php\n    ,whitList: {\n    ...\n    img: [..., 'style'],\n    ...\n    }\n```\n使img的style属性忽略。\n\n2.表单验证\n直接上代码：\n```php\n\tpublic function store(Request $request) {\n\t\t$data = $request->except('_token');//获取除token外的所有表单数据\n\t\t$this->validate($request, [//验证表单值\n\t\t\t'title' => 'requred',//设置title为必填\n\t\t\t'content' => 'integer',//设置content整数\n\n\t\t], [\n\t\t\t'required' => ':attribute 为必填项',//自定义提示文字，默认为英文\n\t\t\t'min' => ':attribute 长度不符合要求',\n\t\t\t'integer' => ':attribute 必须为整数',\n\t\t], [\n\t\t\t'title' => '标题',//设置表单字段表示的含义\n\t\t\t'content' => '内容',\n\t\t]);//当验证未通过则自动返回表单页面，不会执行以下内容\n\t\t$result = DB::table('news')\n\t\t\t->insert($data);//数据插入\n\t\tif ($result) {\n\t\t\treturn redirect()->back()->with('msg', '操作成功');//插入成功，返回添加页\n\t\t} else {\n\t\t\treturn redirect()->back()->with('msg', '操作失败')->withInput();//插入失败，返回添加页并提示错误，将原表单数据返回\n\t\t}\n\t}\n```\n在页面上显示提示：\n```php\n                                    @if (count($errors) > 0)//$errors 变量在每次请求的所有视图中都可以被使用，你可以很方便的假设 $errors 变量已被定义且进行安全地使用。\n                                      <div class=\"alert alert-danger\">//验证未通过则返回错误信息\n                                        <ul>\n                                          @foreach ($errors->all() as $error)\n                                            <li>{{ $error }}</li>\n                                          @endforeach\n                                        </ul>\n                                      </div>\n                                    @endif\n\n                                    <fieldset>\n                                        <div class=\"form-group\">\n                                            <label class=\"col-sm-2 control-label\">资讯标题</label>\n                                          {{session('success')}}//此处返回表单验证通过后闪存中session的信息\n                                            <div class=\"col-sm-6\">\n                                                <input value=\"{{old('title')}}\" class=\"form-control\" id=\"title\" type=\"text\" name=\"title\"  style=\"width:40%;\"/>\n                                            </div>\n                                        </div>\n```\n3.数据筛选和分页\n```php\n    \tpublic function index(Request $request) {\n    \t\tif ($request->input('category_id')) {//判断是否带有分类id\n    \t\t\t$category_id = $request->input('category_id');//获取分类id\n    \t\t\tif ($category_id == 'all') {//判断是否是所有分类\n    \t\t\t\t$news = DB::table('news')\n    \t\t\t\t\t->select('id', 'title', 'category_id', 'addtime')\n    \t\t\t\t\t->orderBy(\"id\", \"desc\")\n    \t\t\t\t\t->paginate(10);\n    \t\t\t} else {//否则执行where查询单个分类\n    \t\t\t\t$news = DB::table('news')\n    \t\t\t\t\t->select('id', 'title', 'category_id', 'addtime')\n    \t\t\t\t\t->where('category_id', $category_id)\n    \t\t\t\t\t->orderBy(\"id\", \"desc\")\n    \t\t\t\t\t->paginate(10);\n    \t\t\t}\n    \t\t} else {//不带分类id则默认加上，方便在分页里调用\n    \t\t\t$news = DB::table('news')\n    \t\t\t\t->select('id', 'title', 'category_id', 'addtime')\n    \t\t\t\t->orderBy(\"id\", \"desc\")\n    \t\t\t\t->paginate(10);\n    \t\t\t$category_id = 'all';\n    \t\t}\n    \n    \t\t$category = DB::table('category')\n    \t\t\t->get();\n    \t\t$assign = array(\n    \t\t\t'news' => $news,\n    \t\t\t'category' => $category,\n    \t\t\t'category_id' => $category_id,//用于记住分类id\n    \t\t);\n    \t\treturn view('admin.news.index', $assign);\n    \t}\n```\n重点在于：\n\n默认的分页展示写法是这样的：\n```php\n      {!! $news->links() !!}\n```\n那么当分页筛选成功后，点击下一页则无法按照条件筛选，因为category_id没有存入到分页的url。我们需要将分类id加入到分页url中才能记住用户选择的分类id：\n```php\n      {!! $news->appends(array('category_id'=>$category_id))->links() !!}\n```\n那么生成的分页url是这样的：\n```php\n    http://www.blog.com/admin/news/index?category_id=1&page=2\n```\n就能记住用户选择的分类id进行where条件筛选。\n\n","source":"_posts/Laravel-UEditor-form.md","raw":"---\ntitle: Laravel使用（UEditor,表单验证）\ndate: 2018-03-23 14:54:40\ncategories: PHP\ntags:\n\t- laravel\n\t- UEditor\n\t- 表单验证\n---\n1.富文本编辑器（UEditor）\nlaravel的依赖管理工具composer中可以快速的帮助我们集成ueditor到框架中，配置过程：\n\n在laravel项目根目录配置composer.json文件，在require中写入：\n```php\n    \"stevenyangecho/laravel-u-editor\": \"~1.4\"\n```\n然后在cmd模式下输入：composer update （需要将composer配置为全局变量）\n```php\n    PS E:\\wamp\\www\\blog> composer update\n    Loading composer repositories with package information\n    Updating dependencies (including require-dev)\n    Package operations: 3 installs, 31 updates, 0 removals\n     - Updating symfony/polyfill-mbstring (v1.6.0 => v1.7.0): Downloading (100%)\n     - Updating symfony/var-dumper (v3.3.13 => v3.4.6): Downloading (100%)\n     - Updating symfony/debug (v3.3.13 => v3.4.6): Downloading (100%)\n    .......//省略部分内容\n    Package manifest generated successfully.\n```\n更新完成之后，修改laravel的配置文件（config/app.php）:\n\n在 \"providers\" 这个key 最后加上 ：\n```php\n    Stevenyangecho\\UEditor\\UEditorServiceProvider::class\n```\n在\"aliases\" 这个key最后加上：\n```php\n    'UEditor'=>Stevenyangecho\\UEditor\\UEditorServiceProvider::class\n```\n配置完之后，命令提示符进入项目的根目录：\n```php\n    PS E:\\wamp\\www> cd blog\n    PS E:\\wamp\\www\\blog> php artisan vendor:publish\n    \n    \n      [Symfony\\Component\\Debug\\Exception\\FatalThrowableError]\n      Class 'Stevenyangecho\\UEditor\\UEditorServiceProvider' not found\n```\n提示以上的错误要确定之前的步骤是否正确：\n```php\n    PS E:\\wamp\\www\\blog> php artisan vendor:publish\n    \n     Which provider or tag's files would you like to publish?:\n      [0 ] Publish files from all providers and tags listed below\n    .......\n     > 0//输入0\n    \n    .......\n    Publishing complete.\n```\n出现以上信息说明已经配置完成。\n\n一串文件下载配置之后，laravel项目的public目录下会自动建立一个laravel-u-editor的文件夹。这个文件夹里包含的是编辑器本身的JS文件。同时在config文件夹下也会生成一个名为UEditorUpload.php的文件，这个是基础的配置文件。当这些文件都生成之后，说明编辑器已经在项目中集成好了，下一步就可以在视图文件中进行注入了\n\n前端视图中整合ue编辑器：\n\n首先引入JS等文件，因为laravel框架已经帮我们集成好了，直接在视图文件尾部加入\n```php\n@include('UEditor::head') 即可\n```\n然后加载编辑器的容器，最后实例化编辑器，这部分比较简单，直接贴代码：\n\n 加载编辑器的容器 \n```php\n    <div id=\"detail_info\">\n    <script id=\"container\" name=\"content\" type=\"text/plain\" style=\"width: 900px;position:absolute;left:300px;top:120px;\">\n    {!! html_entity_decode($article->content) !!} //将富文本编辑器内容转义并在页面上显示\n    </script>\n```\n    \n 实例化编辑器 \n```php\n    <script>\n    \n    var ue = UE.getEditor('container');\n    ue.ready(function(){ \n    ue.execCommand('serverparam', '_token', '{{ csrf_token() }}'); //这里添加laravel安全token：便于数据提交\n    });\n    </script>\n```\n**UEditor增加视频上传**\nUEditor安装好了之后并没有很好的支持插入视频，即便插入视频之后还是显示空白。\n\n查阅了网上相关资料后，可以用一下方法实现视频上传：\n修改ueditor.all.js文件（Laravel项目在public\\laravel-u-editor下）\n\nueditor.all.js，17769行\n\nhtml.push(creatInsertStr( vi.url, vi.width || 420,  vi.height || 280, id + i, null, cl, 'image'));修改为\n\nhtml.push(creatInsertStr( vi.url, vi.width || 420,  vi.height || 280, id + i, null, cl, 'video'));\n\n7343,7344,7346行，注释掉代码：\n\nvar root = UE.htmlparser(html);\n\nme.filterInputRule(root);\n\nhtml = root.toHtml();\n\n然后清除一下缓存，刷新页面即可添加视频。\n\n![](https://i.imgur.com/yhHVRiN.png)\n\n视频无法预览，但是仍可改变布局和大小。\n\n看到有些博客写将whitList修改为whiteList，好像并没有什么效果。。\n\n**Ueditor图片上传**\n\n在laravel中使用ueditor上传图片依旧会出现上传错误的提示，按F12可以看到：\n\n![](https://i.imgur.com/AREcTBq.png)\n\n说明是一个图片上传的请求地址，原因可能出在上传的图片的保存路径。打开Ueditor扩展包的配置文件`config/UEditorUpload.php`：\n\n    /* 上传图片配置项 */\n    'upload' => [\n        \"imageActionName\" => \"uploadimage\", /* 执行上传图片的action名称 */\n        \"imageFieldName\" => \"upfile\", /* 提交的图片表单名称 */\n        \"imageMaxSize\" => 2048000, /* 上传大小限制，单位B */\n        \"imageAllowFiles\" => [\".png\", \".jpg\", \".jpeg\", \".gif\", \".bmp\"], /* 上传图片格式显示 */\n        \"imageCompressEnable\" => true, /* 是否压缩图片,默认是true */\n        \"imageCompressBorder\" => 1600, /* 图片压缩最长边限制 */\n        \"imageInsertAlign\" => \"none\", /* 插入的图片浮动方式 */\n        \"imageUrlPrefix\" => \"\", /* 图片访问路径前缀 */\n        \"imagePathFormat\" => \"/uploads/ueditor/image/{yyyy}{mm}{dd}/{time}{rand:6}\", /* 上传保存路径,可以自定义保存路径和文件名格式 */\n\n将imagePathFormat改为图片保存的目录。Linux系统需要注意权限问题。修改之后重新选择图片本地上传，还是会出现以下问题：\n\n![](https://i.imgur.com/hhv7yHL.jpg)\n\n在这个Upload.php中rand 第二个参数太长导致的，然后找到这个文件，路径：`vendor\\stevenyangecho\\laravel-u-editor\\src\\Uploader`下面。然后找到131行，发现：\n`$randNum = rand(1, 10000000000) . rand(1, 10000000000);`  更改成\n    $randNum = rand(1, 1000000) . rand(1, 1000000);\n修改之后上传的问题解决了。Linux系统下还是需要注意文件的路径问题以及权限问题。\n\n**Ueditor图片左右浮动**\n\n\n```php\n    ,xssFilterRules: true\n    //input xss过滤\n    ,inputXssFilter: true\n    //output xss过滤\n    ,outputXssFilter: true\n```\n然后设置元素的白名单过滤：\n```php\n    ,whitList: {\n    ...\n    img: [..., 'style'],\n    ...\n    }\n```\n使img的style属性忽略。\n\n2.表单验证\n直接上代码：\n```php\n\tpublic function store(Request $request) {\n\t\t$data = $request->except('_token');//获取除token外的所有表单数据\n\t\t$this->validate($request, [//验证表单值\n\t\t\t'title' => 'requred',//设置title为必填\n\t\t\t'content' => 'integer',//设置content整数\n\n\t\t], [\n\t\t\t'required' => ':attribute 为必填项',//自定义提示文字，默认为英文\n\t\t\t'min' => ':attribute 长度不符合要求',\n\t\t\t'integer' => ':attribute 必须为整数',\n\t\t], [\n\t\t\t'title' => '标题',//设置表单字段表示的含义\n\t\t\t'content' => '内容',\n\t\t]);//当验证未通过则自动返回表单页面，不会执行以下内容\n\t\t$result = DB::table('news')\n\t\t\t->insert($data);//数据插入\n\t\tif ($result) {\n\t\t\treturn redirect()->back()->with('msg', '操作成功');//插入成功，返回添加页\n\t\t} else {\n\t\t\treturn redirect()->back()->with('msg', '操作失败')->withInput();//插入失败，返回添加页并提示错误，将原表单数据返回\n\t\t}\n\t}\n```\n在页面上显示提示：\n```php\n                                    @if (count($errors) > 0)//$errors 变量在每次请求的所有视图中都可以被使用，你可以很方便的假设 $errors 变量已被定义且进行安全地使用。\n                                      <div class=\"alert alert-danger\">//验证未通过则返回错误信息\n                                        <ul>\n                                          @foreach ($errors->all() as $error)\n                                            <li>{{ $error }}</li>\n                                          @endforeach\n                                        </ul>\n                                      </div>\n                                    @endif\n\n                                    <fieldset>\n                                        <div class=\"form-group\">\n                                            <label class=\"col-sm-2 control-label\">资讯标题</label>\n                                          {{session('success')}}//此处返回表单验证通过后闪存中session的信息\n                                            <div class=\"col-sm-6\">\n                                                <input value=\"{{old('title')}}\" class=\"form-control\" id=\"title\" type=\"text\" name=\"title\"  style=\"width:40%;\"/>\n                                            </div>\n                                        </div>\n```\n3.数据筛选和分页\n```php\n    \tpublic function index(Request $request) {\n    \t\tif ($request->input('category_id')) {//判断是否带有分类id\n    \t\t\t$category_id = $request->input('category_id');//获取分类id\n    \t\t\tif ($category_id == 'all') {//判断是否是所有分类\n    \t\t\t\t$news = DB::table('news')\n    \t\t\t\t\t->select('id', 'title', 'category_id', 'addtime')\n    \t\t\t\t\t->orderBy(\"id\", \"desc\")\n    \t\t\t\t\t->paginate(10);\n    \t\t\t} else {//否则执行where查询单个分类\n    \t\t\t\t$news = DB::table('news')\n    \t\t\t\t\t->select('id', 'title', 'category_id', 'addtime')\n    \t\t\t\t\t->where('category_id', $category_id)\n    \t\t\t\t\t->orderBy(\"id\", \"desc\")\n    \t\t\t\t\t->paginate(10);\n    \t\t\t}\n    \t\t} else {//不带分类id则默认加上，方便在分页里调用\n    \t\t\t$news = DB::table('news')\n    \t\t\t\t->select('id', 'title', 'category_id', 'addtime')\n    \t\t\t\t->orderBy(\"id\", \"desc\")\n    \t\t\t\t->paginate(10);\n    \t\t\t$category_id = 'all';\n    \t\t}\n    \n    \t\t$category = DB::table('category')\n    \t\t\t->get();\n    \t\t$assign = array(\n    \t\t\t'news' => $news,\n    \t\t\t'category' => $category,\n    \t\t\t'category_id' => $category_id,//用于记住分类id\n    \t\t);\n    \t\treturn view('admin.news.index', $assign);\n    \t}\n```\n重点在于：\n\n默认的分页展示写法是这样的：\n```php\n      {!! $news->links() !!}\n```\n那么当分页筛选成功后，点击下一页则无法按照条件筛选，因为category_id没有存入到分页的url。我们需要将分类id加入到分页url中才能记住用户选择的分类id：\n```php\n      {!! $news->appends(array('category_id'=>$category_id))->links() !!}\n```\n那么生成的分页url是这样的：\n```php\n    http://www.blog.com/admin/news/index?category_id=1&page=2\n```\n就能记住用户选择的分类id进行where条件筛选。\n\n","slug":"Laravel-UEditor-form","published":1,"updated":"2021-11-25T03:28:13.072Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwn8bfxh000itwnf9l6v96yv","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>1.富文本编辑器（UEditor）<br>laravel的依赖管理工具composer中可以快速的帮助我们集成ueditor到框架中，配置过程：</p>\n<p>在laravel项目根目录配置composer.json文件，在require中写入：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;stevenyangecho/laravel-u-editor&quot;</span>: <span class=\"string\">&quot;~1.4&quot;</span></span><br></pre></td></tr></table></figure>\n<p>然后在cmd模式下输入：composer update （需要将composer配置为全局变量）</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS E:\\wamp\\www\\blog&gt; composer update</span><br><span class=\"line\">Loading composer repositories with package information</span><br><span class=\"line\">Updating dependencies (including <span class=\"keyword\">require</span>-dev)</span><br><span class=\"line\">Package operations: <span class=\"number\">3</span> installs, <span class=\"number\">31</span> updates, <span class=\"number\">0</span> removals</span><br><span class=\"line\"> - Updating symfony/polyfill-mbstring (v1.<span class=\"number\">6.0</span> =&gt; v1.<span class=\"number\">7.0</span>): Downloading (<span class=\"number\">100</span>%)</span><br><span class=\"line\"> - Updating symfony/<span class=\"keyword\">var</span>-dumper (v3.<span class=\"number\">3.13</span> =&gt; v3.<span class=\"number\">4.6</span>): Downloading (<span class=\"number\">100</span>%)</span><br><span class=\"line\"> - Updating symfony/debug (v3.<span class=\"number\">3.13</span> =&gt; v3.<span class=\"number\">4.6</span>): Downloading (<span class=\"number\">100</span>%)</span><br><span class=\"line\">.......<span class=\"comment\">//省略部分内容</span></span><br><span class=\"line\">Package manifest generated successfully.</span><br></pre></td></tr></table></figure>\n<p>更新完成之后，修改laravel的配置文件（config/app.php）:</p>\n<p>在 “providers” 这个key 最后加上 ：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Stevenyangecho\\UEditor\\UEditorServiceProvider::class</span><br></pre></td></tr></table></figure>\n<p>在”aliases” 这个key最后加上：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;UEditor&#x27;</span>=&gt;Stevenyangecho\\UEditor\\UEditorServiceProvider::class</span><br></pre></td></tr></table></figure>\n<p>配置完之后，命令提示符进入项目的根目录：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS E:\\wamp\\www&gt; cd blog</span><br><span class=\"line\">PS E:\\wamp\\www\\blog&gt; php artisan vendor:publish</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  [Symfony\\Component\\Debug\\<span class=\"built_in\">Exception</span>\\FatalThrowableError]</span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">Class</span> &#x27;<span class=\"title\">Stevenyangecho</span>\\<span class=\"title\">UEditor</span>\\<span class=\"title\">UEditorServiceProvider</span>&#x27; <span class=\"title\">not</span> <span class=\"title\">found</span></span></span><br></pre></td></tr></table></figure>\n<p>提示以上的错误要确定之前的步骤是否正确：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS E:\\wamp\\www\\blog&gt; php artisan vendor:publish</span><br><span class=\"line\"></span><br><span class=\"line\"> Which provider <span class=\"keyword\">or</span> tag<span class=\"string\">&#x27;s files would you like to publish?:</span></span><br><span class=\"line\"><span class=\"string\">  [0 ] Publish files from all providers and tags listed below</span></span><br><span class=\"line\"><span class=\"string\">.......</span></span><br><span class=\"line\"><span class=\"string\"> &gt; 0//输入0</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">.......</span></span><br><span class=\"line\"><span class=\"string\">Publishing complete.</span></span><br></pre></td></tr></table></figure>\n<p>出现以上信息说明已经配置完成。</p>\n<p>一串文件下载配置之后，laravel项目的public目录下会自动建立一个laravel-u-editor的文件夹。这个文件夹里包含的是编辑器本身的JS文件。同时在config文件夹下也会生成一个名为UEditorUpload.php的文件，这个是基础的配置文件。当这些文件都生成之后，说明编辑器已经在项目中集成好了，下一步就可以在视图文件中进行注入了</p>\n<p>前端视图中整合ue编辑器：</p>\n<p>首先引入JS等文件，因为laravel框架已经帮我们集成好了，直接在视图文件尾部加入</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">include</span>(<span class=\"string\">&#x27;UEditor::head&#x27;</span>) 即可</span><br></pre></td></tr></table></figure>\n<p>然后加载编辑器的容器，最后实例化编辑器，这部分比较简单，直接贴代码：</p>\n<p> 加载编辑器的容器 </p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id=<span class=\"string\">&quot;detail_info&quot;</span>&gt;</span><br><span class=\"line\">&lt;script id=<span class=\"string\">&quot;container&quot;</span> name=<span class=\"string\">&quot;content&quot;</span> type=<span class=\"string\">&quot;text/plain&quot;</span> style=<span class=\"string\">&quot;width: 900px;position:absolute;left:300px;top:120px;&quot;</span>&gt;</span><br><span class=\"line\">&#123;!! html_entity_decode(<span class=\"variable\">$article</span>-&gt;content) !!&#125; <span class=\"comment\">//将富文本编辑器内容转义并在页面上显示</span></span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p> 实例化编辑器 </p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> ue = UE.getEditor(<span class=\"string\">&#x27;container&#x27;</span>);</span><br><span class=\"line\">ue.ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123; </span><br><span class=\"line\">ue.execCommand(<span class=\"string\">&#x27;serverparam&#x27;</span>, <span class=\"string\">&#x27;_token&#x27;</span>, <span class=\"string\">&#x27;&#123;&#123; csrf_token() &#125;&#125;&#x27;</span>); <span class=\"comment\">//这里添加laravel安全token：便于数据提交</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>UEditor增加视频上传</strong><br>UEditor安装好了之后并没有很好的支持插入视频，即便插入视频之后还是显示空白。</p>\n<p>查阅了网上相关资料后，可以用一下方法实现视频上传：<br>修改ueditor.all.js文件（Laravel项目在public\\laravel-u-editor下）</p>\n<p>ueditor.all.js，17769行</p>\n<p>html.push(creatInsertStr( vi.url, vi.width || 420,  vi.height || 280, id + i, null, cl, ‘image’));修改为</p>\n<p>html.push(creatInsertStr( vi.url, vi.width || 420,  vi.height || 280, id + i, null, cl, ‘video’));</p>\n<p>7343,7344,7346行，注释掉代码：</p>\n<p>var root = UE.htmlparser(html);</p>\n<p>me.filterInputRule(root);</p>\n<p>html = root.toHtml();</p>\n<p>然后清除一下缓存，刷新页面即可添加视频。</p>\n<p><img src=\"https://i.imgur.com/yhHVRiN.png\"></p>\n<p>视频无法预览，但是仍可改变布局和大小。</p>\n<p>看到有些博客写将whitList修改为whiteList，好像并没有什么效果。。</p>\n<p><strong>Ueditor图片上传</strong></p>\n<p>在laravel中使用ueditor上传图片依旧会出现上传错误的提示，按F12可以看到：</p>\n<p><img src=\"https://i.imgur.com/AREcTBq.png\"></p>\n<p>说明是一个图片上传的请求地址，原因可能出在上传的图片的保存路径。打开Ueditor扩展包的配置文件<code>config/UEditorUpload.php</code>：</p>\n<pre><code>/* 上传图片配置项 */\n&#39;upload&#39; =&gt; [\n    &quot;imageActionName&quot; =&gt; &quot;uploadimage&quot;, /* 执行上传图片的action名称 */\n    &quot;imageFieldName&quot; =&gt; &quot;upfile&quot;, /* 提交的图片表单名称 */\n    &quot;imageMaxSize&quot; =&gt; 2048000, /* 上传大小限制，单位B */\n    &quot;imageAllowFiles&quot; =&gt; [&quot;.png&quot;, &quot;.jpg&quot;, &quot;.jpeg&quot;, &quot;.gif&quot;, &quot;.bmp&quot;], /* 上传图片格式显示 */\n    &quot;imageCompressEnable&quot; =&gt; true, /* 是否压缩图片,默认是true */\n    &quot;imageCompressBorder&quot; =&gt; 1600, /* 图片压缩最长边限制 */\n    &quot;imageInsertAlign&quot; =&gt; &quot;none&quot;, /* 插入的图片浮动方式 */\n    &quot;imageUrlPrefix&quot; =&gt; &quot;&quot;, /* 图片访问路径前缀 */\n    &quot;imagePathFormat&quot; =&gt; &quot;/uploads/ueditor/image/&#123;yyyy&#125;&#123;mm&#125;&#123;dd&#125;/&#123;time&#125;&#123;rand:6&#125;&quot;, /* 上传保存路径,可以自定义保存路径和文件名格式 */\n</code></pre>\n<p>将imagePathFormat改为图片保存的目录。Linux系统需要注意权限问题。修改之后重新选择图片本地上传，还是会出现以下问题：</p>\n<p><img src=\"https://i.imgur.com/hhv7yHL.jpg\"></p>\n<p>在这个Upload.php中rand 第二个参数太长导致的，然后找到这个文件，路径：<code>vendor\\stevenyangecho\\laravel-u-editor\\src\\Uploader</code>下面。然后找到131行，发现：<br><code>$randNum = rand(1, 10000000000) . rand(1, 10000000000);</code>  更改成<br>    $randNum = rand(1, 1000000) . rand(1, 1000000);<br>修改之后上传的问题解决了。Linux系统下还是需要注意文件的路径问题以及权限问题。</p>\n<p><strong>Ueditor图片左右浮动</strong></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">,xssFilterRules: <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\">//input xss过滤</span></span><br><span class=\"line\">,inputXssFilter: <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\">//output xss过滤</span></span><br><span class=\"line\">,outputXssFilter: <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p>然后设置元素的白名单过滤：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">,whitList: &#123;</span><br><span class=\"line\">...</span><br><span class=\"line\">img: [..., <span class=\"string\">&#x27;style&#x27;</span>],</span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>使img的style属性忽略。</p>\n<p>2.表单验证<br>直接上代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">store</span>(<span class=\"params\">Request <span class=\"variable\">$request</span></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"variable\">$data</span> = <span class=\"variable\">$request</span>-&gt;except(<span class=\"string\">&#x27;_token&#x27;</span>);<span class=\"comment\">//获取除token外的所有表单数据</span></span><br><span class=\"line\">\t<span class=\"keyword\">$this</span>-&gt;validate(<span class=\"variable\">$request</span>, [<span class=\"comment\">//验证表单值</span></span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;title&#x27;</span> =&gt; <span class=\"string\">&#x27;requred&#x27;</span>,<span class=\"comment\">//设置title为必填</span></span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;content&#x27;</span> =&gt; <span class=\"string\">&#x27;integer&#x27;</span>,<span class=\"comment\">//设置content整数</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t], [</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;required&#x27;</span> =&gt; <span class=\"string\">&#x27;:attribute 为必填项&#x27;</span>,<span class=\"comment\">//自定义提示文字，默认为英文</span></span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;min&#x27;</span> =&gt; <span class=\"string\">&#x27;:attribute 长度不符合要求&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;integer&#x27;</span> =&gt; <span class=\"string\">&#x27;:attribute 必须为整数&#x27;</span>,</span><br><span class=\"line\">\t], [</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;title&#x27;</span> =&gt; <span class=\"string\">&#x27;标题&#x27;</span>,<span class=\"comment\">//设置表单字段表示的含义</span></span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;content&#x27;</span> =&gt; <span class=\"string\">&#x27;内容&#x27;</span>,</span><br><span class=\"line\">\t]);<span class=\"comment\">//当验证未通过则自动返回表单页面，不会执行以下内容</span></span><br><span class=\"line\">\t<span class=\"variable\">$result</span> = DB::table(<span class=\"string\">&#x27;news&#x27;</span>)</span><br><span class=\"line\">\t\t-&gt;insert(<span class=\"variable\">$data</span>);<span class=\"comment\">//数据插入</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"variable\">$result</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> redirect()-&gt;back()-&gt;with(<span class=\"string\">&#x27;msg&#x27;</span>, <span class=\"string\">&#x27;操作成功&#x27;</span>);<span class=\"comment\">//插入成功，返回添加页</span></span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> redirect()-&gt;back()-&gt;with(<span class=\"string\">&#x27;msg&#x27;</span>, <span class=\"string\">&#x27;操作失败&#x27;</span>)-&gt;withInput();<span class=\"comment\">//插入失败，返回添加页并提示错误，将原表单数据返回</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在页面上显示提示：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">if</span> (count(<span class=\"variable\">$errors</span>) &gt; <span class=\"number\">0</span>)<span class=\"comment\">//$errors 变量在每次请求的所有视图中都可以被使用，你可以很方便的假设 $errors 变量已被定义且进行安全地使用。</span></span><br><span class=\"line\">  &lt;div <span class=\"class\"><span class=\"keyword\">class</span>=&quot;<span class=\"title\">alert</span> <span class=\"title\">alert</span>-<span class=\"title\">danger</span>&quot;&gt;//验证未通过则返回错误信息</span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">      @<span class=\"title\">foreach</span> ($<span class=\"title\">errors</span>-&gt;<span class=\"title\">all</span>() <span class=\"title\">as</span> $<span class=\"title\">error</span>)</span></span><br><span class=\"line\"><span class=\"class\">        &lt;<span class=\"title\">li</span>&gt;</span>&#123;&#123; <span class=\"variable\">$error</span> &#125;&#125;&lt;/li&gt;</span><br><span class=\"line\">      @<span class=\"keyword\">endforeach</span></span><br><span class=\"line\">    &lt;/ul&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">@<span class=\"keyword\">endif</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;fieldset&gt;</span><br><span class=\"line\">    &lt;div <span class=\"class\"><span class=\"keyword\">class</span>=&quot;<span class=\"title\">form</span>-<span class=\"title\">group</span>&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">        &lt;<span class=\"title\">label</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">col</span>-<span class=\"title\">sm</span>-2 <span class=\"title\">control</span>-<span class=\"title\">label</span>&quot;&gt;资讯标题&lt;/<span class=\"title\">label</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">      </span>&#123;&#123;session(<span class=\"string\">&#x27;success&#x27;</span>)&#125;&#125;<span class=\"comment\">//此处返回表单验证通过后闪存中session的信息</span></span><br><span class=\"line\">        &lt;div <span class=\"class\"><span class=\"keyword\">class</span>=&quot;<span class=\"title\">col</span>-<span class=\"title\">sm</span>-6&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">            &lt;<span class=\"title\">input</span> <span class=\"title\">value</span>=&quot;</span>&#123;&#123;old(<span class=\"string\">&#x27;title&#x27;</span>)&#125;&#125;<span class=\"string\">&quot; class=&quot;</span>form-control<span class=\"string\">&quot; id=&quot;</span>title<span class=\"string\">&quot; type=&quot;</span>text<span class=\"string\">&quot; name=&quot;</span>title<span class=\"string\">&quot;  style=&quot;</span>width:<span class=\"number\">40</span>%;<span class=\"string\">&quot;/&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/div&gt;</span></span><br></pre></td></tr></table></figure>\n<p>3.数据筛选和分页</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\">Request <span class=\"variable\">$request</span></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"variable\">$request</span>-&gt;input(<span class=\"string\">&#x27;category_id&#x27;</span>)) &#123;<span class=\"comment\">//判断是否带有分类id</span></span><br><span class=\"line\">\t\t<span class=\"variable\">$category_id</span> = <span class=\"variable\">$request</span>-&gt;input(<span class=\"string\">&#x27;category_id&#x27;</span>);<span class=\"comment\">//获取分类id</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"variable\">$category_id</span> == <span class=\"string\">&#x27;all&#x27;</span>) &#123;<span class=\"comment\">//判断是否是所有分类</span></span><br><span class=\"line\">\t\t\t<span class=\"variable\">$news</span> = DB::table(<span class=\"string\">&#x27;news&#x27;</span>)</span><br><span class=\"line\">\t\t\t\t-&gt;select(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"string\">&#x27;title&#x27;</span>, <span class=\"string\">&#x27;category_id&#x27;</span>, <span class=\"string\">&#x27;addtime&#x27;</span>)</span><br><span class=\"line\">\t\t\t\t-&gt;orderBy(<span class=\"string\">&quot;id&quot;</span>, <span class=\"string\">&quot;desc&quot;</span>)</span><br><span class=\"line\">\t\t\t\t-&gt;paginate(<span class=\"number\">10</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;<span class=\"comment\">//否则执行where查询单个分类</span></span><br><span class=\"line\">\t\t\t<span class=\"variable\">$news</span> = DB::table(<span class=\"string\">&#x27;news&#x27;</span>)</span><br><span class=\"line\">\t\t\t\t-&gt;select(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"string\">&#x27;title&#x27;</span>, <span class=\"string\">&#x27;category_id&#x27;</span>, <span class=\"string\">&#x27;addtime&#x27;</span>)</span><br><span class=\"line\">\t\t\t\t-&gt;where(<span class=\"string\">&#x27;category_id&#x27;</span>, <span class=\"variable\">$category_id</span>)</span><br><span class=\"line\">\t\t\t\t-&gt;orderBy(<span class=\"string\">&quot;id&quot;</span>, <span class=\"string\">&quot;desc&quot;</span>)</span><br><span class=\"line\">\t\t\t\t-&gt;paginate(<span class=\"number\">10</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;<span class=\"comment\">//不带分类id则默认加上，方便在分页里调用</span></span><br><span class=\"line\">\t\t<span class=\"variable\">$news</span> = DB::table(<span class=\"string\">&#x27;news&#x27;</span>)</span><br><span class=\"line\">\t\t\t-&gt;select(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"string\">&#x27;title&#x27;</span>, <span class=\"string\">&#x27;category_id&#x27;</span>, <span class=\"string\">&#x27;addtime&#x27;</span>)</span><br><span class=\"line\">\t\t\t-&gt;orderBy(<span class=\"string\">&quot;id&quot;</span>, <span class=\"string\">&quot;desc&quot;</span>)</span><br><span class=\"line\">\t\t\t-&gt;paginate(<span class=\"number\">10</span>);</span><br><span class=\"line\">\t\t<span class=\"variable\">$category_id</span> = <span class=\"string\">&#x27;all&#x27;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"variable\">$category</span> = DB::table(<span class=\"string\">&#x27;category&#x27;</span>)</span><br><span class=\"line\">\t\t-&gt;get();</span><br><span class=\"line\">\t<span class=\"variable\">$assign</span> = <span class=\"keyword\">array</span>(</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;news&#x27;</span> =&gt; <span class=\"variable\">$news</span>,</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;category&#x27;</span> =&gt; <span class=\"variable\">$category</span>,</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;category_id&#x27;</span> =&gt; <span class=\"variable\">$category_id</span>,<span class=\"comment\">//用于记住分类id</span></span><br><span class=\"line\">\t);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> view(<span class=\"string\">&#x27;admin.news.index&#x27;</span>, <span class=\"variable\">$assign</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>重点在于：</p>\n<p>默认的分页展示写法是这样的：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;!! <span class=\"variable\">$news</span>-&gt;links() !!&#125;</span><br></pre></td></tr></table></figure>\n<p>那么当分页筛选成功后，点击下一页则无法按照条件筛选，因为category_id没有存入到分页的url。我们需要将分类id加入到分页url中才能记住用户选择的分类id：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;!! <span class=\"variable\">$news</span>-&gt;appends(<span class=\"keyword\">array</span>(<span class=\"string\">&#x27;category_id&#x27;</span>=&gt;<span class=\"variable\">$category_id</span>))-&gt;links() !!&#125;</span><br></pre></td></tr></table></figure>\n<p>那么生成的分页url是这样的：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http:<span class=\"comment\">//www.blog.com/admin/news/index?category_id=1&amp;page=2</span></span><br></pre></td></tr></table></figure>\n<p>就能记住用户选择的分类id进行where条件筛选。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>1.富文本编辑器（UEditor）<br>laravel的依赖管理工具composer中可以快速的帮助我们集成ueditor到框架中，配置过程：</p>\n<p>在laravel项目根目录配置composer.json文件，在require中写入：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;stevenyangecho/laravel-u-editor&quot;</span>: <span class=\"string\">&quot;~1.4&quot;</span></span><br></pre></td></tr></table></figure>\n<p>然后在cmd模式下输入：composer update （需要将composer配置为全局变量）</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS E:\\wamp\\www\\blog&gt; composer update</span><br><span class=\"line\">Loading composer repositories with package information</span><br><span class=\"line\">Updating dependencies (including <span class=\"keyword\">require</span>-dev)</span><br><span class=\"line\">Package operations: <span class=\"number\">3</span> installs, <span class=\"number\">31</span> updates, <span class=\"number\">0</span> removals</span><br><span class=\"line\"> - Updating symfony/polyfill-mbstring (v1.<span class=\"number\">6.0</span> =&gt; v1.<span class=\"number\">7.0</span>): Downloading (<span class=\"number\">100</span>%)</span><br><span class=\"line\"> - Updating symfony/<span class=\"keyword\">var</span>-dumper (v3.<span class=\"number\">3.13</span> =&gt; v3.<span class=\"number\">4.6</span>): Downloading (<span class=\"number\">100</span>%)</span><br><span class=\"line\"> - Updating symfony/debug (v3.<span class=\"number\">3.13</span> =&gt; v3.<span class=\"number\">4.6</span>): Downloading (<span class=\"number\">100</span>%)</span><br><span class=\"line\">.......<span class=\"comment\">//省略部分内容</span></span><br><span class=\"line\">Package manifest generated successfully.</span><br></pre></td></tr></table></figure>\n<p>更新完成之后，修改laravel的配置文件（config/app.php）:</p>\n<p>在 “providers” 这个key 最后加上 ：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Stevenyangecho\\UEditor\\UEditorServiceProvider::class</span><br></pre></td></tr></table></figure>\n<p>在”aliases” 这个key最后加上：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;UEditor&#x27;</span>=&gt;Stevenyangecho\\UEditor\\UEditorServiceProvider::class</span><br></pre></td></tr></table></figure>\n<p>配置完之后，命令提示符进入项目的根目录：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS E:\\wamp\\www&gt; cd blog</span><br><span class=\"line\">PS E:\\wamp\\www\\blog&gt; php artisan vendor:publish</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  [Symfony\\Component\\Debug\\<span class=\"built_in\">Exception</span>\\FatalThrowableError]</span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">Class</span> &#x27;<span class=\"title\">Stevenyangecho</span>\\<span class=\"title\">UEditor</span>\\<span class=\"title\">UEditorServiceProvider</span>&#x27; <span class=\"title\">not</span> <span class=\"title\">found</span></span></span><br></pre></td></tr></table></figure>\n<p>提示以上的错误要确定之前的步骤是否正确：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS E:\\wamp\\www\\blog&gt; php artisan vendor:publish</span><br><span class=\"line\"></span><br><span class=\"line\"> Which provider <span class=\"keyword\">or</span> tag<span class=\"string\">&#x27;s files would you like to publish?:</span></span><br><span class=\"line\"><span class=\"string\">  [0 ] Publish files from all providers and tags listed below</span></span><br><span class=\"line\"><span class=\"string\">.......</span></span><br><span class=\"line\"><span class=\"string\"> &gt; 0//输入0</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">.......</span></span><br><span class=\"line\"><span class=\"string\">Publishing complete.</span></span><br></pre></td></tr></table></figure>\n<p>出现以上信息说明已经配置完成。</p>\n<p>一串文件下载配置之后，laravel项目的public目录下会自动建立一个laravel-u-editor的文件夹。这个文件夹里包含的是编辑器本身的JS文件。同时在config文件夹下也会生成一个名为UEditorUpload.php的文件，这个是基础的配置文件。当这些文件都生成之后，说明编辑器已经在项目中集成好了，下一步就可以在视图文件中进行注入了</p>\n<p>前端视图中整合ue编辑器：</p>\n<p>首先引入JS等文件，因为laravel框架已经帮我们集成好了，直接在视图文件尾部加入</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">include</span>(<span class=\"string\">&#x27;UEditor::head&#x27;</span>) 即可</span><br></pre></td></tr></table></figure>\n<p>然后加载编辑器的容器，最后实例化编辑器，这部分比较简单，直接贴代码：</p>\n<p> 加载编辑器的容器 </p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id=<span class=\"string\">&quot;detail_info&quot;</span>&gt;</span><br><span class=\"line\">&lt;script id=<span class=\"string\">&quot;container&quot;</span> name=<span class=\"string\">&quot;content&quot;</span> type=<span class=\"string\">&quot;text/plain&quot;</span> style=<span class=\"string\">&quot;width: 900px;position:absolute;left:300px;top:120px;&quot;</span>&gt;</span><br><span class=\"line\">&#123;!! html_entity_decode(<span class=\"variable\">$article</span>-&gt;content) !!&#125; <span class=\"comment\">//将富文本编辑器内容转义并在页面上显示</span></span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p> 实例化编辑器 </p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> ue = UE.getEditor(<span class=\"string\">&#x27;container&#x27;</span>);</span><br><span class=\"line\">ue.ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123; </span><br><span class=\"line\">ue.execCommand(<span class=\"string\">&#x27;serverparam&#x27;</span>, <span class=\"string\">&#x27;_token&#x27;</span>, <span class=\"string\">&#x27;&#123;&#123; csrf_token() &#125;&#125;&#x27;</span>); <span class=\"comment\">//这里添加laravel安全token：便于数据提交</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>UEditor增加视频上传</strong><br>UEditor安装好了之后并没有很好的支持插入视频，即便插入视频之后还是显示空白。</p>\n<p>查阅了网上相关资料后，可以用一下方法实现视频上传：<br>修改ueditor.all.js文件（Laravel项目在public\\laravel-u-editor下）</p>\n<p>ueditor.all.js，17769行</p>\n<p>html.push(creatInsertStr( vi.url, vi.width || 420,  vi.height || 280, id + i, null, cl, ‘image’));修改为</p>\n<p>html.push(creatInsertStr( vi.url, vi.width || 420,  vi.height || 280, id + i, null, cl, ‘video’));</p>\n<p>7343,7344,7346行，注释掉代码：</p>\n<p>var root = UE.htmlparser(html);</p>\n<p>me.filterInputRule(root);</p>\n<p>html = root.toHtml();</p>\n<p>然后清除一下缓存，刷新页面即可添加视频。</p>\n<p><img src=\"https://i.imgur.com/yhHVRiN.png\"></p>\n<p>视频无法预览，但是仍可改变布局和大小。</p>\n<p>看到有些博客写将whitList修改为whiteList，好像并没有什么效果。。</p>\n<p><strong>Ueditor图片上传</strong></p>\n<p>在laravel中使用ueditor上传图片依旧会出现上传错误的提示，按F12可以看到：</p>\n<p><img src=\"https://i.imgur.com/AREcTBq.png\"></p>\n<p>说明是一个图片上传的请求地址，原因可能出在上传的图片的保存路径。打开Ueditor扩展包的配置文件<code>config/UEditorUpload.php</code>：</p>\n<pre><code>/* 上传图片配置项 */\n&#39;upload&#39; =&gt; [\n    &quot;imageActionName&quot; =&gt; &quot;uploadimage&quot;, /* 执行上传图片的action名称 */\n    &quot;imageFieldName&quot; =&gt; &quot;upfile&quot;, /* 提交的图片表单名称 */\n    &quot;imageMaxSize&quot; =&gt; 2048000, /* 上传大小限制，单位B */\n    &quot;imageAllowFiles&quot; =&gt; [&quot;.png&quot;, &quot;.jpg&quot;, &quot;.jpeg&quot;, &quot;.gif&quot;, &quot;.bmp&quot;], /* 上传图片格式显示 */\n    &quot;imageCompressEnable&quot; =&gt; true, /* 是否压缩图片,默认是true */\n    &quot;imageCompressBorder&quot; =&gt; 1600, /* 图片压缩最长边限制 */\n    &quot;imageInsertAlign&quot; =&gt; &quot;none&quot;, /* 插入的图片浮动方式 */\n    &quot;imageUrlPrefix&quot; =&gt; &quot;&quot;, /* 图片访问路径前缀 */\n    &quot;imagePathFormat&quot; =&gt; &quot;/uploads/ueditor/image/&#123;yyyy&#125;&#123;mm&#125;&#123;dd&#125;/&#123;time&#125;&#123;rand:6&#125;&quot;, /* 上传保存路径,可以自定义保存路径和文件名格式 */\n</code></pre>\n<p>将imagePathFormat改为图片保存的目录。Linux系统需要注意权限问题。修改之后重新选择图片本地上传，还是会出现以下问题：</p>\n<p><img src=\"https://i.imgur.com/hhv7yHL.jpg\"></p>\n<p>在这个Upload.php中rand 第二个参数太长导致的，然后找到这个文件，路径：<code>vendor\\stevenyangecho\\laravel-u-editor\\src\\Uploader</code>下面。然后找到131行，发现：<br><code>$randNum = rand(1, 10000000000) . rand(1, 10000000000);</code>  更改成<br>    $randNum = rand(1, 1000000) . rand(1, 1000000);<br>修改之后上传的问题解决了。Linux系统下还是需要注意文件的路径问题以及权限问题。</p>\n<p><strong>Ueditor图片左右浮动</strong></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">,xssFilterRules: <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\">//input xss过滤</span></span><br><span class=\"line\">,inputXssFilter: <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\">//output xss过滤</span></span><br><span class=\"line\">,outputXssFilter: <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p>然后设置元素的白名单过滤：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">,whitList: &#123;</span><br><span class=\"line\">...</span><br><span class=\"line\">img: [..., <span class=\"string\">&#x27;style&#x27;</span>],</span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>使img的style属性忽略。</p>\n<p>2.表单验证<br>直接上代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">store</span>(<span class=\"params\">Request <span class=\"variable\">$request</span></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"variable\">$data</span> = <span class=\"variable\">$request</span>-&gt;except(<span class=\"string\">&#x27;_token&#x27;</span>);<span class=\"comment\">//获取除token外的所有表单数据</span></span><br><span class=\"line\">\t<span class=\"keyword\">$this</span>-&gt;validate(<span class=\"variable\">$request</span>, [<span class=\"comment\">//验证表单值</span></span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;title&#x27;</span> =&gt; <span class=\"string\">&#x27;requred&#x27;</span>,<span class=\"comment\">//设置title为必填</span></span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;content&#x27;</span> =&gt; <span class=\"string\">&#x27;integer&#x27;</span>,<span class=\"comment\">//设置content整数</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t], [</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;required&#x27;</span> =&gt; <span class=\"string\">&#x27;:attribute 为必填项&#x27;</span>,<span class=\"comment\">//自定义提示文字，默认为英文</span></span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;min&#x27;</span> =&gt; <span class=\"string\">&#x27;:attribute 长度不符合要求&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;integer&#x27;</span> =&gt; <span class=\"string\">&#x27;:attribute 必须为整数&#x27;</span>,</span><br><span class=\"line\">\t], [</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;title&#x27;</span> =&gt; <span class=\"string\">&#x27;标题&#x27;</span>,<span class=\"comment\">//设置表单字段表示的含义</span></span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;content&#x27;</span> =&gt; <span class=\"string\">&#x27;内容&#x27;</span>,</span><br><span class=\"line\">\t]);<span class=\"comment\">//当验证未通过则自动返回表单页面，不会执行以下内容</span></span><br><span class=\"line\">\t<span class=\"variable\">$result</span> = DB::table(<span class=\"string\">&#x27;news&#x27;</span>)</span><br><span class=\"line\">\t\t-&gt;insert(<span class=\"variable\">$data</span>);<span class=\"comment\">//数据插入</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"variable\">$result</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> redirect()-&gt;back()-&gt;with(<span class=\"string\">&#x27;msg&#x27;</span>, <span class=\"string\">&#x27;操作成功&#x27;</span>);<span class=\"comment\">//插入成功，返回添加页</span></span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> redirect()-&gt;back()-&gt;with(<span class=\"string\">&#x27;msg&#x27;</span>, <span class=\"string\">&#x27;操作失败&#x27;</span>)-&gt;withInput();<span class=\"comment\">//插入失败，返回添加页并提示错误，将原表单数据返回</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在页面上显示提示：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">if</span> (count(<span class=\"variable\">$errors</span>) &gt; <span class=\"number\">0</span>)<span class=\"comment\">//$errors 变量在每次请求的所有视图中都可以被使用，你可以很方便的假设 $errors 变量已被定义且进行安全地使用。</span></span><br><span class=\"line\">  &lt;div <span class=\"class\"><span class=\"keyword\">class</span>=&quot;<span class=\"title\">alert</span> <span class=\"title\">alert</span>-<span class=\"title\">danger</span>&quot;&gt;//验证未通过则返回错误信息</span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">      @<span class=\"title\">foreach</span> ($<span class=\"title\">errors</span>-&gt;<span class=\"title\">all</span>() <span class=\"title\">as</span> $<span class=\"title\">error</span>)</span></span><br><span class=\"line\"><span class=\"class\">        &lt;<span class=\"title\">li</span>&gt;</span>&#123;&#123; <span class=\"variable\">$error</span> &#125;&#125;&lt;/li&gt;</span><br><span class=\"line\">      @<span class=\"keyword\">endforeach</span></span><br><span class=\"line\">    &lt;/ul&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">@<span class=\"keyword\">endif</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;fieldset&gt;</span><br><span class=\"line\">    &lt;div <span class=\"class\"><span class=\"keyword\">class</span>=&quot;<span class=\"title\">form</span>-<span class=\"title\">group</span>&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">        &lt;<span class=\"title\">label</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">col</span>-<span class=\"title\">sm</span>-2 <span class=\"title\">control</span>-<span class=\"title\">label</span>&quot;&gt;资讯标题&lt;/<span class=\"title\">label</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">      </span>&#123;&#123;session(<span class=\"string\">&#x27;success&#x27;</span>)&#125;&#125;<span class=\"comment\">//此处返回表单验证通过后闪存中session的信息</span></span><br><span class=\"line\">        &lt;div <span class=\"class\"><span class=\"keyword\">class</span>=&quot;<span class=\"title\">col</span>-<span class=\"title\">sm</span>-6&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">            &lt;<span class=\"title\">input</span> <span class=\"title\">value</span>=&quot;</span>&#123;&#123;old(<span class=\"string\">&#x27;title&#x27;</span>)&#125;&#125;<span class=\"string\">&quot; class=&quot;</span>form-control<span class=\"string\">&quot; id=&quot;</span>title<span class=\"string\">&quot; type=&quot;</span>text<span class=\"string\">&quot; name=&quot;</span>title<span class=\"string\">&quot;  style=&quot;</span>width:<span class=\"number\">40</span>%;<span class=\"string\">&quot;/&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/div&gt;</span></span><br></pre></td></tr></table></figure>\n<p>3.数据筛选和分页</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\">Request <span class=\"variable\">$request</span></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"variable\">$request</span>-&gt;input(<span class=\"string\">&#x27;category_id&#x27;</span>)) &#123;<span class=\"comment\">//判断是否带有分类id</span></span><br><span class=\"line\">\t\t<span class=\"variable\">$category_id</span> = <span class=\"variable\">$request</span>-&gt;input(<span class=\"string\">&#x27;category_id&#x27;</span>);<span class=\"comment\">//获取分类id</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"variable\">$category_id</span> == <span class=\"string\">&#x27;all&#x27;</span>) &#123;<span class=\"comment\">//判断是否是所有分类</span></span><br><span class=\"line\">\t\t\t<span class=\"variable\">$news</span> = DB::table(<span class=\"string\">&#x27;news&#x27;</span>)</span><br><span class=\"line\">\t\t\t\t-&gt;select(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"string\">&#x27;title&#x27;</span>, <span class=\"string\">&#x27;category_id&#x27;</span>, <span class=\"string\">&#x27;addtime&#x27;</span>)</span><br><span class=\"line\">\t\t\t\t-&gt;orderBy(<span class=\"string\">&quot;id&quot;</span>, <span class=\"string\">&quot;desc&quot;</span>)</span><br><span class=\"line\">\t\t\t\t-&gt;paginate(<span class=\"number\">10</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;<span class=\"comment\">//否则执行where查询单个分类</span></span><br><span class=\"line\">\t\t\t<span class=\"variable\">$news</span> = DB::table(<span class=\"string\">&#x27;news&#x27;</span>)</span><br><span class=\"line\">\t\t\t\t-&gt;select(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"string\">&#x27;title&#x27;</span>, <span class=\"string\">&#x27;category_id&#x27;</span>, <span class=\"string\">&#x27;addtime&#x27;</span>)</span><br><span class=\"line\">\t\t\t\t-&gt;where(<span class=\"string\">&#x27;category_id&#x27;</span>, <span class=\"variable\">$category_id</span>)</span><br><span class=\"line\">\t\t\t\t-&gt;orderBy(<span class=\"string\">&quot;id&quot;</span>, <span class=\"string\">&quot;desc&quot;</span>)</span><br><span class=\"line\">\t\t\t\t-&gt;paginate(<span class=\"number\">10</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;<span class=\"comment\">//不带分类id则默认加上，方便在分页里调用</span></span><br><span class=\"line\">\t\t<span class=\"variable\">$news</span> = DB::table(<span class=\"string\">&#x27;news&#x27;</span>)</span><br><span class=\"line\">\t\t\t-&gt;select(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"string\">&#x27;title&#x27;</span>, <span class=\"string\">&#x27;category_id&#x27;</span>, <span class=\"string\">&#x27;addtime&#x27;</span>)</span><br><span class=\"line\">\t\t\t-&gt;orderBy(<span class=\"string\">&quot;id&quot;</span>, <span class=\"string\">&quot;desc&quot;</span>)</span><br><span class=\"line\">\t\t\t-&gt;paginate(<span class=\"number\">10</span>);</span><br><span class=\"line\">\t\t<span class=\"variable\">$category_id</span> = <span class=\"string\">&#x27;all&#x27;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"variable\">$category</span> = DB::table(<span class=\"string\">&#x27;category&#x27;</span>)</span><br><span class=\"line\">\t\t-&gt;get();</span><br><span class=\"line\">\t<span class=\"variable\">$assign</span> = <span class=\"keyword\">array</span>(</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;news&#x27;</span> =&gt; <span class=\"variable\">$news</span>,</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;category&#x27;</span> =&gt; <span class=\"variable\">$category</span>,</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;category_id&#x27;</span> =&gt; <span class=\"variable\">$category_id</span>,<span class=\"comment\">//用于记住分类id</span></span><br><span class=\"line\">\t);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> view(<span class=\"string\">&#x27;admin.news.index&#x27;</span>, <span class=\"variable\">$assign</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>重点在于：</p>\n<p>默认的分页展示写法是这样的：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;!! <span class=\"variable\">$news</span>-&gt;links() !!&#125;</span><br></pre></td></tr></table></figure>\n<p>那么当分页筛选成功后，点击下一页则无法按照条件筛选，因为category_id没有存入到分页的url。我们需要将分类id加入到分页url中才能记住用户选择的分类id：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;!! <span class=\"variable\">$news</span>-&gt;appends(<span class=\"keyword\">array</span>(<span class=\"string\">&#x27;category_id&#x27;</span>=&gt;<span class=\"variable\">$category_id</span>))-&gt;links() !!&#125;</span><br></pre></td></tr></table></figure>\n<p>那么生成的分页url是这样的：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http:<span class=\"comment\">//www.blog.com/admin/news/index?category_id=1&amp;page=2</span></span><br></pre></td></tr></table></figure>\n<p>就能记住用户选择的分类id进行where条件筛选。</p>\n"},{"title":"Laravel使用（ajax,模板继承,登陆验证,中间件）","date":"2018-03-23T06:54:18.000Z","_content":"1.ajax\n使用ajax传递数据必须带上_token字段:\n```php\n    $.ajax({\n    type:'post',\n    url:\"{{ url('admin/login/login')}} \",\n    data:{username:username,password:password,_token:'<?php echo csrf_token() ?>'},\n    success:function(data){\n    if(data=='no'){\n    $('#success').text('用户名或密码错误').css('color','red');\n    }else{\n    window.location.href=\"{{ url('admin/login/login')}}\";\n    }\n    }\n    })\n```\n后台返回ajax数据：\n```php\n\tpublic function login(Request $request) {\n\t\t$data = $request->all();\n\t\treturn response()->json('no'); //ajax返回数据\n\t}\n```\n2.保存未提交成功的数据\n```php\n\t/**\n\t * 用户登录验证\n\t */\n\n\tpublic function login(Request $request) {\n\t\t$data = $request->only('name', 'password');\n\t\tif (Auth::attempt($data)) {\n\t\t\treturn 'ok';\n\t\t}\n\t\treturn redirect('admin/login/index')->withInput($request->except('password'))->with('msg', '用户名或密码错误');\n    //返回登陆页并返回除密码外的所有表单数据，添加一次性session错误提示\n    \t}\n\n```\n在视图页用old获取之前的数据\n ```php   \n    <input type=\"text\" name=\"username\" value=\"{{ old('username') }}\">\n    \n     {{ session('msg') }} //视图层获取错误信息\n```\n3.模板继承\n比头尾分离更加人性化\n\n制定头尾模板home.blade.php放入resouces/views/layouts/目录下：\n```php\n    <!doctype html>\n    <html lang=\"en\">\n    <head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\"\n      content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>@yield('title') - BeEasy博客</title>\n    </head>\n    <body>\n    \n    @yield('content')\n    \n    </body>\n    </html>\n```\n其中变量用@yield()替代\n\n视图层模板继承：\n```php\n    @extends('layouts.home')\n    \n    @section('title', $title);\n    \n    @section('content')\n    <form action=\"{{ url('view/store') }}\" method=\"post\">\n    {{ csrf_field() }}\n    <input type=\"text\" name=\"title\" value=\"\"> <br>\n    <input type=\"text\" name=\"content\" value=\"\"> <br>\n    <button type=\"submit\">提交</button>\n    </form>\n    @endsection\n```\n其中块级元素必须有闭合标签\n\n4.中间件\n比如后台管理员登陆后登陆超时将返回登陆\n```php\n    php artisan make:middleware AdminMiddleware\n```\n使用Artisan命令快速创建中间件\n\n这个命令会在 app/Http/Middleware 目录下创建一个新的中间件类 Admin来检测用户是否登录\n```php\n    namespace App\\Http\\Middleware;\n    \n    use Closure;\n    use Illuminate\\Support\\Facades\\Auth;\n    \n    class AdminMiddleware {\n    \t/**\n    \t * Handle an incoming request.\n    \t *\n    \t * @param  \\Illuminate\\Http\\Request  $request\n    \t * @param  \\Closure  $next\n    \t * @return mixed\n    \t */\n    \tpublic function handle($request, Closure $next) {\n    \t\tif (Auth::guard('admin')->check()) {//检测用户是否登录\n    \t\t\treturn $next($request);//执行登陆后的操作。可自行定制\n    \t\t} else {\n    \t\t\treturn redirect('admin/login/index');//未登录则返回登陆页\n    \t\t}\n    \t}\n    }\n```\n中间件创建成功后我们需要注册中间件，不然使用起来会特别不方便：\n\n在 app/Http/Kernel.php 文件中\n```php\n    \tprotected $routeMiddleware = [\n    \t\t'auth' => \\Illuminate\\Auth\\Middleware\\Authenticate::class,\n    \t\t'auth.basic' => \\Illuminate\\Auth\\Middleware\\AuthenticateWithBasicAuth::class,\n    \t\t'bindings' => \\Illuminate\\Routing\\Middleware\\SubstituteBindings::class,\n    \t\t'can' => \\Illuminate\\Auth\\Middleware\\Authorize::class,\n    \t\t'guest' => \\App\\Http\\Middleware\\RedirectIfAuthenticated::class,\n    \t\t'throttle' => \\Illuminate\\Routing\\Middleware\\ThrottleRequests::class,\n    \t\t'logincheck' => \\App\\Http\\Middleware\\logincheckMiddleware::class,\n    \t\t'admincheck' => \\App\\Http\\Middleware\\AdminMiddleware::class,//给中间件设置别名，方面调用\n    \t];\n```\n如果你想要中间件在每一个 HTTP 请求期间被执行，只需要将相应的中间件类设置到 app/Http/Kernel.php 的数组属性 $middleware 中即可。\n\n有时候你可能想要通过指定一个键名的方式将相关中间件分到同一个组里面，从而更方便将其分配到路由中，这可以通过使用 HTTP Kernel 的 $middlewareGroups 属性实现。\n\n那么当你将后台登陆页面和登陆成功首页写好后，如何只在登陆成功页加入中间件检测登陆，而不在登陆页加上中间件？\n\n打开全局路由文件 routes/web.php\n```php\n    //admin模块\n    Route::prefix('admin')->namespace('admin')->group(function () {\n    \tRoute::prefix('login')->group(function () {\n    \t\tRoute::get('index', 'LoginController@index');\n    \t\tRoute::post('login', 'LoginController@login');\n    \t});\n    \tRoute::group(['middleware' => ['admincheck']], function () {\n    //路由中间件，检测用户是否登录\n    \t\tRoute::prefix('index')->group(function () {\n    \t\t\tRoute::get('index', 'IndexController@index');\n    \t\t\tRoute::post('loginout', 'IndexController@loginout');\n    \t\t});\n    \t});\n    \n    });\n```\n那么其他需要登陆的页面方法，将路由规则写在注释下面就可以了。\n\n5.登陆账号密码验证\n虽然laravel给我们提供了一套简单的用户注册登录流程，但是并不能完全满足我们的需求，比如我们管理员是在admin表，验证的是username和password。\n\n首先需要在 /config/auth.php文件中添加：\n```php\n    \t'guards' => [\n    \t\t'web' => [\n    \t\t\t'driver' => 'session',\n    \t\t\t'provider' => 'users',\n    \t\t],\n    \n    \t\t'api' => [\n    \t\t\t'driver' => 'token',\n    \t\t\t'provider' => 'users',\n    \t\t],\n    \t\t'admin' => [//定义后台的驱动和提供\n    \t\t\t'driver' => 'session',\n    \t\t\t'provider' => 'admin',\n    \n    \t\t],\n    \t],\n```\n添加配置\n```php\n    \t'providers' => [\n    \t\t'users' => [\n    \t\t\t'driver' => 'eloquent',\n    \t\t\t'model' => App\\User::class,\n    \t\t],\n    \n    \t\t'admin' => [ //后台驱动以及模型 database驱动对应的是table表单\n    \t\t\t'driver' => 'eloquent',\n    \t\t\t'model' => App\\Models\\AdminUser::class,\n    \t\t],\n    \t\t// 'users' => [\n    \t\t// 'driver' => 'database',\n    \t\t// 'table' => 'users',\n    \t\t// ],\n    \t],\n```\n然后我们可以通过复制App目录下User.php\n```php\n    <?php\n    \n    namespace App\\Models;\n    \n    use Illuminate\\Foundation\\Auth\\User as Authenticatable;\n    use Illuminate\\Notifications\\Notifiable;\n    \n    class AdminUser extends Authenticatable {\n    \tuse Notifiable;\n    \t/**\n    \t * 关联到模型的数据库\n    \t */\n    \tprotected $table = 'admin';\n    \t/**\n    \t * The attributes that are mass assignable.\n    \t *\n    \t * @var array\n    \t */\n    \tprotected $fillable = [//验证的字段\n    \t\t'username', 'password',\n    \t];\n    \n    \t/**\n    \t * The attributes that should be hidden for arrays.\n    \t *\n    \t * @var array\n    \t */\n    \tprotected $hidden = [\n    \t\t'password', 'remember_token',\n    \t];\n    }\n```\n然后在控制器里调用：\n```php\n    \tpublic function login(Request $request) {\n    \t\t$data = $request->only('username', 'password');\n    \t\tif (Auth::guard('admin')->attempt($data, $remember)) {\n    \t\t\treturn redirect('admin/index/index');\n    \t\t}\n    \t\treturn redirect('admin/login/index')->withInput($request->except('password'))->with('msg', '用户名或密码错误');\n    \t}\n```\n当然，如果你的网站只有后台管理员不涉及到前台用户，那么在auth.php里可修改默认配置：\n```php\n\t'defaults' => [\n\t\t'guard' => 'admin',//将默认改为admin\n\t\t'passwords' => 'users',\n\t],\n```\n这样在调用的时候不用指定guard：\n```php\n    Auth::attempt($data, $remember)\n```\n\n","source":"_posts/Laravel-ajax-temp-check-middleware.md","raw":"---\ntitle: Laravel使用（ajax,模板继承,登陆验证,中间件）\ndate: 2018-03-23 14:54:18\ncategories: PHP\ntags:\n\t- laravel\n\t- ajax\n\t- 模板继承\n\t- 登陆验证\n\t- 中间件\n---\n1.ajax\n使用ajax传递数据必须带上_token字段:\n```php\n    $.ajax({\n    type:'post',\n    url:\"{{ url('admin/login/login')}} \",\n    data:{username:username,password:password,_token:'<?php echo csrf_token() ?>'},\n    success:function(data){\n    if(data=='no'){\n    $('#success').text('用户名或密码错误').css('color','red');\n    }else{\n    window.location.href=\"{{ url('admin/login/login')}}\";\n    }\n    }\n    })\n```\n后台返回ajax数据：\n```php\n\tpublic function login(Request $request) {\n\t\t$data = $request->all();\n\t\treturn response()->json('no'); //ajax返回数据\n\t}\n```\n2.保存未提交成功的数据\n```php\n\t/**\n\t * 用户登录验证\n\t */\n\n\tpublic function login(Request $request) {\n\t\t$data = $request->only('name', 'password');\n\t\tif (Auth::attempt($data)) {\n\t\t\treturn 'ok';\n\t\t}\n\t\treturn redirect('admin/login/index')->withInput($request->except('password'))->with('msg', '用户名或密码错误');\n    //返回登陆页并返回除密码外的所有表单数据，添加一次性session错误提示\n    \t}\n\n```\n在视图页用old获取之前的数据\n ```php   \n    <input type=\"text\" name=\"username\" value=\"{{ old('username') }}\">\n    \n     {{ session('msg') }} //视图层获取错误信息\n```\n3.模板继承\n比头尾分离更加人性化\n\n制定头尾模板home.blade.php放入resouces/views/layouts/目录下：\n```php\n    <!doctype html>\n    <html lang=\"en\">\n    <head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\"\n      content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>@yield('title') - BeEasy博客</title>\n    </head>\n    <body>\n    \n    @yield('content')\n    \n    </body>\n    </html>\n```\n其中变量用@yield()替代\n\n视图层模板继承：\n```php\n    @extends('layouts.home')\n    \n    @section('title', $title);\n    \n    @section('content')\n    <form action=\"{{ url('view/store') }}\" method=\"post\">\n    {{ csrf_field() }}\n    <input type=\"text\" name=\"title\" value=\"\"> <br>\n    <input type=\"text\" name=\"content\" value=\"\"> <br>\n    <button type=\"submit\">提交</button>\n    </form>\n    @endsection\n```\n其中块级元素必须有闭合标签\n\n4.中间件\n比如后台管理员登陆后登陆超时将返回登陆\n```php\n    php artisan make:middleware AdminMiddleware\n```\n使用Artisan命令快速创建中间件\n\n这个命令会在 app/Http/Middleware 目录下创建一个新的中间件类 Admin来检测用户是否登录\n```php\n    namespace App\\Http\\Middleware;\n    \n    use Closure;\n    use Illuminate\\Support\\Facades\\Auth;\n    \n    class AdminMiddleware {\n    \t/**\n    \t * Handle an incoming request.\n    \t *\n    \t * @param  \\Illuminate\\Http\\Request  $request\n    \t * @param  \\Closure  $next\n    \t * @return mixed\n    \t */\n    \tpublic function handle($request, Closure $next) {\n    \t\tif (Auth::guard('admin')->check()) {//检测用户是否登录\n    \t\t\treturn $next($request);//执行登陆后的操作。可自行定制\n    \t\t} else {\n    \t\t\treturn redirect('admin/login/index');//未登录则返回登陆页\n    \t\t}\n    \t}\n    }\n```\n中间件创建成功后我们需要注册中间件，不然使用起来会特别不方便：\n\n在 app/Http/Kernel.php 文件中\n```php\n    \tprotected $routeMiddleware = [\n    \t\t'auth' => \\Illuminate\\Auth\\Middleware\\Authenticate::class,\n    \t\t'auth.basic' => \\Illuminate\\Auth\\Middleware\\AuthenticateWithBasicAuth::class,\n    \t\t'bindings' => \\Illuminate\\Routing\\Middleware\\SubstituteBindings::class,\n    \t\t'can' => \\Illuminate\\Auth\\Middleware\\Authorize::class,\n    \t\t'guest' => \\App\\Http\\Middleware\\RedirectIfAuthenticated::class,\n    \t\t'throttle' => \\Illuminate\\Routing\\Middleware\\ThrottleRequests::class,\n    \t\t'logincheck' => \\App\\Http\\Middleware\\logincheckMiddleware::class,\n    \t\t'admincheck' => \\App\\Http\\Middleware\\AdminMiddleware::class,//给中间件设置别名，方面调用\n    \t];\n```\n如果你想要中间件在每一个 HTTP 请求期间被执行，只需要将相应的中间件类设置到 app/Http/Kernel.php 的数组属性 $middleware 中即可。\n\n有时候你可能想要通过指定一个键名的方式将相关中间件分到同一个组里面，从而更方便将其分配到路由中，这可以通过使用 HTTP Kernel 的 $middlewareGroups 属性实现。\n\n那么当你将后台登陆页面和登陆成功首页写好后，如何只在登陆成功页加入中间件检测登陆，而不在登陆页加上中间件？\n\n打开全局路由文件 routes/web.php\n```php\n    //admin模块\n    Route::prefix('admin')->namespace('admin')->group(function () {\n    \tRoute::prefix('login')->group(function () {\n    \t\tRoute::get('index', 'LoginController@index');\n    \t\tRoute::post('login', 'LoginController@login');\n    \t});\n    \tRoute::group(['middleware' => ['admincheck']], function () {\n    //路由中间件，检测用户是否登录\n    \t\tRoute::prefix('index')->group(function () {\n    \t\t\tRoute::get('index', 'IndexController@index');\n    \t\t\tRoute::post('loginout', 'IndexController@loginout');\n    \t\t});\n    \t});\n    \n    });\n```\n那么其他需要登陆的页面方法，将路由规则写在注释下面就可以了。\n\n5.登陆账号密码验证\n虽然laravel给我们提供了一套简单的用户注册登录流程，但是并不能完全满足我们的需求，比如我们管理员是在admin表，验证的是username和password。\n\n首先需要在 /config/auth.php文件中添加：\n```php\n    \t'guards' => [\n    \t\t'web' => [\n    \t\t\t'driver' => 'session',\n    \t\t\t'provider' => 'users',\n    \t\t],\n    \n    \t\t'api' => [\n    \t\t\t'driver' => 'token',\n    \t\t\t'provider' => 'users',\n    \t\t],\n    \t\t'admin' => [//定义后台的驱动和提供\n    \t\t\t'driver' => 'session',\n    \t\t\t'provider' => 'admin',\n    \n    \t\t],\n    \t],\n```\n添加配置\n```php\n    \t'providers' => [\n    \t\t'users' => [\n    \t\t\t'driver' => 'eloquent',\n    \t\t\t'model' => App\\User::class,\n    \t\t],\n    \n    \t\t'admin' => [ //后台驱动以及模型 database驱动对应的是table表单\n    \t\t\t'driver' => 'eloquent',\n    \t\t\t'model' => App\\Models\\AdminUser::class,\n    \t\t],\n    \t\t// 'users' => [\n    \t\t// 'driver' => 'database',\n    \t\t// 'table' => 'users',\n    \t\t// ],\n    \t],\n```\n然后我们可以通过复制App目录下User.php\n```php\n    <?php\n    \n    namespace App\\Models;\n    \n    use Illuminate\\Foundation\\Auth\\User as Authenticatable;\n    use Illuminate\\Notifications\\Notifiable;\n    \n    class AdminUser extends Authenticatable {\n    \tuse Notifiable;\n    \t/**\n    \t * 关联到模型的数据库\n    \t */\n    \tprotected $table = 'admin';\n    \t/**\n    \t * The attributes that are mass assignable.\n    \t *\n    \t * @var array\n    \t */\n    \tprotected $fillable = [//验证的字段\n    \t\t'username', 'password',\n    \t];\n    \n    \t/**\n    \t * The attributes that should be hidden for arrays.\n    \t *\n    \t * @var array\n    \t */\n    \tprotected $hidden = [\n    \t\t'password', 'remember_token',\n    \t];\n    }\n```\n然后在控制器里调用：\n```php\n    \tpublic function login(Request $request) {\n    \t\t$data = $request->only('username', 'password');\n    \t\tif (Auth::guard('admin')->attempt($data, $remember)) {\n    \t\t\treturn redirect('admin/index/index');\n    \t\t}\n    \t\treturn redirect('admin/login/index')->withInput($request->except('password'))->with('msg', '用户名或密码错误');\n    \t}\n```\n当然，如果你的网站只有后台管理员不涉及到前台用户，那么在auth.php里可修改默认配置：\n```php\n\t'defaults' => [\n\t\t'guard' => 'admin',//将默认改为admin\n\t\t'passwords' => 'users',\n\t],\n```\n这样在调用的时候不用指定guard：\n```php\n    Auth::attempt($data, $remember)\n```\n\n","slug":"Laravel-ajax-temp-check-middleware","published":1,"updated":"2021-11-25T03:28:13.073Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwn8bfxk000ntwnfd6268y96","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>1.ajax<br>使用ajax传递数据必须带上_token字段:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">type:<span class=\"string\">&#x27;post&#x27;</span>,</span><br><span class=\"line\">url:<span class=\"string\">&quot;&#123;&#123; url(&#x27;admin/login/login&#x27;)&#125;&#125; &quot;</span>,</span><br><span class=\"line\">data:&#123;username:username,password:password,_token:<span class=\"string\">&#x27;&lt;?php echo csrf_token() ?&gt;&#x27;</span>&#125;,</span><br><span class=\"line\">success:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(data==<span class=\"string\">&#x27;no&#x27;</span>)&#123;</span><br><span class=\"line\">$(<span class=\"string\">&#x27;#success&#x27;</span>).text(<span class=\"string\">&#x27;用户名或密码错误&#x27;</span>).css(<span class=\"string\">&#x27;color&#x27;</span>,<span class=\"string\">&#x27;red&#x27;</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">window.location.href=<span class=\"string\">&quot;&#123;&#123; url(&#x27;admin/login/login&#x27;)&#125;&#125;&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>后台返回ajax数据：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">login</span>(<span class=\"params\">Request <span class=\"variable\">$request</span></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"variable\">$data</span> = <span class=\"variable\">$request</span>-&gt;all();</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> response()-&gt;json(<span class=\"string\">&#x27;no&#x27;</span>); <span class=\"comment\">//ajax返回数据</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>2.保存未提交成功的数据</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 用户登录验证</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">login</span>(<span class=\"params\">Request <span class=\"variable\">$request</span></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"variable\">$data</span> = <span class=\"variable\">$request</span>-&gt;only(<span class=\"string\">&#x27;name&#x27;</span>, <span class=\"string\">&#x27;password&#x27;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (Auth::attempt(<span class=\"variable\">$data</span>)) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">&#x27;ok&#x27;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> redirect(<span class=\"string\">&#x27;admin/login/index&#x27;</span>)-&gt;withInput(<span class=\"variable\">$request</span>-&gt;except(<span class=\"string\">&#x27;password&#x27;</span>))-&gt;with(<span class=\"string\">&#x27;msg&#x27;</span>, <span class=\"string\">&#x27;用户名或密码错误&#x27;</span>);</span><br><span class=\"line\">   <span class=\"comment\">//返回登陆页并返回除密码外的所有表单数据，添加一次性session错误提示</span></span><br><span class=\"line\">   \t&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>在视图页用old获取之前的数据<br> <figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;input type=<span class=\"string\">&quot;text&quot;</span> name=<span class=\"string\">&quot;username&quot;</span> value=<span class=\"string\">&quot;&#123;&#123; old(&#x27;username&#x27;) &#125;&#125;&quot;</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"> &#123;&#123; session(<span class=\"string\">&#x27;msg&#x27;</span>) &#125;&#125; <span class=\"comment\">//视图层获取错误信息</span></span><br></pre></td></tr></table></figure><br>3.模板继承<br>比头尾分离更加人性化</p>\n<p>制定头尾模板home.blade.php放入resouces/views/layouts/目录下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!doctype html&gt;</span><br><span class=\"line\">&lt;html lang=<span class=\"string\">&quot;en&quot;</span>&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">&lt;meta charset=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">&quot;viewport&quot;</span></span><br><span class=\"line\">  content=<span class=\"string\">&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;</span>&gt;</span><br><span class=\"line\">&lt;meta http-equiv=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> content=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span><br><span class=\"line\">&lt;title&gt;@<span class=\"keyword\">yield</span>(<span class=\"string\">&#x27;title&#x27;</span>) - BeEasy博客&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"keyword\">yield</span>(<span class=\"string\">&#x27;content&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<p>其中变量用@yield()替代</p>\n<p>视图层模板继承：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">extends</span>(<span class=\"string\">&#x27;layouts.home&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">@section(<span class=\"string\">&#x27;title&#x27;</span>, <span class=\"variable\">$title</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">@section(<span class=\"string\">&#x27;content&#x27;</span>)</span><br><span class=\"line\">&lt;form action=<span class=\"string\">&quot;&#123;&#123; url(&#x27;view/store&#x27;) &#125;&#125;&quot;</span> method=<span class=\"string\">&quot;post&quot;</span>&gt;</span><br><span class=\"line\">&#123;&#123; csrf_field() &#125;&#125;</span><br><span class=\"line\">&lt;input type=<span class=\"string\">&quot;text&quot;</span> name=<span class=\"string\">&quot;title&quot;</span> value=<span class=\"string\">&quot;&quot;</span>&gt; &lt;br&gt;</span><br><span class=\"line\">&lt;input type=<span class=\"string\">&quot;text&quot;</span> name=<span class=\"string\">&quot;content&quot;</span> value=<span class=\"string\">&quot;&quot;</span>&gt; &lt;br&gt;</span><br><span class=\"line\">&lt;button type=<span class=\"string\">&quot;submit&quot;</span>&gt;提交&lt;/button&gt;</span><br><span class=\"line\">&lt;/form&gt;</span><br><span class=\"line\">@endsection</span><br></pre></td></tr></table></figure>\n<p>其中块级元素必须有闭合标签</p>\n<p>4.中间件<br>比如后台管理员登陆后登陆超时将返回登陆</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan make:middleware AdminMiddleware</span><br></pre></td></tr></table></figure>\n<p>使用Artisan命令快速创建中间件</p>\n<p>这个命令会在 app/Http/Middleware 目录下创建一个新的中间件类 Admin来检测用户是否登录</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">App</span>\\<span class=\"title\">Http</span>\\<span class=\"title\">Middleware</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Closure</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Illuminate</span>\\<span class=\"title\">Support</span>\\<span class=\"title\">Facades</span>\\<span class=\"title\">Auth</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AdminMiddleware</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * Handle an incoming request.</span></span><br><span class=\"line\"><span class=\"comment\">\t *</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span>  \\Illuminate\\Http\\Request  $request</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span>  \\Closure  $next</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> mixed</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handle</span>(<span class=\"params\"><span class=\"variable\">$request</span>, <span class=\"built_in\">Closure</span> <span class=\"variable\">$next</span></span>) </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (Auth::guard(<span class=\"string\">&#x27;admin&#x27;</span>)-&gt;check()) &#123;<span class=\"comment\">//检测用户是否登录</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"variable\">$next</span>(<span class=\"variable\">$request</span>);<span class=\"comment\">//执行登陆后的操作。可自行定制</span></span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> redirect(<span class=\"string\">&#x27;admin/login/index&#x27;</span>);<span class=\"comment\">//未登录则返回登陆页</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>中间件创建成功后我们需要注册中间件，不然使用起来会特别不方便：</p>\n<p>在 app/Http/Kernel.php 文件中</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"variable\">$routeMiddleware</span> = [</span><br><span class=\"line\">\t<span class=\"string\">&#x27;auth&#x27;</span> =&gt; \\Illuminate\\Auth\\Middleware\\Authenticate::class,</span><br><span class=\"line\">\t<span class=\"string\">&#x27;auth.basic&#x27;</span> =&gt; \\Illuminate\\Auth\\Middleware\\AuthenticateWithBasicAuth::class,</span><br><span class=\"line\">\t<span class=\"string\">&#x27;bindings&#x27;</span> =&gt; \\Illuminate\\Routing\\Middleware\\SubstituteBindings::class,</span><br><span class=\"line\">\t<span class=\"string\">&#x27;can&#x27;</span> =&gt; \\Illuminate\\Auth\\Middleware\\Authorize::class,</span><br><span class=\"line\">\t<span class=\"string\">&#x27;guest&#x27;</span> =&gt; \\App\\Http\\Middleware\\RedirectIfAuthenticated::class,</span><br><span class=\"line\">\t<span class=\"string\">&#x27;throttle&#x27;</span> =&gt; \\Illuminate\\Routing\\Middleware\\ThrottleRequests::class,</span><br><span class=\"line\">\t<span class=\"string\">&#x27;logincheck&#x27;</span> =&gt; \\App\\Http\\Middleware\\logincheckMiddleware::class,</span><br><span class=\"line\">\t<span class=\"string\">&#x27;admincheck&#x27;</span> =&gt; \\App\\Http\\Middleware\\AdminMiddleware::class,<span class=\"comment\">//给中间件设置别名，方面调用</span></span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n<p>如果你想要中间件在每一个 HTTP 请求期间被执行，只需要将相应的中间件类设置到 app/Http/Kernel.php 的数组属性 $middleware 中即可。</p>\n<p>有时候你可能想要通过指定一个键名的方式将相关中间件分到同一个组里面，从而更方便将其分配到路由中，这可以通过使用 HTTP Kernel 的 $middlewareGroups 属性实现。</p>\n<p>那么当你将后台登陆页面和登陆成功首页写好后，如何只在登陆成功页加入中间件检测登陆，而不在登陆页加上中间件？</p>\n<p>打开全局路由文件 routes/web.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//admin模块</span></span><br><span class=\"line\">Route::prefix(<span class=\"string\">&#x27;admin&#x27;</span>)-&gt;namespace(<span class=\"string\">&#x27;admin&#x27;</span>)-&gt;group(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\tRoute::prefix(<span class=\"string\">&#x27;login&#x27;</span>)-&gt;group(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t\tRoute::get(<span class=\"string\">&#x27;index&#x27;</span>, <span class=\"string\">&#x27;LoginController@index&#x27;</span>);</span><br><span class=\"line\">\t\tRoute::post(<span class=\"string\">&#x27;login&#x27;</span>, <span class=\"string\">&#x27;LoginController@login&#x27;</span>);</span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\">\tRoute::group([<span class=\"string\">&#x27;middleware&#x27;</span> =&gt; [<span class=\"string\">&#x27;admincheck&#x27;</span>]], <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"><span class=\"comment\">//路由中间件，检测用户是否登录</span></span><br><span class=\"line\">\t\tRoute::prefix(<span class=\"string\">&#x27;index&#x27;</span>)-&gt;group(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t\t\tRoute::get(<span class=\"string\">&#x27;index&#x27;</span>, <span class=\"string\">&#x27;IndexController@index&#x27;</span>);</span><br><span class=\"line\">\t\t\tRoute::post(<span class=\"string\">&#x27;loginout&#x27;</span>, <span class=\"string\">&#x27;IndexController@loginout&#x27;</span>);</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>那么其他需要登陆的页面方法，将路由规则写在注释下面就可以了。</p>\n<p>5.登陆账号密码验证<br>虽然laravel给我们提供了一套简单的用户注册登录流程，但是并不能完全满足我们的需求，比如我们管理员是在admin表，验证的是username和password。</p>\n<p>首先需要在 /config/auth.php文件中添加：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;guards&#x27;</span> =&gt; [</span><br><span class=\"line\">\t<span class=\"string\">&#x27;web&#x27;</span> =&gt; [</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;driver&#x27;</span> =&gt; <span class=\"string\">&#x27;session&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;provider&#x27;</span> =&gt; <span class=\"string\">&#x27;users&#x27;</span>,</span><br><span class=\"line\">\t],</span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"string\">&#x27;api&#x27;</span> =&gt; [</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;driver&#x27;</span> =&gt; <span class=\"string\">&#x27;token&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;provider&#x27;</span> =&gt; <span class=\"string\">&#x27;users&#x27;</span>,</span><br><span class=\"line\">\t],</span><br><span class=\"line\">\t<span class=\"string\">&#x27;admin&#x27;</span> =&gt; [<span class=\"comment\">//定义后台的驱动和提供</span></span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;driver&#x27;</span> =&gt; <span class=\"string\">&#x27;session&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;provider&#x27;</span> =&gt; <span class=\"string\">&#x27;admin&#x27;</span>,</span><br><span class=\"line\">    </span><br><span class=\"line\">\t],</span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n<p>添加配置</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;providers&#x27;</span> =&gt; [</span><br><span class=\"line\">\t<span class=\"string\">&#x27;users&#x27;</span> =&gt; [</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;driver&#x27;</span> =&gt; <span class=\"string\">&#x27;eloquent&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;model&#x27;</span> =&gt; App\\User::class,</span><br><span class=\"line\">\t],</span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"string\">&#x27;admin&#x27;</span> =&gt; [ <span class=\"comment\">//后台驱动以及模型 database驱动对应的是table表单</span></span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;driver&#x27;</span> =&gt; <span class=\"string\">&#x27;eloquent&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;model&#x27;</span> =&gt; App\\Models\\AdminUser::class,</span><br><span class=\"line\">\t],</span><br><span class=\"line\">\t<span class=\"comment\">// &#x27;users&#x27; =&gt; [</span></span><br><span class=\"line\">\t<span class=\"comment\">// &#x27;driver&#x27; =&gt; &#x27;database&#x27;,</span></span><br><span class=\"line\">\t<span class=\"comment\">// &#x27;table&#x27; =&gt; &#x27;users&#x27;,</span></span><br><span class=\"line\">\t<span class=\"comment\">// ],</span></span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n<p>然后我们可以通过复制App目录下User.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">App</span>\\<span class=\"title\">Models</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Illuminate</span>\\<span class=\"title\">Foundation</span>\\<span class=\"title\">Auth</span>\\<span class=\"title\">User</span> <span class=\"title\">as</span> <span class=\"title\">Authenticatable</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Illuminate</span>\\<span class=\"title\">Notifications</span>\\<span class=\"title\">Notifiable</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AdminUser</span> <span class=\"keyword\">extends</span> <span class=\"title\">Authenticatable</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">use</span> <span class=\"title\">Notifiable</span>;</span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 关联到模型的数据库</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"variable\">$table</span> = <span class=\"string\">&#x27;admin&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * The attributes that are mass assignable.</span></span><br><span class=\"line\"><span class=\"comment\">\t *</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@var</span> array</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"variable\">$fillable</span> = [<span class=\"comment\">//验证的字段</span></span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;username&#x27;</span>, <span class=\"string\">&#x27;password&#x27;</span>,</span><br><span class=\"line\">\t];</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * The attributes that should be hidden for arrays.</span></span><br><span class=\"line\"><span class=\"comment\">\t *</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@var</span> array</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"variable\">$hidden</span> = [</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;password&#x27;</span>, <span class=\"string\">&#x27;remember_token&#x27;</span>,</span><br><span class=\"line\">\t];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后在控制器里调用：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">login</span>(<span class=\"params\">Request <span class=\"variable\">$request</span></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"variable\">$data</span> = <span class=\"variable\">$request</span>-&gt;only(<span class=\"string\">&#x27;username&#x27;</span>, <span class=\"string\">&#x27;password&#x27;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (Auth::guard(<span class=\"string\">&#x27;admin&#x27;</span>)-&gt;attempt(<span class=\"variable\">$data</span>, <span class=\"variable\">$remember</span>)) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> redirect(<span class=\"string\">&#x27;admin/index/index&#x27;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> redirect(<span class=\"string\">&#x27;admin/login/index&#x27;</span>)-&gt;withInput(<span class=\"variable\">$request</span>-&gt;except(<span class=\"string\">&#x27;password&#x27;</span>))-&gt;with(<span class=\"string\">&#x27;msg&#x27;</span>, <span class=\"string\">&#x27;用户名或密码错误&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>当然，如果你的网站只有后台管理员不涉及到前台用户，那么在auth.php里可修改默认配置：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;defaults&#x27;</span> =&gt; [</span><br><span class=\"line\">\t<span class=\"string\">&#x27;guard&#x27;</span> =&gt; <span class=\"string\">&#x27;admin&#x27;</span>,<span class=\"comment\">//将默认改为admin</span></span><br><span class=\"line\">\t<span class=\"string\">&#x27;passwords&#x27;</span> =&gt; <span class=\"string\">&#x27;users&#x27;</span>,</span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n<p>这样在调用的时候不用指定guard：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Auth::attempt(<span class=\"variable\">$data</span>, <span class=\"variable\">$remember</span>)</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>1.ajax<br>使用ajax传递数据必须带上_token字段:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">type:<span class=\"string\">&#x27;post&#x27;</span>,</span><br><span class=\"line\">url:<span class=\"string\">&quot;&#123;&#123; url(&#x27;admin/login/login&#x27;)&#125;&#125; &quot;</span>,</span><br><span class=\"line\">data:&#123;username:username,password:password,_token:<span class=\"string\">&#x27;&lt;?php echo csrf_token() ?&gt;&#x27;</span>&#125;,</span><br><span class=\"line\">success:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(data==<span class=\"string\">&#x27;no&#x27;</span>)&#123;</span><br><span class=\"line\">$(<span class=\"string\">&#x27;#success&#x27;</span>).text(<span class=\"string\">&#x27;用户名或密码错误&#x27;</span>).css(<span class=\"string\">&#x27;color&#x27;</span>,<span class=\"string\">&#x27;red&#x27;</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">window.location.href=<span class=\"string\">&quot;&#123;&#123; url(&#x27;admin/login/login&#x27;)&#125;&#125;&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>后台返回ajax数据：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">login</span>(<span class=\"params\">Request <span class=\"variable\">$request</span></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"variable\">$data</span> = <span class=\"variable\">$request</span>-&gt;all();</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> response()-&gt;json(<span class=\"string\">&#x27;no&#x27;</span>); <span class=\"comment\">//ajax返回数据</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>2.保存未提交成功的数据</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 用户登录验证</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">login</span>(<span class=\"params\">Request <span class=\"variable\">$request</span></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"variable\">$data</span> = <span class=\"variable\">$request</span>-&gt;only(<span class=\"string\">&#x27;name&#x27;</span>, <span class=\"string\">&#x27;password&#x27;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (Auth::attempt(<span class=\"variable\">$data</span>)) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">&#x27;ok&#x27;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> redirect(<span class=\"string\">&#x27;admin/login/index&#x27;</span>)-&gt;withInput(<span class=\"variable\">$request</span>-&gt;except(<span class=\"string\">&#x27;password&#x27;</span>))-&gt;with(<span class=\"string\">&#x27;msg&#x27;</span>, <span class=\"string\">&#x27;用户名或密码错误&#x27;</span>);</span><br><span class=\"line\">   <span class=\"comment\">//返回登陆页并返回除密码外的所有表单数据，添加一次性session错误提示</span></span><br><span class=\"line\">   \t&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>在视图页用old获取之前的数据<br> <figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;input type=<span class=\"string\">&quot;text&quot;</span> name=<span class=\"string\">&quot;username&quot;</span> value=<span class=\"string\">&quot;&#123;&#123; old(&#x27;username&#x27;) &#125;&#125;&quot;</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"> &#123;&#123; session(<span class=\"string\">&#x27;msg&#x27;</span>) &#125;&#125; <span class=\"comment\">//视图层获取错误信息</span></span><br></pre></td></tr></table></figure><br>3.模板继承<br>比头尾分离更加人性化</p>\n<p>制定头尾模板home.blade.php放入resouces/views/layouts/目录下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!doctype html&gt;</span><br><span class=\"line\">&lt;html lang=<span class=\"string\">&quot;en&quot;</span>&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">&lt;meta charset=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">&quot;viewport&quot;</span></span><br><span class=\"line\">  content=<span class=\"string\">&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;</span>&gt;</span><br><span class=\"line\">&lt;meta http-equiv=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> content=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span><br><span class=\"line\">&lt;title&gt;@<span class=\"keyword\">yield</span>(<span class=\"string\">&#x27;title&#x27;</span>) - BeEasy博客&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"keyword\">yield</span>(<span class=\"string\">&#x27;content&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<p>其中变量用@yield()替代</p>\n<p>视图层模板继承：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">extends</span>(<span class=\"string\">&#x27;layouts.home&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">@section(<span class=\"string\">&#x27;title&#x27;</span>, <span class=\"variable\">$title</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">@section(<span class=\"string\">&#x27;content&#x27;</span>)</span><br><span class=\"line\">&lt;form action=<span class=\"string\">&quot;&#123;&#123; url(&#x27;view/store&#x27;) &#125;&#125;&quot;</span> method=<span class=\"string\">&quot;post&quot;</span>&gt;</span><br><span class=\"line\">&#123;&#123; csrf_field() &#125;&#125;</span><br><span class=\"line\">&lt;input type=<span class=\"string\">&quot;text&quot;</span> name=<span class=\"string\">&quot;title&quot;</span> value=<span class=\"string\">&quot;&quot;</span>&gt; &lt;br&gt;</span><br><span class=\"line\">&lt;input type=<span class=\"string\">&quot;text&quot;</span> name=<span class=\"string\">&quot;content&quot;</span> value=<span class=\"string\">&quot;&quot;</span>&gt; &lt;br&gt;</span><br><span class=\"line\">&lt;button type=<span class=\"string\">&quot;submit&quot;</span>&gt;提交&lt;/button&gt;</span><br><span class=\"line\">&lt;/form&gt;</span><br><span class=\"line\">@endsection</span><br></pre></td></tr></table></figure>\n<p>其中块级元素必须有闭合标签</p>\n<p>4.中间件<br>比如后台管理员登陆后登陆超时将返回登陆</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan make:middleware AdminMiddleware</span><br></pre></td></tr></table></figure>\n<p>使用Artisan命令快速创建中间件</p>\n<p>这个命令会在 app/Http/Middleware 目录下创建一个新的中间件类 Admin来检测用户是否登录</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">App</span>\\<span class=\"title\">Http</span>\\<span class=\"title\">Middleware</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Closure</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Illuminate</span>\\<span class=\"title\">Support</span>\\<span class=\"title\">Facades</span>\\<span class=\"title\">Auth</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AdminMiddleware</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * Handle an incoming request.</span></span><br><span class=\"line\"><span class=\"comment\">\t *</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span>  \\Illuminate\\Http\\Request  $request</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span>  \\Closure  $next</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> mixed</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handle</span>(<span class=\"params\"><span class=\"variable\">$request</span>, <span class=\"built_in\">Closure</span> <span class=\"variable\">$next</span></span>) </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (Auth::guard(<span class=\"string\">&#x27;admin&#x27;</span>)-&gt;check()) &#123;<span class=\"comment\">//检测用户是否登录</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"variable\">$next</span>(<span class=\"variable\">$request</span>);<span class=\"comment\">//执行登陆后的操作。可自行定制</span></span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> redirect(<span class=\"string\">&#x27;admin/login/index&#x27;</span>);<span class=\"comment\">//未登录则返回登陆页</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>中间件创建成功后我们需要注册中间件，不然使用起来会特别不方便：</p>\n<p>在 app/Http/Kernel.php 文件中</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"variable\">$routeMiddleware</span> = [</span><br><span class=\"line\">\t<span class=\"string\">&#x27;auth&#x27;</span> =&gt; \\Illuminate\\Auth\\Middleware\\Authenticate::class,</span><br><span class=\"line\">\t<span class=\"string\">&#x27;auth.basic&#x27;</span> =&gt; \\Illuminate\\Auth\\Middleware\\AuthenticateWithBasicAuth::class,</span><br><span class=\"line\">\t<span class=\"string\">&#x27;bindings&#x27;</span> =&gt; \\Illuminate\\Routing\\Middleware\\SubstituteBindings::class,</span><br><span class=\"line\">\t<span class=\"string\">&#x27;can&#x27;</span> =&gt; \\Illuminate\\Auth\\Middleware\\Authorize::class,</span><br><span class=\"line\">\t<span class=\"string\">&#x27;guest&#x27;</span> =&gt; \\App\\Http\\Middleware\\RedirectIfAuthenticated::class,</span><br><span class=\"line\">\t<span class=\"string\">&#x27;throttle&#x27;</span> =&gt; \\Illuminate\\Routing\\Middleware\\ThrottleRequests::class,</span><br><span class=\"line\">\t<span class=\"string\">&#x27;logincheck&#x27;</span> =&gt; \\App\\Http\\Middleware\\logincheckMiddleware::class,</span><br><span class=\"line\">\t<span class=\"string\">&#x27;admincheck&#x27;</span> =&gt; \\App\\Http\\Middleware\\AdminMiddleware::class,<span class=\"comment\">//给中间件设置别名，方面调用</span></span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n<p>如果你想要中间件在每一个 HTTP 请求期间被执行，只需要将相应的中间件类设置到 app/Http/Kernel.php 的数组属性 $middleware 中即可。</p>\n<p>有时候你可能想要通过指定一个键名的方式将相关中间件分到同一个组里面，从而更方便将其分配到路由中，这可以通过使用 HTTP Kernel 的 $middlewareGroups 属性实现。</p>\n<p>那么当你将后台登陆页面和登陆成功首页写好后，如何只在登陆成功页加入中间件检测登陆，而不在登陆页加上中间件？</p>\n<p>打开全局路由文件 routes/web.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//admin模块</span></span><br><span class=\"line\">Route::prefix(<span class=\"string\">&#x27;admin&#x27;</span>)-&gt;namespace(<span class=\"string\">&#x27;admin&#x27;</span>)-&gt;group(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\tRoute::prefix(<span class=\"string\">&#x27;login&#x27;</span>)-&gt;group(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t\tRoute::get(<span class=\"string\">&#x27;index&#x27;</span>, <span class=\"string\">&#x27;LoginController@index&#x27;</span>);</span><br><span class=\"line\">\t\tRoute::post(<span class=\"string\">&#x27;login&#x27;</span>, <span class=\"string\">&#x27;LoginController@login&#x27;</span>);</span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\">\tRoute::group([<span class=\"string\">&#x27;middleware&#x27;</span> =&gt; [<span class=\"string\">&#x27;admincheck&#x27;</span>]], <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"><span class=\"comment\">//路由中间件，检测用户是否登录</span></span><br><span class=\"line\">\t\tRoute::prefix(<span class=\"string\">&#x27;index&#x27;</span>)-&gt;group(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t\t\tRoute::get(<span class=\"string\">&#x27;index&#x27;</span>, <span class=\"string\">&#x27;IndexController@index&#x27;</span>);</span><br><span class=\"line\">\t\t\tRoute::post(<span class=\"string\">&#x27;loginout&#x27;</span>, <span class=\"string\">&#x27;IndexController@loginout&#x27;</span>);</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>那么其他需要登陆的页面方法，将路由规则写在注释下面就可以了。</p>\n<p>5.登陆账号密码验证<br>虽然laravel给我们提供了一套简单的用户注册登录流程，但是并不能完全满足我们的需求，比如我们管理员是在admin表，验证的是username和password。</p>\n<p>首先需要在 /config/auth.php文件中添加：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;guards&#x27;</span> =&gt; [</span><br><span class=\"line\">\t<span class=\"string\">&#x27;web&#x27;</span> =&gt; [</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;driver&#x27;</span> =&gt; <span class=\"string\">&#x27;session&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;provider&#x27;</span> =&gt; <span class=\"string\">&#x27;users&#x27;</span>,</span><br><span class=\"line\">\t],</span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"string\">&#x27;api&#x27;</span> =&gt; [</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;driver&#x27;</span> =&gt; <span class=\"string\">&#x27;token&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;provider&#x27;</span> =&gt; <span class=\"string\">&#x27;users&#x27;</span>,</span><br><span class=\"line\">\t],</span><br><span class=\"line\">\t<span class=\"string\">&#x27;admin&#x27;</span> =&gt; [<span class=\"comment\">//定义后台的驱动和提供</span></span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;driver&#x27;</span> =&gt; <span class=\"string\">&#x27;session&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;provider&#x27;</span> =&gt; <span class=\"string\">&#x27;admin&#x27;</span>,</span><br><span class=\"line\">    </span><br><span class=\"line\">\t],</span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n<p>添加配置</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;providers&#x27;</span> =&gt; [</span><br><span class=\"line\">\t<span class=\"string\">&#x27;users&#x27;</span> =&gt; [</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;driver&#x27;</span> =&gt; <span class=\"string\">&#x27;eloquent&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;model&#x27;</span> =&gt; App\\User::class,</span><br><span class=\"line\">\t],</span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"string\">&#x27;admin&#x27;</span> =&gt; [ <span class=\"comment\">//后台驱动以及模型 database驱动对应的是table表单</span></span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;driver&#x27;</span> =&gt; <span class=\"string\">&#x27;eloquent&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;model&#x27;</span> =&gt; App\\Models\\AdminUser::class,</span><br><span class=\"line\">\t],</span><br><span class=\"line\">\t<span class=\"comment\">// &#x27;users&#x27; =&gt; [</span></span><br><span class=\"line\">\t<span class=\"comment\">// &#x27;driver&#x27; =&gt; &#x27;database&#x27;,</span></span><br><span class=\"line\">\t<span class=\"comment\">// &#x27;table&#x27; =&gt; &#x27;users&#x27;,</span></span><br><span class=\"line\">\t<span class=\"comment\">// ],</span></span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n<p>然后我们可以通过复制App目录下User.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">App</span>\\<span class=\"title\">Models</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Illuminate</span>\\<span class=\"title\">Foundation</span>\\<span class=\"title\">Auth</span>\\<span class=\"title\">User</span> <span class=\"title\">as</span> <span class=\"title\">Authenticatable</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Illuminate</span>\\<span class=\"title\">Notifications</span>\\<span class=\"title\">Notifiable</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AdminUser</span> <span class=\"keyword\">extends</span> <span class=\"title\">Authenticatable</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">use</span> <span class=\"title\">Notifiable</span>;</span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 关联到模型的数据库</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"variable\">$table</span> = <span class=\"string\">&#x27;admin&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * The attributes that are mass assignable.</span></span><br><span class=\"line\"><span class=\"comment\">\t *</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@var</span> array</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"variable\">$fillable</span> = [<span class=\"comment\">//验证的字段</span></span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;username&#x27;</span>, <span class=\"string\">&#x27;password&#x27;</span>,</span><br><span class=\"line\">\t];</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * The attributes that should be hidden for arrays.</span></span><br><span class=\"line\"><span class=\"comment\">\t *</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@var</span> array</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"variable\">$hidden</span> = [</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;password&#x27;</span>, <span class=\"string\">&#x27;remember_token&#x27;</span>,</span><br><span class=\"line\">\t];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后在控制器里调用：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">login</span>(<span class=\"params\">Request <span class=\"variable\">$request</span></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"variable\">$data</span> = <span class=\"variable\">$request</span>-&gt;only(<span class=\"string\">&#x27;username&#x27;</span>, <span class=\"string\">&#x27;password&#x27;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (Auth::guard(<span class=\"string\">&#x27;admin&#x27;</span>)-&gt;attempt(<span class=\"variable\">$data</span>, <span class=\"variable\">$remember</span>)) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> redirect(<span class=\"string\">&#x27;admin/index/index&#x27;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> redirect(<span class=\"string\">&#x27;admin/login/index&#x27;</span>)-&gt;withInput(<span class=\"variable\">$request</span>-&gt;except(<span class=\"string\">&#x27;password&#x27;</span>))-&gt;with(<span class=\"string\">&#x27;msg&#x27;</span>, <span class=\"string\">&#x27;用户名或密码错误&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>当然，如果你的网站只有后台管理员不涉及到前台用户，那么在auth.php里可修改默认配置：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;defaults&#x27;</span> =&gt; [</span><br><span class=\"line\">\t<span class=\"string\">&#x27;guard&#x27;</span> =&gt; <span class=\"string\">&#x27;admin&#x27;</span>,<span class=\"comment\">//将默认改为admin</span></span><br><span class=\"line\">\t<span class=\"string\">&#x27;passwords&#x27;</span> =&gt; <span class=\"string\">&#x27;users&#x27;</span>,</span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n<p>这样在调用的时候不用指定guard：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Auth::attempt(<span class=\"variable\">$data</span>, <span class=\"variable\">$remember</span>)</span><br></pre></td></tr></table></figure>\n\n"},{"title":"Laravel使用（图片上传,裁剪）","date":"2018-03-23T06:54:43.000Z","_content":"1.图片上传\n直接上代码：\n```php\n    use DB;\n    use Illuminate\\Http\\Request;\n    use Illuminate\\Support\\Facades\\Storage;//使用到的类\n    ...\n    public function update(Request $request, $id) {//\n    \t\t$data = $request->except('_token');//获取表单中除token外的所有数值\n    \n    \t\tif (!$request->hasFile('image')) {//判断是否有图片上传\n    \t\t\tDB::table('image')\n    \t\t\t\t->where('id', $id)\n    \t\t\t\t->update($data);\n    \t\t\treturn redirect('admin/carousel/index');\n    \t\t} else {\n    \t\t\t$file = $data['image'];//获取图片信息\n    \t\t\t$this->validate($request, [//图片验证\n    \t\t\t\t'logo_img' => 'image|between:0,5242880',//是否为图片类型，以及大小在0~5M之间\n    \n    \t\t\t], [\n    \t\t\t\t'image' => ':attribute 必须为图片',\n    \t\t\t\t'size' => ':attribute 文件大小必须小于5M',\n    \t\t\t], [\n    \t\t\t\t'image' => '图片',\n    \t\t\t]);\n    \t\t\t//判断文件是否上传成功\n    \t\t\tif ($file->isValid()) {\n    \t\t\t\t//原文件名\n    \t\t\t\t$originalName = $file->getClientOriginalName();\n    \t\t\t\t//扩展名\n    \t\t\t\t$ext = $file->getClientOriginalExtension();\n    \t\t\t\t//MimeType\n    \t\t\t\t$type = $file->getClientMimeType();\n    \t\t\t\t//临时绝对路径\n    \t\t\t\t$realPath = $file->getRealPath();\n    \t\t\t\t$filename = uniqid() . '.' . $ext;\n    \t\t\t\t$bool = Storage::disk('public')->put($filename, file_get_contents($realPath));//这里使用的是基于PHP的flysystem强大的文件系统抽象\n    \t\t\t\t//判断是否上传成功\n    \t\t\t\tif ($bool) {\n    \t\t\t\t\t$data['image'] = Storage::disk('public')->url($filename);//获取软连接地址\n    \t\t\t\t\tDB::table('image')\n    \t\t\t\t\t\t->where('id', $id)\n    \t\t\t\t\t\t->update($data);\n    \t\t\t\t\treturn redirect('admin/carousel/index');//存储到数据库\n    \t\t\t\t} else {\n    \t\t\t\t\treturn redirect()->back()->with('msg', '请稍后再试');\n    \t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \n    \t}\n```\n我们上传文件的地址其实是在 config/filesystems.php配置文件中的disk数组下public中的root地址\n```php\n\t'disks' => [\n\n\t\t'local' => [\n\t\t\t'driver' => 'local',\n\t\t\t'root' => storage_path('app'),\n\t\t],\n\n\t\t'public' => [\n\t\t\t'driver' => 'local',\n\t\t\t'root' => storage_path('app/public'),\n\t\t\t'url' => env('APP_URL') . '/storage',\n\t\t\t'visibility' => 'public',\n\t\t],\n\n\t\t's3' => [\n\t\t\t'driver' => 's3',\n\t\t\t'key' => env('AWS_ACCESS_KEY_ID'),\n\t\t\t'secret' => env('AWS_SECRET_ACCESS_KEY'),\n\t\t\t'region' => env('AWS_DEFAULT_REGION'),\n\t\t\t'bucket' => env('AWS_BUCKET'),\n\t\t],\n\n\t],\n```\n因为我们指定的disks是public，所以上传的文件将存储在/storage/app/public目录下。\n\n当以上操作成功将文件上传，我们使用Storage::disk('public')->url($filename)  获取到的结果是这样的：\n```php\n    /storage/5aaa3fe021b6f.png\n```\n虽然路径看起来一目了然，但是直接拿到页面上去用并不能获取到图片。\n\n那么我们需要创建一个软连接来将上面的链接指向到storage_path('app/public')\n\n即  /storage/app/public目录下\n\n要创建这个软链接，直接使用Artisan命令：\n```php\n    php artisan storage:link\n```\n文件被存储并且软链已经被创建的情况下，就可以使用辅助函数 asset 创建一个指向该文件的URL：\n```php\n    <img  src=\"{{ asset(‘/storage/5aaa3fe021b6f.png’) }}\">\n```\n这种方式可以将公开访问的文件保存在一个可以很容易被不同部署环境共享的目录，在使用零停机时间部署系统如Envoyer的时候尤其方便。\n\n关于flysystem其他的一些文件操作，可参考[http://laravelacademy.org/post/6071.html](http://laravelacademy.org/post/6071.html \"这里\")\n\n\n**附加：图片裁剪**\n使用图片裁剪可以用强大的Intervention Image扩展，需要确保PHP版本>=5.4并且安装了Fileinfo扩展，以及GD库（>=2.0）或者Imagick扩展（>=6.5.7）。\n\n使用Composer命令安装最新版本的Intervention Image\n```php\n    composer require intervention/image\n```\n安装完毕之后注册服务提供者，在config/app.php文件，$providers数组下加入：\n```php\n    Intervention\\Image\\ImageServiceProvider::class\n```\n然后添加如下门面到$aliaes数组：\n```php\n\t'Image' => Intervention\\Image\\Facades\\Image::class\n```\n配置方面，默认情况下，Intervention Image使用PHP的GD库扩展处理所有图片，如果你想要切换到Imagick，你可以将配置文件拉到应用中：\n```php\n    php artisan vendor:publish --provider=\"Intervention\\Image\\ImageServiceProviderLaravel5\"\n```\n这样对应的配置文件会被拷贝到 config/image.php ，这样你可以在该配置文件中修改图片处理驱动配置。\n\n在控制器中使用图片裁剪\n\n首先需要在控制器：\n```php\n    use Image；\n```\n然后将带上文件路径的图片进行操作：\n```php\n\t\t\tif ($file->isValid()) {\n\t\t\t\t//原文件名\n\t\t\t\t$originalName = $file->getClientOriginalName();\n\t\t\t\t//扩展名\n\t\t\t\t$ext = $file->getClientOriginalExtension();\n\t\t\t\t//MimeType\n\t\t\t\t$type = $file->getClientMimeType();\n\t\t\t\t//临时绝对路径\n\t\t\t\t$realPath = $file->getRealPath();\n\n\t\t\t\t$Images = substr($realPath, 0, -4) . '.' . $ext; //设置裁剪图片保存的名称\n\n\t\t\t\t$filename = uniqid() . '.' . $ext;\n\n\t\t\t\tImage::make($realPath)->resize(1920, 530)->save($Images); //图片裁剪\n\n\t\t\t\t$bool = Storage::disk('public')->put($filename, file_get_contents($Images));\n\t\t\t\t\n\t}\n```\n以上代码只是在文件上传功能中添加了一小部分，其中添加变量$Images用来保存裁剪后的图片名称，因为临时的绝对路径中图片的后缀是.tmp，在调用Image类的时候save方法保存的文件后缀不能用图片类型以外的后缀，故只能自行添加。resize方法用于重新设定图片大小，连接save方法将裁剪的图片进行保存。\n\n更多使用方法请参考 Intervention Image 官方文档：http://image.intervention.io/\n\n","source":"_posts/Laravel-imgupload.md","raw":"---\ntitle: Laravel使用（图片上传,裁剪）\ndate: 2018-03-23 14:54:43\ncategories: PHP\ntags:\n\t- laravel\n\t- 上传\n---\n1.图片上传\n直接上代码：\n```php\n    use DB;\n    use Illuminate\\Http\\Request;\n    use Illuminate\\Support\\Facades\\Storage;//使用到的类\n    ...\n    public function update(Request $request, $id) {//\n    \t\t$data = $request->except('_token');//获取表单中除token外的所有数值\n    \n    \t\tif (!$request->hasFile('image')) {//判断是否有图片上传\n    \t\t\tDB::table('image')\n    \t\t\t\t->where('id', $id)\n    \t\t\t\t->update($data);\n    \t\t\treturn redirect('admin/carousel/index');\n    \t\t} else {\n    \t\t\t$file = $data['image'];//获取图片信息\n    \t\t\t$this->validate($request, [//图片验证\n    \t\t\t\t'logo_img' => 'image|between:0,5242880',//是否为图片类型，以及大小在0~5M之间\n    \n    \t\t\t], [\n    \t\t\t\t'image' => ':attribute 必须为图片',\n    \t\t\t\t'size' => ':attribute 文件大小必须小于5M',\n    \t\t\t], [\n    \t\t\t\t'image' => '图片',\n    \t\t\t]);\n    \t\t\t//判断文件是否上传成功\n    \t\t\tif ($file->isValid()) {\n    \t\t\t\t//原文件名\n    \t\t\t\t$originalName = $file->getClientOriginalName();\n    \t\t\t\t//扩展名\n    \t\t\t\t$ext = $file->getClientOriginalExtension();\n    \t\t\t\t//MimeType\n    \t\t\t\t$type = $file->getClientMimeType();\n    \t\t\t\t//临时绝对路径\n    \t\t\t\t$realPath = $file->getRealPath();\n    \t\t\t\t$filename = uniqid() . '.' . $ext;\n    \t\t\t\t$bool = Storage::disk('public')->put($filename, file_get_contents($realPath));//这里使用的是基于PHP的flysystem强大的文件系统抽象\n    \t\t\t\t//判断是否上传成功\n    \t\t\t\tif ($bool) {\n    \t\t\t\t\t$data['image'] = Storage::disk('public')->url($filename);//获取软连接地址\n    \t\t\t\t\tDB::table('image')\n    \t\t\t\t\t\t->where('id', $id)\n    \t\t\t\t\t\t->update($data);\n    \t\t\t\t\treturn redirect('admin/carousel/index');//存储到数据库\n    \t\t\t\t} else {\n    \t\t\t\t\treturn redirect()->back()->with('msg', '请稍后再试');\n    \t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \n    \t}\n```\n我们上传文件的地址其实是在 config/filesystems.php配置文件中的disk数组下public中的root地址\n```php\n\t'disks' => [\n\n\t\t'local' => [\n\t\t\t'driver' => 'local',\n\t\t\t'root' => storage_path('app'),\n\t\t],\n\n\t\t'public' => [\n\t\t\t'driver' => 'local',\n\t\t\t'root' => storage_path('app/public'),\n\t\t\t'url' => env('APP_URL') . '/storage',\n\t\t\t'visibility' => 'public',\n\t\t],\n\n\t\t's3' => [\n\t\t\t'driver' => 's3',\n\t\t\t'key' => env('AWS_ACCESS_KEY_ID'),\n\t\t\t'secret' => env('AWS_SECRET_ACCESS_KEY'),\n\t\t\t'region' => env('AWS_DEFAULT_REGION'),\n\t\t\t'bucket' => env('AWS_BUCKET'),\n\t\t],\n\n\t],\n```\n因为我们指定的disks是public，所以上传的文件将存储在/storage/app/public目录下。\n\n当以上操作成功将文件上传，我们使用Storage::disk('public')->url($filename)  获取到的结果是这样的：\n```php\n    /storage/5aaa3fe021b6f.png\n```\n虽然路径看起来一目了然，但是直接拿到页面上去用并不能获取到图片。\n\n那么我们需要创建一个软连接来将上面的链接指向到storage_path('app/public')\n\n即  /storage/app/public目录下\n\n要创建这个软链接，直接使用Artisan命令：\n```php\n    php artisan storage:link\n```\n文件被存储并且软链已经被创建的情况下，就可以使用辅助函数 asset 创建一个指向该文件的URL：\n```php\n    <img  src=\"{{ asset(‘/storage/5aaa3fe021b6f.png’) }}\">\n```\n这种方式可以将公开访问的文件保存在一个可以很容易被不同部署环境共享的目录，在使用零停机时间部署系统如Envoyer的时候尤其方便。\n\n关于flysystem其他的一些文件操作，可参考[http://laravelacademy.org/post/6071.html](http://laravelacademy.org/post/6071.html \"这里\")\n\n\n**附加：图片裁剪**\n使用图片裁剪可以用强大的Intervention Image扩展，需要确保PHP版本>=5.4并且安装了Fileinfo扩展，以及GD库（>=2.0）或者Imagick扩展（>=6.5.7）。\n\n使用Composer命令安装最新版本的Intervention Image\n```php\n    composer require intervention/image\n```\n安装完毕之后注册服务提供者，在config/app.php文件，$providers数组下加入：\n```php\n    Intervention\\Image\\ImageServiceProvider::class\n```\n然后添加如下门面到$aliaes数组：\n```php\n\t'Image' => Intervention\\Image\\Facades\\Image::class\n```\n配置方面，默认情况下，Intervention Image使用PHP的GD库扩展处理所有图片，如果你想要切换到Imagick，你可以将配置文件拉到应用中：\n```php\n    php artisan vendor:publish --provider=\"Intervention\\Image\\ImageServiceProviderLaravel5\"\n```\n这样对应的配置文件会被拷贝到 config/image.php ，这样你可以在该配置文件中修改图片处理驱动配置。\n\n在控制器中使用图片裁剪\n\n首先需要在控制器：\n```php\n    use Image；\n```\n然后将带上文件路径的图片进行操作：\n```php\n\t\t\tif ($file->isValid()) {\n\t\t\t\t//原文件名\n\t\t\t\t$originalName = $file->getClientOriginalName();\n\t\t\t\t//扩展名\n\t\t\t\t$ext = $file->getClientOriginalExtension();\n\t\t\t\t//MimeType\n\t\t\t\t$type = $file->getClientMimeType();\n\t\t\t\t//临时绝对路径\n\t\t\t\t$realPath = $file->getRealPath();\n\n\t\t\t\t$Images = substr($realPath, 0, -4) . '.' . $ext; //设置裁剪图片保存的名称\n\n\t\t\t\t$filename = uniqid() . '.' . $ext;\n\n\t\t\t\tImage::make($realPath)->resize(1920, 530)->save($Images); //图片裁剪\n\n\t\t\t\t$bool = Storage::disk('public')->put($filename, file_get_contents($Images));\n\t\t\t\t\n\t}\n```\n以上代码只是在文件上传功能中添加了一小部分，其中添加变量$Images用来保存裁剪后的图片名称，因为临时的绝对路径中图片的后缀是.tmp，在调用Image类的时候save方法保存的文件后缀不能用图片类型以外的后缀，故只能自行添加。resize方法用于重新设定图片大小，连接save方法将裁剪的图片进行保存。\n\n更多使用方法请参考 Intervention Image 官方文档：http://image.intervention.io/\n\n","slug":"Laravel-imgupload","published":1,"updated":"2021-11-25T03:28:13.074Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwn8bfxm000qtwnf7t8idv9j","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>1.图片上传<br>直接上代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">DB</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Illuminate</span>\\<span class=\"title\">Http</span>\\<span class=\"title\">Request</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Illuminate</span>\\<span class=\"title\">Support</span>\\<span class=\"title\">Facades</span>\\<span class=\"title\">Storage</span>;<span class=\"comment\">//使用到的类</span></span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">update</span>(<span class=\"params\">Request <span class=\"variable\">$request</span>, <span class=\"variable\">$id</span></span>) </span>&#123;<span class=\"comment\">//</span></span><br><span class=\"line\">\t\t<span class=\"variable\">$data</span> = <span class=\"variable\">$request</span>-&gt;except(<span class=\"string\">&#x27;_token&#x27;</span>);<span class=\"comment\">//获取表单中除token外的所有数值</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!<span class=\"variable\">$request</span>-&gt;hasFile(<span class=\"string\">&#x27;image&#x27;</span>)) &#123;<span class=\"comment\">//判断是否有图片上传</span></span><br><span class=\"line\">\t\t\tDB::table(<span class=\"string\">&#x27;image&#x27;</span>)</span><br><span class=\"line\">\t\t\t\t-&gt;where(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"variable\">$id</span>)</span><br><span class=\"line\">\t\t\t\t-&gt;update(<span class=\"variable\">$data</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> redirect(<span class=\"string\">&#x27;admin/carousel/index&#x27;</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"variable\">$file</span> = <span class=\"variable\">$data</span>[<span class=\"string\">&#x27;image&#x27;</span>];<span class=\"comment\">//获取图片信息</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">$this</span>-&gt;validate(<span class=\"variable\">$request</span>, [<span class=\"comment\">//图片验证</span></span><br><span class=\"line\">\t\t\t\t<span class=\"string\">&#x27;logo_img&#x27;</span> =&gt; <span class=\"string\">&#x27;image|between:0,5242880&#x27;</span>,<span class=\"comment\">//是否为图片类型，以及大小在0~5M之间</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t], [</span><br><span class=\"line\">\t\t\t\t<span class=\"string\">&#x27;image&#x27;</span> =&gt; <span class=\"string\">&#x27;:attribute 必须为图片&#x27;</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"string\">&#x27;size&#x27;</span> =&gt; <span class=\"string\">&#x27;:attribute 文件大小必须小于5M&#x27;</span>,</span><br><span class=\"line\">\t\t\t], [</span><br><span class=\"line\">\t\t\t\t<span class=\"string\">&#x27;image&#x27;</span> =&gt; <span class=\"string\">&#x27;图片&#x27;</span>,</span><br><span class=\"line\">\t\t\t]);</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//判断文件是否上传成功</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (<span class=\"variable\">$file</span>-&gt;isValid()) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//原文件名</span></span><br><span class=\"line\">\t\t\t\t<span class=\"variable\">$originalName</span> = <span class=\"variable\">$file</span>-&gt;getClientOriginalName();</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//扩展名</span></span><br><span class=\"line\">\t\t\t\t<span class=\"variable\">$ext</span> = <span class=\"variable\">$file</span>-&gt;getClientOriginalExtension();</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//MimeType</span></span><br><span class=\"line\">\t\t\t\t<span class=\"variable\">$type</span> = <span class=\"variable\">$file</span>-&gt;getClientMimeType();</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//临时绝对路径</span></span><br><span class=\"line\">\t\t\t\t<span class=\"variable\">$realPath</span> = <span class=\"variable\">$file</span>-&gt;getRealPath();</span><br><span class=\"line\">\t\t\t\t<span class=\"variable\">$filename</span> = uniqid() . <span class=\"string\">&#x27;.&#x27;</span> . <span class=\"variable\">$ext</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"variable\">$bool</span> = Storage::disk(<span class=\"string\">&#x27;public&#x27;</span>)-&gt;put(<span class=\"variable\">$filename</span>, file_get_contents(<span class=\"variable\">$realPath</span>));<span class=\"comment\">//这里使用的是基于PHP的flysystem强大的文件系统抽象</span></span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//判断是否上传成功</span></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (<span class=\"variable\">$bool</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"variable\">$data</span>[<span class=\"string\">&#x27;image&#x27;</span>] = Storage::disk(<span class=\"string\">&#x27;public&#x27;</span>)-&gt;url(<span class=\"variable\">$filename</span>);<span class=\"comment\">//获取软连接地址</span></span><br><span class=\"line\">\t\t\t\t\tDB::table(<span class=\"string\">&#x27;image&#x27;</span>)</span><br><span class=\"line\">\t\t\t\t\t\t-&gt;where(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"variable\">$id</span>)</span><br><span class=\"line\">\t\t\t\t\t\t-&gt;update(<span class=\"variable\">$data</span>);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span> redirect(<span class=\"string\">&#x27;admin/carousel/index&#x27;</span>);<span class=\"comment\">//存储到数据库</span></span><br><span class=\"line\">\t\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span> redirect()-&gt;back()-&gt;with(<span class=\"string\">&#x27;msg&#x27;</span>, <span class=\"string\">&#x27;请稍后再试&#x27;</span>);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>\n<p>我们上传文件的地址其实是在 config/filesystems.php配置文件中的disk数组下public中的root地址</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;disks&#x27;</span> =&gt; [</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"string\">&#x27;local&#x27;</span> =&gt; [</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;driver&#x27;</span> =&gt; <span class=\"string\">&#x27;local&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;root&#x27;</span> =&gt; storage_path(<span class=\"string\">&#x27;app&#x27;</span>),</span><br><span class=\"line\">\t],</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"string\">&#x27;public&#x27;</span> =&gt; [</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;driver&#x27;</span> =&gt; <span class=\"string\">&#x27;local&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;root&#x27;</span> =&gt; storage_path(<span class=\"string\">&#x27;app/public&#x27;</span>),</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;url&#x27;</span> =&gt; env(<span class=\"string\">&#x27;APP_URL&#x27;</span>) . <span class=\"string\">&#x27;/storage&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;visibility&#x27;</span> =&gt; <span class=\"string\">&#x27;public&#x27;</span>,</span><br><span class=\"line\">\t],</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"string\">&#x27;s3&#x27;</span> =&gt; [</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;driver&#x27;</span> =&gt; <span class=\"string\">&#x27;s3&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;key&#x27;</span> =&gt; env(<span class=\"string\">&#x27;AWS_ACCESS_KEY_ID&#x27;</span>),</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;secret&#x27;</span> =&gt; env(<span class=\"string\">&#x27;AWS_SECRET_ACCESS_KEY&#x27;</span>),</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;region&#x27;</span> =&gt; env(<span class=\"string\">&#x27;AWS_DEFAULT_REGION&#x27;</span>),</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;bucket&#x27;</span> =&gt; env(<span class=\"string\">&#x27;AWS_BUCKET&#x27;</span>),</span><br><span class=\"line\">\t],</span><br><span class=\"line\"></span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n<p>因为我们指定的disks是public，所以上传的文件将存储在/storage/app/public目录下。</p>\n<p>当以上操作成功将文件上传，我们使用Storage::disk(‘public’)-&gt;url($filename)  获取到的结果是这样的：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/storage/<span class=\"number\">5</span>aaa3fe021b6f.png</span><br></pre></td></tr></table></figure>\n<p>虽然路径看起来一目了然，但是直接拿到页面上去用并不能获取到图片。</p>\n<p>那么我们需要创建一个软连接来将上面的链接指向到storage_path(‘app/public’)</p>\n<p>即  /storage/app/public目录下</p>\n<p>要创建这个软链接，直接使用Artisan命令：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan storage:link</span><br></pre></td></tr></table></figure>\n<p>文件被存储并且软链已经被创建的情况下，就可以使用辅助函数 asset 创建一个指向该文件的URL：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img  src=<span class=\"string\">&quot;&#123;&#123; asset(‘/storage/5aaa3fe021b6f.png’) &#125;&#125;&quot;</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>这种方式可以将公开访问的文件保存在一个可以很容易被不同部署环境共享的目录，在使用零停机时间部署系统如Envoyer的时候尤其方便。</p>\n<p>关于flysystem其他的一些文件操作，可参考<a href=\"http://laravelacademy.org/post/6071.html\" title=\"这里\">http://laravelacademy.org/post/6071.html</a></p>\n<p><strong>附加：图片裁剪</strong><br>使用图片裁剪可以用强大的Intervention Image扩展，需要确保PHP版本&gt;=5.4并且安装了Fileinfo扩展，以及GD库（&gt;=2.0）或者Imagick扩展（&gt;=6.5.7）。</p>\n<p>使用Composer命令安装最新版本的Intervention Image</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">composer <span class=\"keyword\">require</span> intervention/image</span><br></pre></td></tr></table></figure>\n<p>安装完毕之后注册服务提供者，在config/app.php文件，$providers数组下加入：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Intervention\\Image\\ImageServiceProvider::class</span><br></pre></td></tr></table></figure>\n<p>然后添加如下门面到$aliaes数组：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;Image&#x27;</span> =&gt; Intervention\\Image\\Facades\\Image::class</span><br></pre></td></tr></table></figure>\n<p>配置方面，默认情况下，Intervention Image使用PHP的GD库扩展处理所有图片，如果你想要切换到Imagick，你可以将配置文件拉到应用中：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan vendor:publish --provider=<span class=\"string\">&quot;Intervention\\Image\\ImageServiceProviderLaravel5&quot;</span></span><br></pre></td></tr></table></figure>\n<p>这样对应的配置文件会被拷贝到 config/image.php ，这样你可以在该配置文件中修改图片处理驱动配置。</p>\n<p>在控制器中使用图片裁剪</p>\n<p>首先需要在控制器：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Image</span>；</span><br></pre></td></tr></table></figure>\n<p>然后将带上文件路径的图片进行操作：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"variable\">$file</span>-&gt;isValid()) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//原文件名</span></span><br><span class=\"line\">\t\t\t<span class=\"variable\">$originalName</span> = <span class=\"variable\">$file</span>-&gt;getClientOriginalName();</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//扩展名</span></span><br><span class=\"line\">\t\t\t<span class=\"variable\">$ext</span> = <span class=\"variable\">$file</span>-&gt;getClientOriginalExtension();</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//MimeType</span></span><br><span class=\"line\">\t\t\t<span class=\"variable\">$type</span> = <span class=\"variable\">$file</span>-&gt;getClientMimeType();</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//临时绝对路径</span></span><br><span class=\"line\">\t\t\t<span class=\"variable\">$realPath</span> = <span class=\"variable\">$file</span>-&gt;getRealPath();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"variable\">$Images</span> = substr(<span class=\"variable\">$realPath</span>, <span class=\"number\">0</span>, -<span class=\"number\">4</span>) . <span class=\"string\">&#x27;.&#x27;</span> . <span class=\"variable\">$ext</span>; <span class=\"comment\">//设置裁剪图片保存的名称</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"variable\">$filename</span> = uniqid() . <span class=\"string\">&#x27;.&#x27;</span> . <span class=\"variable\">$ext</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tImage::make(<span class=\"variable\">$realPath</span>)-&gt;resize(<span class=\"number\">1920</span>, <span class=\"number\">530</span>)-&gt;save(<span class=\"variable\">$Images</span>); <span class=\"comment\">//图片裁剪</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"variable\">$bool</span> = Storage::disk(<span class=\"string\">&#x27;public&#x27;</span>)-&gt;put(<span class=\"variable\">$filename</span>, file_get_contents(<span class=\"variable\">$Images</span>));</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>以上代码只是在文件上传功能中添加了一小部分，其中添加变量$Images用来保存裁剪后的图片名称，因为临时的绝对路径中图片的后缀是.tmp，在调用Image类的时候save方法保存的文件后缀不能用图片类型以外的后缀，故只能自行添加。resize方法用于重新设定图片大小，连接save方法将裁剪的图片进行保存。</p>\n<p>更多使用方法请参考 Intervention Image 官方文档：<a href=\"http://image.intervention.io/\">http://image.intervention.io/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>1.图片上传<br>直接上代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">DB</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Illuminate</span>\\<span class=\"title\">Http</span>\\<span class=\"title\">Request</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Illuminate</span>\\<span class=\"title\">Support</span>\\<span class=\"title\">Facades</span>\\<span class=\"title\">Storage</span>;<span class=\"comment\">//使用到的类</span></span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">update</span>(<span class=\"params\">Request <span class=\"variable\">$request</span>, <span class=\"variable\">$id</span></span>) </span>&#123;<span class=\"comment\">//</span></span><br><span class=\"line\">\t\t<span class=\"variable\">$data</span> = <span class=\"variable\">$request</span>-&gt;except(<span class=\"string\">&#x27;_token&#x27;</span>);<span class=\"comment\">//获取表单中除token外的所有数值</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!<span class=\"variable\">$request</span>-&gt;hasFile(<span class=\"string\">&#x27;image&#x27;</span>)) &#123;<span class=\"comment\">//判断是否有图片上传</span></span><br><span class=\"line\">\t\t\tDB::table(<span class=\"string\">&#x27;image&#x27;</span>)</span><br><span class=\"line\">\t\t\t\t-&gt;where(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"variable\">$id</span>)</span><br><span class=\"line\">\t\t\t\t-&gt;update(<span class=\"variable\">$data</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> redirect(<span class=\"string\">&#x27;admin/carousel/index&#x27;</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"variable\">$file</span> = <span class=\"variable\">$data</span>[<span class=\"string\">&#x27;image&#x27;</span>];<span class=\"comment\">//获取图片信息</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">$this</span>-&gt;validate(<span class=\"variable\">$request</span>, [<span class=\"comment\">//图片验证</span></span><br><span class=\"line\">\t\t\t\t<span class=\"string\">&#x27;logo_img&#x27;</span> =&gt; <span class=\"string\">&#x27;image|between:0,5242880&#x27;</span>,<span class=\"comment\">//是否为图片类型，以及大小在0~5M之间</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t], [</span><br><span class=\"line\">\t\t\t\t<span class=\"string\">&#x27;image&#x27;</span> =&gt; <span class=\"string\">&#x27;:attribute 必须为图片&#x27;</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"string\">&#x27;size&#x27;</span> =&gt; <span class=\"string\">&#x27;:attribute 文件大小必须小于5M&#x27;</span>,</span><br><span class=\"line\">\t\t\t], [</span><br><span class=\"line\">\t\t\t\t<span class=\"string\">&#x27;image&#x27;</span> =&gt; <span class=\"string\">&#x27;图片&#x27;</span>,</span><br><span class=\"line\">\t\t\t]);</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//判断文件是否上传成功</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (<span class=\"variable\">$file</span>-&gt;isValid()) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//原文件名</span></span><br><span class=\"line\">\t\t\t\t<span class=\"variable\">$originalName</span> = <span class=\"variable\">$file</span>-&gt;getClientOriginalName();</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//扩展名</span></span><br><span class=\"line\">\t\t\t\t<span class=\"variable\">$ext</span> = <span class=\"variable\">$file</span>-&gt;getClientOriginalExtension();</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//MimeType</span></span><br><span class=\"line\">\t\t\t\t<span class=\"variable\">$type</span> = <span class=\"variable\">$file</span>-&gt;getClientMimeType();</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//临时绝对路径</span></span><br><span class=\"line\">\t\t\t\t<span class=\"variable\">$realPath</span> = <span class=\"variable\">$file</span>-&gt;getRealPath();</span><br><span class=\"line\">\t\t\t\t<span class=\"variable\">$filename</span> = uniqid() . <span class=\"string\">&#x27;.&#x27;</span> . <span class=\"variable\">$ext</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"variable\">$bool</span> = Storage::disk(<span class=\"string\">&#x27;public&#x27;</span>)-&gt;put(<span class=\"variable\">$filename</span>, file_get_contents(<span class=\"variable\">$realPath</span>));<span class=\"comment\">//这里使用的是基于PHP的flysystem强大的文件系统抽象</span></span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//判断是否上传成功</span></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (<span class=\"variable\">$bool</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"variable\">$data</span>[<span class=\"string\">&#x27;image&#x27;</span>] = Storage::disk(<span class=\"string\">&#x27;public&#x27;</span>)-&gt;url(<span class=\"variable\">$filename</span>);<span class=\"comment\">//获取软连接地址</span></span><br><span class=\"line\">\t\t\t\t\tDB::table(<span class=\"string\">&#x27;image&#x27;</span>)</span><br><span class=\"line\">\t\t\t\t\t\t-&gt;where(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"variable\">$id</span>)</span><br><span class=\"line\">\t\t\t\t\t\t-&gt;update(<span class=\"variable\">$data</span>);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span> redirect(<span class=\"string\">&#x27;admin/carousel/index&#x27;</span>);<span class=\"comment\">//存储到数据库</span></span><br><span class=\"line\">\t\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span> redirect()-&gt;back()-&gt;with(<span class=\"string\">&#x27;msg&#x27;</span>, <span class=\"string\">&#x27;请稍后再试&#x27;</span>);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>\n<p>我们上传文件的地址其实是在 config/filesystems.php配置文件中的disk数组下public中的root地址</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;disks&#x27;</span> =&gt; [</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"string\">&#x27;local&#x27;</span> =&gt; [</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;driver&#x27;</span> =&gt; <span class=\"string\">&#x27;local&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;root&#x27;</span> =&gt; storage_path(<span class=\"string\">&#x27;app&#x27;</span>),</span><br><span class=\"line\">\t],</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"string\">&#x27;public&#x27;</span> =&gt; [</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;driver&#x27;</span> =&gt; <span class=\"string\">&#x27;local&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;root&#x27;</span> =&gt; storage_path(<span class=\"string\">&#x27;app/public&#x27;</span>),</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;url&#x27;</span> =&gt; env(<span class=\"string\">&#x27;APP_URL&#x27;</span>) . <span class=\"string\">&#x27;/storage&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;visibility&#x27;</span> =&gt; <span class=\"string\">&#x27;public&#x27;</span>,</span><br><span class=\"line\">\t],</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"string\">&#x27;s3&#x27;</span> =&gt; [</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;driver&#x27;</span> =&gt; <span class=\"string\">&#x27;s3&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;key&#x27;</span> =&gt; env(<span class=\"string\">&#x27;AWS_ACCESS_KEY_ID&#x27;</span>),</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;secret&#x27;</span> =&gt; env(<span class=\"string\">&#x27;AWS_SECRET_ACCESS_KEY&#x27;</span>),</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;region&#x27;</span> =&gt; env(<span class=\"string\">&#x27;AWS_DEFAULT_REGION&#x27;</span>),</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;bucket&#x27;</span> =&gt; env(<span class=\"string\">&#x27;AWS_BUCKET&#x27;</span>),</span><br><span class=\"line\">\t],</span><br><span class=\"line\"></span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n<p>因为我们指定的disks是public，所以上传的文件将存储在/storage/app/public目录下。</p>\n<p>当以上操作成功将文件上传，我们使用Storage::disk(‘public’)-&gt;url($filename)  获取到的结果是这样的：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/storage/<span class=\"number\">5</span>aaa3fe021b6f.png</span><br></pre></td></tr></table></figure>\n<p>虽然路径看起来一目了然，但是直接拿到页面上去用并不能获取到图片。</p>\n<p>那么我们需要创建一个软连接来将上面的链接指向到storage_path(‘app/public’)</p>\n<p>即  /storage/app/public目录下</p>\n<p>要创建这个软链接，直接使用Artisan命令：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan storage:link</span><br></pre></td></tr></table></figure>\n<p>文件被存储并且软链已经被创建的情况下，就可以使用辅助函数 asset 创建一个指向该文件的URL：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img  src=<span class=\"string\">&quot;&#123;&#123; asset(‘/storage/5aaa3fe021b6f.png’) &#125;&#125;&quot;</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>这种方式可以将公开访问的文件保存在一个可以很容易被不同部署环境共享的目录，在使用零停机时间部署系统如Envoyer的时候尤其方便。</p>\n<p>关于flysystem其他的一些文件操作，可参考<a href=\"http://laravelacademy.org/post/6071.html\" title=\"这里\">http://laravelacademy.org/post/6071.html</a></p>\n<p><strong>附加：图片裁剪</strong><br>使用图片裁剪可以用强大的Intervention Image扩展，需要确保PHP版本&gt;=5.4并且安装了Fileinfo扩展，以及GD库（&gt;=2.0）或者Imagick扩展（&gt;=6.5.7）。</p>\n<p>使用Composer命令安装最新版本的Intervention Image</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">composer <span class=\"keyword\">require</span> intervention/image</span><br></pre></td></tr></table></figure>\n<p>安装完毕之后注册服务提供者，在config/app.php文件，$providers数组下加入：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Intervention\\Image\\ImageServiceProvider::class</span><br></pre></td></tr></table></figure>\n<p>然后添加如下门面到$aliaes数组：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;Image&#x27;</span> =&gt; Intervention\\Image\\Facades\\Image::class</span><br></pre></td></tr></table></figure>\n<p>配置方面，默认情况下，Intervention Image使用PHP的GD库扩展处理所有图片，如果你想要切换到Imagick，你可以将配置文件拉到应用中：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan vendor:publish --provider=<span class=\"string\">&quot;Intervention\\Image\\ImageServiceProviderLaravel5&quot;</span></span><br></pre></td></tr></table></figure>\n<p>这样对应的配置文件会被拷贝到 config/image.php ，这样你可以在该配置文件中修改图片处理驱动配置。</p>\n<p>在控制器中使用图片裁剪</p>\n<p>首先需要在控制器：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Image</span>；</span><br></pre></td></tr></table></figure>\n<p>然后将带上文件路径的图片进行操作：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"variable\">$file</span>-&gt;isValid()) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//原文件名</span></span><br><span class=\"line\">\t\t\t<span class=\"variable\">$originalName</span> = <span class=\"variable\">$file</span>-&gt;getClientOriginalName();</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//扩展名</span></span><br><span class=\"line\">\t\t\t<span class=\"variable\">$ext</span> = <span class=\"variable\">$file</span>-&gt;getClientOriginalExtension();</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//MimeType</span></span><br><span class=\"line\">\t\t\t<span class=\"variable\">$type</span> = <span class=\"variable\">$file</span>-&gt;getClientMimeType();</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//临时绝对路径</span></span><br><span class=\"line\">\t\t\t<span class=\"variable\">$realPath</span> = <span class=\"variable\">$file</span>-&gt;getRealPath();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"variable\">$Images</span> = substr(<span class=\"variable\">$realPath</span>, <span class=\"number\">0</span>, -<span class=\"number\">4</span>) . <span class=\"string\">&#x27;.&#x27;</span> . <span class=\"variable\">$ext</span>; <span class=\"comment\">//设置裁剪图片保存的名称</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"variable\">$filename</span> = uniqid() . <span class=\"string\">&#x27;.&#x27;</span> . <span class=\"variable\">$ext</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tImage::make(<span class=\"variable\">$realPath</span>)-&gt;resize(<span class=\"number\">1920</span>, <span class=\"number\">530</span>)-&gt;save(<span class=\"variable\">$Images</span>); <span class=\"comment\">//图片裁剪</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"variable\">$bool</span> = Storage::disk(<span class=\"string\">&#x27;public&#x27;</span>)-&gt;put(<span class=\"variable\">$filename</span>, file_get_contents(<span class=\"variable\">$Images</span>));</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>以上代码只是在文件上传功能中添加了一小部分，其中添加变量$Images用来保存裁剪后的图片名称，因为临时的绝对路径中图片的后缀是.tmp，在调用Image类的时候save方法保存的文件后缀不能用图片类型以外的后缀，故只能自行添加。resize方法用于重新设定图片大小，连接save方法将裁剪的图片进行保存。</p>\n<p>更多使用方法请参考 Intervention Image 官方文档：<a href=\"http://image.intervention.io/\">http://image.intervention.io/</a></p>\n"},{"title":"Laravel使用（七牛云存储图片）","date":"2018-05-26T09:06:19.000Z","_content":"**laravel5结合七牛云存储图片**\n\n首先去官网注册账号以及完成实名认证[https://www.qiniu.com/](https://www.qiniu.com/)\n\n1.新建对象存储\n\n![](https://i.imgur.com/KIE1F52.png)\n\n2.查询我们所需要的数据\n\n![](https://i.imgur.com/KN0egkT.png)\n\n3.借助第三方集成扩展处理上传\n\n![](https://i.imgur.com/F4Mj0VA.png)\n\n4.然后就是修改普通的上传代码\n\n存储图片：\n```php\n    Storage::disk('qiniu')->put($newFileName, File::get($request->file('file')->path()));\n```\n获取图片地址：\n```php\n    'path' => Storage::disk('qiniu')->getDriver()->downloadUrl($newFileName)\n```\n当然，也可以先把图片保存在本地再上传：\n```php\n\t\tif ($request->hasFile('image')) {\n\t\t\t$file = $data['image'];\n\t\t\t//判断文件是否上传成功\n\t\t\tif ($file->isValid()) {\n\t\t\t\t//原文件名\n\t\t\t\t$originalName = $file->getClientOriginalName();\n\t\t\t\t//扩展名\n\t\t\t\t$ext = $file->getClientOriginalExtension();\n\t\t\t\t//MimeType\n\t\t\t\t$type = $file->getClientMimeType();\n\t\t\t\t//临时绝对路径\n\t\t\t\t$realPath = $file->getRealPath();\n\n\t\t\t\t$Images = substr($realPath, 0, -4) . '.' . $ext; //设置裁剪图片保存的名称\n\n\t\t\t\t$filename = uniqid() . '.' . $ext;\n\n\t\t\t\tImage::make($realPath)->resize(1920, 260)->save($Images); //图片裁剪\n\n\t\t\t\t$bool = Storage::disk('public')->put($filename, file_get_contents($Images));\n   \t\t\t\tStorage::disk('qiniu')->put($filename, $realPath);\n\t\t\t\t//判断是否上传成功\n\t\t\t\tif ($bool) {\n\t\t\t\t\t$data['image'] = Storage::disk('public')->url($filename);\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n```\n","source":"_posts/Laravel-cloudfile.md","raw":"---\ntitle: Laravel使用（七牛云存储图片）\ndate: 2018-05-26 17:06:19\ncategories: PHP\ntags:\n\t- laravel\n\t- 图片云存储\n---\n**laravel5结合七牛云存储图片**\n\n首先去官网注册账号以及完成实名认证[https://www.qiniu.com/](https://www.qiniu.com/)\n\n1.新建对象存储\n\n![](https://i.imgur.com/KIE1F52.png)\n\n2.查询我们所需要的数据\n\n![](https://i.imgur.com/KN0egkT.png)\n\n3.借助第三方集成扩展处理上传\n\n![](https://i.imgur.com/F4Mj0VA.png)\n\n4.然后就是修改普通的上传代码\n\n存储图片：\n```php\n    Storage::disk('qiniu')->put($newFileName, File::get($request->file('file')->path()));\n```\n获取图片地址：\n```php\n    'path' => Storage::disk('qiniu')->getDriver()->downloadUrl($newFileName)\n```\n当然，也可以先把图片保存在本地再上传：\n```php\n\t\tif ($request->hasFile('image')) {\n\t\t\t$file = $data['image'];\n\t\t\t//判断文件是否上传成功\n\t\t\tif ($file->isValid()) {\n\t\t\t\t//原文件名\n\t\t\t\t$originalName = $file->getClientOriginalName();\n\t\t\t\t//扩展名\n\t\t\t\t$ext = $file->getClientOriginalExtension();\n\t\t\t\t//MimeType\n\t\t\t\t$type = $file->getClientMimeType();\n\t\t\t\t//临时绝对路径\n\t\t\t\t$realPath = $file->getRealPath();\n\n\t\t\t\t$Images = substr($realPath, 0, -4) . '.' . $ext; //设置裁剪图片保存的名称\n\n\t\t\t\t$filename = uniqid() . '.' . $ext;\n\n\t\t\t\tImage::make($realPath)->resize(1920, 260)->save($Images); //图片裁剪\n\n\t\t\t\t$bool = Storage::disk('public')->put($filename, file_get_contents($Images));\n   \t\t\t\tStorage::disk('qiniu')->put($filename, $realPath);\n\t\t\t\t//判断是否上传成功\n\t\t\t\tif ($bool) {\n\t\t\t\t\t$data['image'] = Storage::disk('public')->url($filename);\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n```\n","slug":"Laravel-cloudfile","published":1,"updated":"2021-11-25T03:28:13.073Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwn8bfxo000utwnfhizl8c8r","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p><strong>laravel5结合七牛云存储图片</strong></p>\n<p>首先去官网注册账号以及完成实名认证<a href=\"https://www.qiniu.com/\">https://www.qiniu.com/</a></p>\n<p>1.新建对象存储</p>\n<p><img src=\"https://i.imgur.com/KIE1F52.png\"></p>\n<p>2.查询我们所需要的数据</p>\n<p><img src=\"https://i.imgur.com/KN0egkT.png\"></p>\n<p>3.借助第三方集成扩展处理上传</p>\n<p><img src=\"https://i.imgur.com/F4Mj0VA.png\"></p>\n<p>4.然后就是修改普通的上传代码</p>\n<p>存储图片：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Storage::disk(<span class=\"string\">&#x27;qiniu&#x27;</span>)-&gt;put(<span class=\"variable\">$newFileName</span>, File::get(<span class=\"variable\">$request</span>-&gt;file(<span class=\"string\">&#x27;file&#x27;</span>)-&gt;path()));</span><br></pre></td></tr></table></figure>\n<p>获取图片地址：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;path&#x27;</span> =&gt; Storage::disk(<span class=\"string\">&#x27;qiniu&#x27;</span>)-&gt;getDriver()-&gt;downloadUrl(<span class=\"variable\">$newFileName</span>)</span><br></pre></td></tr></table></figure>\n<p>当然，也可以先把图片保存在本地再上传：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$request</span>-&gt;hasFile(<span class=\"string\">&#x27;image&#x27;</span>)) &#123;</span><br><span class=\"line\">\t<span class=\"variable\">$file</span> = <span class=\"variable\">$data</span>[<span class=\"string\">&#x27;image&#x27;</span>];</span><br><span class=\"line\">\t<span class=\"comment\">//判断文件是否上传成功</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"variable\">$file</span>-&gt;isValid()) &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//原文件名</span></span><br><span class=\"line\">\t\t<span class=\"variable\">$originalName</span> = <span class=\"variable\">$file</span>-&gt;getClientOriginalName();</span><br><span class=\"line\">\t\t<span class=\"comment\">//扩展名</span></span><br><span class=\"line\">\t\t<span class=\"variable\">$ext</span> = <span class=\"variable\">$file</span>-&gt;getClientOriginalExtension();</span><br><span class=\"line\">\t\t<span class=\"comment\">//MimeType</span></span><br><span class=\"line\">\t\t<span class=\"variable\">$type</span> = <span class=\"variable\">$file</span>-&gt;getClientMimeType();</span><br><span class=\"line\">\t\t<span class=\"comment\">//临时绝对路径</span></span><br><span class=\"line\">\t\t<span class=\"variable\">$realPath</span> = <span class=\"variable\">$file</span>-&gt;getRealPath();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"variable\">$Images</span> = substr(<span class=\"variable\">$realPath</span>, <span class=\"number\">0</span>, -<span class=\"number\">4</span>) . <span class=\"string\">&#x27;.&#x27;</span> . <span class=\"variable\">$ext</span>; <span class=\"comment\">//设置裁剪图片保存的名称</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"variable\">$filename</span> = uniqid() . <span class=\"string\">&#x27;.&#x27;</span> . <span class=\"variable\">$ext</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tImage::make(<span class=\"variable\">$realPath</span>)-&gt;resize(<span class=\"number\">1920</span>, <span class=\"number\">260</span>)-&gt;save(<span class=\"variable\">$Images</span>); <span class=\"comment\">//图片裁剪</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"variable\">$bool</span> = Storage::disk(<span class=\"string\">&#x27;public&#x27;</span>)-&gt;put(<span class=\"variable\">$filename</span>, file_get_contents(<span class=\"variable\">$Images</span>));</span><br><span class=\"line\"> \t\t\t\tStorage::disk(<span class=\"string\">&#x27;qiniu&#x27;</span>)-&gt;put(<span class=\"variable\">$filename</span>, <span class=\"variable\">$realPath</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">//判断是否上传成功</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"variable\">$bool</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"variable\">$data</span>[<span class=\"string\">&#x27;image&#x27;</span>] = Storage::disk(<span class=\"string\">&#x27;public&#x27;</span>)-&gt;url(<span class=\"variable\">$filename</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>laravel5结合七牛云存储图片</strong></p>\n<p>首先去官网注册账号以及完成实名认证<a href=\"https://www.qiniu.com/\">https://www.qiniu.com/</a></p>\n<p>1.新建对象存储</p>\n<p><img src=\"https://i.imgur.com/KIE1F52.png\"></p>\n<p>2.查询我们所需要的数据</p>\n<p><img src=\"https://i.imgur.com/KN0egkT.png\"></p>\n<p>3.借助第三方集成扩展处理上传</p>\n<p><img src=\"https://i.imgur.com/F4Mj0VA.png\"></p>\n<p>4.然后就是修改普通的上传代码</p>\n<p>存储图片：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Storage::disk(<span class=\"string\">&#x27;qiniu&#x27;</span>)-&gt;put(<span class=\"variable\">$newFileName</span>, File::get(<span class=\"variable\">$request</span>-&gt;file(<span class=\"string\">&#x27;file&#x27;</span>)-&gt;path()));</span><br></pre></td></tr></table></figure>\n<p>获取图片地址：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;path&#x27;</span> =&gt; Storage::disk(<span class=\"string\">&#x27;qiniu&#x27;</span>)-&gt;getDriver()-&gt;downloadUrl(<span class=\"variable\">$newFileName</span>)</span><br></pre></td></tr></table></figure>\n<p>当然，也可以先把图片保存在本地再上传：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$request</span>-&gt;hasFile(<span class=\"string\">&#x27;image&#x27;</span>)) &#123;</span><br><span class=\"line\">\t<span class=\"variable\">$file</span> = <span class=\"variable\">$data</span>[<span class=\"string\">&#x27;image&#x27;</span>];</span><br><span class=\"line\">\t<span class=\"comment\">//判断文件是否上传成功</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"variable\">$file</span>-&gt;isValid()) &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//原文件名</span></span><br><span class=\"line\">\t\t<span class=\"variable\">$originalName</span> = <span class=\"variable\">$file</span>-&gt;getClientOriginalName();</span><br><span class=\"line\">\t\t<span class=\"comment\">//扩展名</span></span><br><span class=\"line\">\t\t<span class=\"variable\">$ext</span> = <span class=\"variable\">$file</span>-&gt;getClientOriginalExtension();</span><br><span class=\"line\">\t\t<span class=\"comment\">//MimeType</span></span><br><span class=\"line\">\t\t<span class=\"variable\">$type</span> = <span class=\"variable\">$file</span>-&gt;getClientMimeType();</span><br><span class=\"line\">\t\t<span class=\"comment\">//临时绝对路径</span></span><br><span class=\"line\">\t\t<span class=\"variable\">$realPath</span> = <span class=\"variable\">$file</span>-&gt;getRealPath();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"variable\">$Images</span> = substr(<span class=\"variable\">$realPath</span>, <span class=\"number\">0</span>, -<span class=\"number\">4</span>) . <span class=\"string\">&#x27;.&#x27;</span> . <span class=\"variable\">$ext</span>; <span class=\"comment\">//设置裁剪图片保存的名称</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"variable\">$filename</span> = uniqid() . <span class=\"string\">&#x27;.&#x27;</span> . <span class=\"variable\">$ext</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tImage::make(<span class=\"variable\">$realPath</span>)-&gt;resize(<span class=\"number\">1920</span>, <span class=\"number\">260</span>)-&gt;save(<span class=\"variable\">$Images</span>); <span class=\"comment\">//图片裁剪</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"variable\">$bool</span> = Storage::disk(<span class=\"string\">&#x27;public&#x27;</span>)-&gt;put(<span class=\"variable\">$filename</span>, file_get_contents(<span class=\"variable\">$Images</span>));</span><br><span class=\"line\"> \t\t\t\tStorage::disk(<span class=\"string\">&#x27;qiniu&#x27;</span>)-&gt;put(<span class=\"variable\">$filename</span>, <span class=\"variable\">$realPath</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">//判断是否上传成功</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"variable\">$bool</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"variable\">$data</span>[<span class=\"string\">&#x27;image&#x27;</span>] = Storage::disk(<span class=\"string\">&#x27;public&#x27;</span>)-&gt;url(<span class=\"variable\">$filename</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"Laravel使用（检测移动端并加载视图）","date":"2018-06-13T06:25:18.000Z","_content":"**1.有的网站无法用响应式来完成移动端的浏览效果，就要写一套移动端的代码来代替原有视图模板**\n首先需要添加支持设备识别的Laravel扩展，这里以Jenssegers为例：\n\n添加扩展：\n```php\n    composer require jenssegers/agent\n```\n方案一：直接通过修改配置文件中的`config/views.php`文件，达到修改view函数的默认视图路径。\n```php\n    <?php\n    \n    use Jenssegers\\Agent\\Agent as Agent;\n    $Agent = new Agent();\n    // 判断是否是移动端\n    if ($Agent->isMobile()) {\n    // 是移动端则指向mobile目录\n    $viewPath = 'mobile';\n    } else {\n    // 否则指向默认目录\n    $viewPath = 'views';\n    }\n    \n    return array(\n    'paths' => array($viewPath),\n```\n同时在resources目录下新建mobile文件夹并保持与views文件夹下相同目录结构。\n\n这样做的好处就是无须修改控制层任何代码，所有在PC端的数据都能完整的应用到移动端，操作便捷。但是如果说移动端渲染的数据与PC端不一致，则可能需要在控制层进行逻辑调整。\n\n方案二：注册一个服务提供者用于判断是否是移动端，然后在模板中判断是否为移动端来显示不同的样式\n\n创建用于判断是否是移动端的服务提供者：\n```php\n    php artisan make:provider AgentServiceProvider\n```\n在`config/app.php`中注册服务\n```php\n    'providers' => [\n    App\\Providers\\AgentServiceProvider::class,\n    ...\n```\n在`app/Providers/AgentServiceProvider.php`中\n```php\n    <?php\n    \n    namespace App\\Providers;\n    \n    use View;\n    use Jenssegers\\Agent\\Agent;\n    use Illuminate\\Support\\ServiceProvider;\n    \n    class AgentServiceProvider extends ServiceProvider\n    {\n    public function boot()\n    {\n    $agent = new Agent();//Agent对象用于判断移动设备\n    \n    View::share('agent', $agent);//用于在所有视图层通过对象判断设备\n    }\n    \n    public function register()\n    {\n    //\n    }\n    }\n```\n然后在视图层可直接调用对象的方法来判断设备：\n```php\n    @if ($agent->isMobile())\n    \n    显示移动设备的内容\n    \n    @endif\n```\n这种方案的好处就是可以将移动端模板与PC端都放在一个模板里面，避免重写第二套模板，同时可以根据需求来判断哪些页面需要判断移动端哪些不需要，灵活性比较强。\n\n方案三：在控制器return视图的时候调用扩展判断设备来显示不同的模板。\n```php\n    use View;\n    use Jenssegers\\Agent\\Agent;\n    ...\n    public function index() {\n    $agent = new Agent();\n     return View::make( ($agent->isMobile() ? 'mobile' : 'desktop') . '.your-view-name' );\n\t}\n```\n那么视图层结构应该是这个样子：\n```php\n    ├── views\n    |   ├── mobile\n    |   |   ├── main.blade.php\n    |   └── desktop\n    |   ├── main.blade.php\n```","source":"_posts/Laravel-mobile.md","raw":"---\ntitle: Laravel使用（检测移动端并加载视图）\ndate: 2018-06-13 14:25:18\ncategories: PHP\ntags:\n\t- laravel\n\t- views\n---\n**1.有的网站无法用响应式来完成移动端的浏览效果，就要写一套移动端的代码来代替原有视图模板**\n首先需要添加支持设备识别的Laravel扩展，这里以Jenssegers为例：\n\n添加扩展：\n```php\n    composer require jenssegers/agent\n```\n方案一：直接通过修改配置文件中的`config/views.php`文件，达到修改view函数的默认视图路径。\n```php\n    <?php\n    \n    use Jenssegers\\Agent\\Agent as Agent;\n    $Agent = new Agent();\n    // 判断是否是移动端\n    if ($Agent->isMobile()) {\n    // 是移动端则指向mobile目录\n    $viewPath = 'mobile';\n    } else {\n    // 否则指向默认目录\n    $viewPath = 'views';\n    }\n    \n    return array(\n    'paths' => array($viewPath),\n```\n同时在resources目录下新建mobile文件夹并保持与views文件夹下相同目录结构。\n\n这样做的好处就是无须修改控制层任何代码，所有在PC端的数据都能完整的应用到移动端，操作便捷。但是如果说移动端渲染的数据与PC端不一致，则可能需要在控制层进行逻辑调整。\n\n方案二：注册一个服务提供者用于判断是否是移动端，然后在模板中判断是否为移动端来显示不同的样式\n\n创建用于判断是否是移动端的服务提供者：\n```php\n    php artisan make:provider AgentServiceProvider\n```\n在`config/app.php`中注册服务\n```php\n    'providers' => [\n    App\\Providers\\AgentServiceProvider::class,\n    ...\n```\n在`app/Providers/AgentServiceProvider.php`中\n```php\n    <?php\n    \n    namespace App\\Providers;\n    \n    use View;\n    use Jenssegers\\Agent\\Agent;\n    use Illuminate\\Support\\ServiceProvider;\n    \n    class AgentServiceProvider extends ServiceProvider\n    {\n    public function boot()\n    {\n    $agent = new Agent();//Agent对象用于判断移动设备\n    \n    View::share('agent', $agent);//用于在所有视图层通过对象判断设备\n    }\n    \n    public function register()\n    {\n    //\n    }\n    }\n```\n然后在视图层可直接调用对象的方法来判断设备：\n```php\n    @if ($agent->isMobile())\n    \n    显示移动设备的内容\n    \n    @endif\n```\n这种方案的好处就是可以将移动端模板与PC端都放在一个模板里面，避免重写第二套模板，同时可以根据需求来判断哪些页面需要判断移动端哪些不需要，灵活性比较强。\n\n方案三：在控制器return视图的时候调用扩展判断设备来显示不同的模板。\n```php\n    use View;\n    use Jenssegers\\Agent\\Agent;\n    ...\n    public function index() {\n    $agent = new Agent();\n     return View::make( ($agent->isMobile() ? 'mobile' : 'desktop') . '.your-view-name' );\n\t}\n```\n那么视图层结构应该是这个样子：\n```php\n    ├── views\n    |   ├── mobile\n    |   |   ├── main.blade.php\n    |   └── desktop\n    |   ├── main.blade.php\n```","slug":"Laravel-mobile","published":1,"updated":"2021-11-25T03:28:13.074Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwn8bfxq000wtwnfbkeh5ssw","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p><strong>1.有的网站无法用响应式来完成移动端的浏览效果，就要写一套移动端的代码来代替原有视图模板</strong><br>首先需要添加支持设备识别的Laravel扩展，这里以Jenssegers为例：</p>\n<p>添加扩展：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">composer <span class=\"keyword\">require</span> jenssegers/agent</span><br></pre></td></tr></table></figure>\n<p>方案一：直接通过修改配置文件中的<code>config/views.php</code>文件，达到修改view函数的默认视图路径。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Jenssegers</span>\\<span class=\"title\">Agent</span>\\<span class=\"title\">Agent</span> <span class=\"title\">as</span> <span class=\"title\">Agent</span>;</span><br><span class=\"line\"><span class=\"variable\">$Agent</span> = <span class=\"keyword\">new</span> Agent();</span><br><span class=\"line\"><span class=\"comment\">// 判断是否是移动端</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$Agent</span>-&gt;isMobile()) &#123;</span><br><span class=\"line\"><span class=\"comment\">// 是移动端则指向mobile目录</span></span><br><span class=\"line\"><span class=\"variable\">$viewPath</span> = <span class=\"string\">&#x27;mobile&#x27;</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"><span class=\"comment\">// 否则指向默认目录</span></span><br><span class=\"line\"><span class=\"variable\">$viewPath</span> = <span class=\"string\">&#x27;views&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"keyword\">array</span>(</span><br><span class=\"line\"><span class=\"string\">&#x27;paths&#x27;</span> =&gt; <span class=\"keyword\">array</span>(<span class=\"variable\">$viewPath</span>),</span><br></pre></td></tr></table></figure>\n<p>同时在resources目录下新建mobile文件夹并保持与views文件夹下相同目录结构。</p>\n<p>这样做的好处就是无须修改控制层任何代码，所有在PC端的数据都能完整的应用到移动端，操作便捷。但是如果说移动端渲染的数据与PC端不一致，则可能需要在控制层进行逻辑调整。</p>\n<p>方案二：注册一个服务提供者用于判断是否是移动端，然后在模板中判断是否为移动端来显示不同的样式</p>\n<p>创建用于判断是否是移动端的服务提供者：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan make:provider AgentServiceProvider</span><br></pre></td></tr></table></figure>\n<p>在<code>config/app.php</code>中注册服务</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;providers&#x27;</span> =&gt; [</span><br><span class=\"line\">App\\Providers\\AgentServiceProvider::class,</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p>在<code>app/Providers/AgentServiceProvider.php</code>中</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">App</span>\\<span class=\"title\">Providers</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">View</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Jenssegers</span>\\<span class=\"title\">Agent</span>\\<span class=\"title\">Agent</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Illuminate</span>\\<span class=\"title\">Support</span>\\<span class=\"title\">ServiceProvider</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AgentServiceProvider</span> <span class=\"keyword\">extends</span> <span class=\"title\">ServiceProvider</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">boot</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"><span class=\"variable\">$agent</span> = <span class=\"keyword\">new</span> Agent();<span class=\"comment\">//Agent对象用于判断移动设备</span></span><br><span class=\"line\"></span><br><span class=\"line\">View::share(<span class=\"string\">&#x27;agent&#x27;</span>, <span class=\"variable\">$agent</span>);<span class=\"comment\">//用于在所有视图层通过对象判断设备</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">register</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后在视图层可直接调用对象的方法来判断设备：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">if</span> (<span class=\"variable\">$agent</span>-&gt;isMobile())</span><br><span class=\"line\"></span><br><span class=\"line\">显示移动设备的内容</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"keyword\">endif</span></span><br></pre></td></tr></table></figure>\n<p>这种方案的好处就是可以将移动端模板与PC端都放在一个模板里面，避免重写第二套模板，同时可以根据需求来判断哪些页面需要判断移动端哪些不需要，灵活性比较强。</p>\n<p>方案三：在控制器return视图的时候调用扩展判断设备来显示不同的模板。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"keyword\">use</span> <span class=\"title\">View</span>;</span><br><span class=\"line\">   <span class=\"keyword\">use</span> <span class=\"title\">Jenssegers</span>\\<span class=\"title\">Agent</span>\\<span class=\"title\">Agent</span>;</span><br><span class=\"line\">   ...</span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">   <span class=\"variable\">$agent</span> = <span class=\"keyword\">new</span> Agent();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> View::make( (<span class=\"variable\">$agent</span>-&gt;isMobile() ? <span class=\"string\">&#x27;mobile&#x27;</span> : <span class=\"string\">&#x27;desktop&#x27;</span>) . <span class=\"string\">&#x27;.your-view-name&#x27;</span> );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>那么视图层结构应该是这个样子：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├── views</span><br><span class=\"line\">|   ├── mobile</span><br><span class=\"line\">|   |   ├── main.blade.php</span><br><span class=\"line\">|   └── desktop</span><br><span class=\"line\">|   ├── main.blade.php</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p><strong>1.有的网站无法用响应式来完成移动端的浏览效果，就要写一套移动端的代码来代替原有视图模板</strong><br>首先需要添加支持设备识别的Laravel扩展，这里以Jenssegers为例：</p>\n<p>添加扩展：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">composer <span class=\"keyword\">require</span> jenssegers/agent</span><br></pre></td></tr></table></figure>\n<p>方案一：直接通过修改配置文件中的<code>config/views.php</code>文件，达到修改view函数的默认视图路径。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Jenssegers</span>\\<span class=\"title\">Agent</span>\\<span class=\"title\">Agent</span> <span class=\"title\">as</span> <span class=\"title\">Agent</span>;</span><br><span class=\"line\"><span class=\"variable\">$Agent</span> = <span class=\"keyword\">new</span> Agent();</span><br><span class=\"line\"><span class=\"comment\">// 判断是否是移动端</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$Agent</span>-&gt;isMobile()) &#123;</span><br><span class=\"line\"><span class=\"comment\">// 是移动端则指向mobile目录</span></span><br><span class=\"line\"><span class=\"variable\">$viewPath</span> = <span class=\"string\">&#x27;mobile&#x27;</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"><span class=\"comment\">// 否则指向默认目录</span></span><br><span class=\"line\"><span class=\"variable\">$viewPath</span> = <span class=\"string\">&#x27;views&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"keyword\">array</span>(</span><br><span class=\"line\"><span class=\"string\">&#x27;paths&#x27;</span> =&gt; <span class=\"keyword\">array</span>(<span class=\"variable\">$viewPath</span>),</span><br></pre></td></tr></table></figure>\n<p>同时在resources目录下新建mobile文件夹并保持与views文件夹下相同目录结构。</p>\n<p>这样做的好处就是无须修改控制层任何代码，所有在PC端的数据都能完整的应用到移动端，操作便捷。但是如果说移动端渲染的数据与PC端不一致，则可能需要在控制层进行逻辑调整。</p>\n<p>方案二：注册一个服务提供者用于判断是否是移动端，然后在模板中判断是否为移动端来显示不同的样式</p>\n<p>创建用于判断是否是移动端的服务提供者：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan make:provider AgentServiceProvider</span><br></pre></td></tr></table></figure>\n<p>在<code>config/app.php</code>中注册服务</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;providers&#x27;</span> =&gt; [</span><br><span class=\"line\">App\\Providers\\AgentServiceProvider::class,</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p>在<code>app/Providers/AgentServiceProvider.php</code>中</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">App</span>\\<span class=\"title\">Providers</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">View</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Jenssegers</span>\\<span class=\"title\">Agent</span>\\<span class=\"title\">Agent</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Illuminate</span>\\<span class=\"title\">Support</span>\\<span class=\"title\">ServiceProvider</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AgentServiceProvider</span> <span class=\"keyword\">extends</span> <span class=\"title\">ServiceProvider</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">boot</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"><span class=\"variable\">$agent</span> = <span class=\"keyword\">new</span> Agent();<span class=\"comment\">//Agent对象用于判断移动设备</span></span><br><span class=\"line\"></span><br><span class=\"line\">View::share(<span class=\"string\">&#x27;agent&#x27;</span>, <span class=\"variable\">$agent</span>);<span class=\"comment\">//用于在所有视图层通过对象判断设备</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">register</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后在视图层可直接调用对象的方法来判断设备：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">if</span> (<span class=\"variable\">$agent</span>-&gt;isMobile())</span><br><span class=\"line\"></span><br><span class=\"line\">显示移动设备的内容</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"keyword\">endif</span></span><br></pre></td></tr></table></figure>\n<p>这种方案的好处就是可以将移动端模板与PC端都放在一个模板里面，避免重写第二套模板，同时可以根据需求来判断哪些页面需要判断移动端哪些不需要，灵活性比较强。</p>\n<p>方案三：在控制器return视图的时候调用扩展判断设备来显示不同的模板。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"keyword\">use</span> <span class=\"title\">View</span>;</span><br><span class=\"line\">   <span class=\"keyword\">use</span> <span class=\"title\">Jenssegers</span>\\<span class=\"title\">Agent</span>\\<span class=\"title\">Agent</span>;</span><br><span class=\"line\">   ...</span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">   <span class=\"variable\">$agent</span> = <span class=\"keyword\">new</span> Agent();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> View::make( (<span class=\"variable\">$agent</span>-&gt;isMobile() ? <span class=\"string\">&#x27;mobile&#x27;</span> : <span class=\"string\">&#x27;desktop&#x27;</span>) . <span class=\"string\">&#x27;.your-view-name&#x27;</span> );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>那么视图层结构应该是这个样子：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├── views</span><br><span class=\"line\">|   ├── mobile</span><br><span class=\"line\">|   |   ├── main.blade.php</span><br><span class=\"line\">|   └── desktop</span><br><span class=\"line\">|   ├── main.blade.php</span><br></pre></td></tr></table></figure>"},{"title":"Laravel使用（关联数据预加载）","_content":"**1.预加载**\n应用场景：在一个商品表里面的商品分类字段category_id,要在商品分类列表里面直接获取到分类的名字，那么必须要从商品分类表product_category里通过category_id来获取category_name。\n\n首先获取商品表数据：\n```php\n    \tpublic function index() {\n    \t\t$product = Product::with('category')->paginate(15);\n    \t\t$assign = compact('product');\n    \t\treturn view('admin.product.index', $assign);\n    \t}\n```\n其中with里面就是预加载的分类表，在这之前需要在商品的模型中添加对应的关系：\n```php\n\t/**\n\t * 关联分类  Models/Product.php\n\t */\n\tpublic function category() {\n\t\treturn $this->hasOne(Product_category::class, 'category_id', 'category_id')->withDefault(function ($category) {\n\t\t\t$category->category_name = '未分类';\n\t\t});\n\t}\n```\n其中hasOne表示一对一，即一个商品对应一个分类，通过分类id在父级中找到对应的分类名。\n相关的还有一对多（hasMany），多对多（belongsToMany）等。\nhasOne第一个参数表示相关联的模型，第二个参数默认通过检查关系方法(category)的名称并使用 _id 作为后缀名来确定默认外键名称的，即`category_id`。第三个参数是父级模型没有使用 id 作为主键，或者是希望用不同的字段来连接子级模型，则可以通过给 hasOne 方法传递第三个参数的形式指定父级数据表的自定义键。因为我在分类表指定的是category_id作为主键，所以需要配置第三个参数。\n\n添加withDefault方法是当在父级没有找到查询到结果返回空的模型。使用闭包函数来定义一个未查询到的分类名称。\n\n关于模型关联的一些其他操作，可参考[https://www.kancloud.cn/iwzh/laravel_doc_zh-5-5/400324#querying-relationship-absence](https://www.kancloud.cn/iwzh/laravel_doc_zh-5-5/400324#querying-relationship-absence)\n\n**2.增加表单请求次数限制**\n\n比如一个用户一天只能登陆10次\n\n可以使用访问频率限制的中间件来实现，该中间件已经内置到了框架中：\n```php\n    Route::post('update', 'UserController@update')->middleware('throttle:1,1440');;\n```\n以上路由表示用户请求更新数据为1440分钟只能更新1次，即一天更新一次，否则将在浏览器显示429的错误码，即访问次数频繁。同时可以自定义错误页面来修改默认的错误提示信息。\n\n**3.错误页面获取缓存数据**\n\n因为错误页面没有经过数据渲染，所以在App/Providers里服务提供者分配的通用缓存数据无法通过变量获取，但仍然可以通过视图层使用Cache门面来获取缓存数据：\n```php\n    @foreach(Cache::get('carousel') as $key=>$value)\n\n    <li data-target=\"#carousel\" @if($key==0)class=\"active\"@endif data-slide-to=\"{{$key}}\"></li>\n    @endforeach\n```\n","source":"_posts/Laravel-prestrain.md","raw":"---\ntitle: Laravel使用（关联数据预加载）\ncategories: PHP\ntags:\n\t- laravel\n\t- 预加载\n---\n**1.预加载**\n应用场景：在一个商品表里面的商品分类字段category_id,要在商品分类列表里面直接获取到分类的名字，那么必须要从商品分类表product_category里通过category_id来获取category_name。\n\n首先获取商品表数据：\n```php\n    \tpublic function index() {\n    \t\t$product = Product::with('category')->paginate(15);\n    \t\t$assign = compact('product');\n    \t\treturn view('admin.product.index', $assign);\n    \t}\n```\n其中with里面就是预加载的分类表，在这之前需要在商品的模型中添加对应的关系：\n```php\n\t/**\n\t * 关联分类  Models/Product.php\n\t */\n\tpublic function category() {\n\t\treturn $this->hasOne(Product_category::class, 'category_id', 'category_id')->withDefault(function ($category) {\n\t\t\t$category->category_name = '未分类';\n\t\t});\n\t}\n```\n其中hasOne表示一对一，即一个商品对应一个分类，通过分类id在父级中找到对应的分类名。\n相关的还有一对多（hasMany），多对多（belongsToMany）等。\nhasOne第一个参数表示相关联的模型，第二个参数默认通过检查关系方法(category)的名称并使用 _id 作为后缀名来确定默认外键名称的，即`category_id`。第三个参数是父级模型没有使用 id 作为主键，或者是希望用不同的字段来连接子级模型，则可以通过给 hasOne 方法传递第三个参数的形式指定父级数据表的自定义键。因为我在分类表指定的是category_id作为主键，所以需要配置第三个参数。\n\n添加withDefault方法是当在父级没有找到查询到结果返回空的模型。使用闭包函数来定义一个未查询到的分类名称。\n\n关于模型关联的一些其他操作，可参考[https://www.kancloud.cn/iwzh/laravel_doc_zh-5-5/400324#querying-relationship-absence](https://www.kancloud.cn/iwzh/laravel_doc_zh-5-5/400324#querying-relationship-absence)\n\n**2.增加表单请求次数限制**\n\n比如一个用户一天只能登陆10次\n\n可以使用访问频率限制的中间件来实现，该中间件已经内置到了框架中：\n```php\n    Route::post('update', 'UserController@update')->middleware('throttle:1,1440');;\n```\n以上路由表示用户请求更新数据为1440分钟只能更新1次，即一天更新一次，否则将在浏览器显示429的错误码，即访问次数频繁。同时可以自定义错误页面来修改默认的错误提示信息。\n\n**3.错误页面获取缓存数据**\n\n因为错误页面没有经过数据渲染，所以在App/Providers里服务提供者分配的通用缓存数据无法通过变量获取，但仍然可以通过视图层使用Cache门面来获取缓存数据：\n```php\n    @foreach(Cache::get('carousel') as $key=>$value)\n\n    <li data-target=\"#carousel\" @if($key==0)class=\"active\"@endif data-slide-to=\"{{$key}}\"></li>\n    @endforeach\n```\n","slug":"Laravel-prestrain","published":1,"date":"2021-11-25T03:28:13.075Z","updated":"2021-11-25T03:28:13.075Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwn8bfxr000ztwnfd0dyczmd","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p><strong>1.预加载</strong><br>应用场景：在一个商品表里面的商品分类字段category_id,要在商品分类列表里面直接获取到分类的名字，那么必须要从商品分类表product_category里通过category_id来获取category_name。</p>\n<p>首先获取商品表数据：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"variable\">$product</span> = Product::with(<span class=\"string\">&#x27;category&#x27;</span>)-&gt;paginate(<span class=\"number\">15</span>);</span><br><span class=\"line\">\t<span class=\"variable\">$assign</span> = compact(<span class=\"string\">&#x27;product&#x27;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> view(<span class=\"string\">&#x27;admin.product.index&#x27;</span>, <span class=\"variable\">$assign</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其中with里面就是预加载的分类表，在这之前需要在商品的模型中添加对应的关系：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 关联分类  Models/Product.php</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">category</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;hasOne(Product_category::class, <span class=\"string\">&#x27;category_id&#x27;</span>, <span class=\"string\">&#x27;category_id&#x27;</span>)-&gt;withDefault(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"variable\">$category</span></span>) </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"variable\">$category</span>-&gt;category_name = <span class=\"string\">&#x27;未分类&#x27;</span>;</span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其中hasOne表示一对一，即一个商品对应一个分类，通过分类id在父级中找到对应的分类名。<br>相关的还有一对多（hasMany），多对多（belongsToMany）等。<br>hasOne第一个参数表示相关联的模型，第二个参数默认通过检查关系方法(category)的名称并使用 _id 作为后缀名来确定默认外键名称的，即<code>category_id</code>。第三个参数是父级模型没有使用 id 作为主键，或者是希望用不同的字段来连接子级模型，则可以通过给 hasOne 方法传递第三个参数的形式指定父级数据表的自定义键。因为我在分类表指定的是category_id作为主键，所以需要配置第三个参数。</p>\n<p>添加withDefault方法是当在父级没有找到查询到结果返回空的模型。使用闭包函数来定义一个未查询到的分类名称。</p>\n<p>关于模型关联的一些其他操作，可参考<a href=\"https://www.kancloud.cn/iwzh/laravel_doc_zh-5-5/400324#querying-relationship-absence\">https://www.kancloud.cn/iwzh/laravel_doc_zh-5-5/400324#querying-relationship-absence</a></p>\n<p><strong>2.增加表单请求次数限制</strong></p>\n<p>比如一个用户一天只能登陆10次</p>\n<p>可以使用访问频率限制的中间件来实现，该中间件已经内置到了框架中：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Route::post(<span class=\"string\">&#x27;update&#x27;</span>, <span class=\"string\">&#x27;UserController@update&#x27;</span>)-&gt;middleware(<span class=\"string\">&#x27;throttle:1,1440&#x27;</span>);;</span><br></pre></td></tr></table></figure>\n<p>以上路由表示用户请求更新数据为1440分钟只能更新1次，即一天更新一次，否则将在浏览器显示429的错误码，即访问次数频繁。同时可以自定义错误页面来修改默认的错误提示信息。</p>\n<p><strong>3.错误页面获取缓存数据</strong></p>\n<p>因为错误页面没有经过数据渲染，所以在App/Providers里服务提供者分配的通用缓存数据无法通过变量获取，但仍然可以通过视图层使用Cache门面来获取缓存数据：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">foreach</span>(Cache::get(<span class=\"string\">&#x27;carousel&#x27;</span>) <span class=\"keyword\">as</span> <span class=\"variable\">$key</span>=&gt;<span class=\"variable\">$value</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li data-target=<span class=\"string\">&quot;#carousel&quot;</span> @<span class=\"keyword\">if</span>(<span class=\"variable\">$key</span>==<span class=\"number\">0</span>)<span class=\"class\"><span class=\"keyword\">class</span>=&quot;<span class=\"title\">active</span>&quot;@<span class=\"title\">endif</span> <span class=\"title\">data</span>-<span class=\"title\">slide</span>-<span class=\"title\">to</span>=&quot;</span>&#123;&#123;<span class=\"variable\">$key</span>&#125;&#125;<span class=\"string\">&quot;&gt;&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">@endforeach</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>1.预加载</strong><br>应用场景：在一个商品表里面的商品分类字段category_id,要在商品分类列表里面直接获取到分类的名字，那么必须要从商品分类表product_category里通过category_id来获取category_name。</p>\n<p>首先获取商品表数据：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"variable\">$product</span> = Product::with(<span class=\"string\">&#x27;category&#x27;</span>)-&gt;paginate(<span class=\"number\">15</span>);</span><br><span class=\"line\">\t<span class=\"variable\">$assign</span> = compact(<span class=\"string\">&#x27;product&#x27;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> view(<span class=\"string\">&#x27;admin.product.index&#x27;</span>, <span class=\"variable\">$assign</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其中with里面就是预加载的分类表，在这之前需要在商品的模型中添加对应的关系：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 关联分类  Models/Product.php</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">category</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;hasOne(Product_category::class, <span class=\"string\">&#x27;category_id&#x27;</span>, <span class=\"string\">&#x27;category_id&#x27;</span>)-&gt;withDefault(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"variable\">$category</span></span>) </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"variable\">$category</span>-&gt;category_name = <span class=\"string\">&#x27;未分类&#x27;</span>;</span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其中hasOne表示一对一，即一个商品对应一个分类，通过分类id在父级中找到对应的分类名。<br>相关的还有一对多（hasMany），多对多（belongsToMany）等。<br>hasOne第一个参数表示相关联的模型，第二个参数默认通过检查关系方法(category)的名称并使用 _id 作为后缀名来确定默认外键名称的，即<code>category_id</code>。第三个参数是父级模型没有使用 id 作为主键，或者是希望用不同的字段来连接子级模型，则可以通过给 hasOne 方法传递第三个参数的形式指定父级数据表的自定义键。因为我在分类表指定的是category_id作为主键，所以需要配置第三个参数。</p>\n<p>添加withDefault方法是当在父级没有找到查询到结果返回空的模型。使用闭包函数来定义一个未查询到的分类名称。</p>\n<p>关于模型关联的一些其他操作，可参考<a href=\"https://www.kancloud.cn/iwzh/laravel_doc_zh-5-5/400324#querying-relationship-absence\">https://www.kancloud.cn/iwzh/laravel_doc_zh-5-5/400324#querying-relationship-absence</a></p>\n<p><strong>2.增加表单请求次数限制</strong></p>\n<p>比如一个用户一天只能登陆10次</p>\n<p>可以使用访问频率限制的中间件来实现，该中间件已经内置到了框架中：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Route::post(<span class=\"string\">&#x27;update&#x27;</span>, <span class=\"string\">&#x27;UserController@update&#x27;</span>)-&gt;middleware(<span class=\"string\">&#x27;throttle:1,1440&#x27;</span>);;</span><br></pre></td></tr></table></figure>\n<p>以上路由表示用户请求更新数据为1440分钟只能更新1次，即一天更新一次，否则将在浏览器显示429的错误码，即访问次数频繁。同时可以自定义错误页面来修改默认的错误提示信息。</p>\n<p><strong>3.错误页面获取缓存数据</strong></p>\n<p>因为错误页面没有经过数据渲染，所以在App/Providers里服务提供者分配的通用缓存数据无法通过变量获取，但仍然可以通过视图层使用Cache门面来获取缓存数据：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">foreach</span>(Cache::get(<span class=\"string\">&#x27;carousel&#x27;</span>) <span class=\"keyword\">as</span> <span class=\"variable\">$key</span>=&gt;<span class=\"variable\">$value</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li data-target=<span class=\"string\">&quot;#carousel&quot;</span> @<span class=\"keyword\">if</span>(<span class=\"variable\">$key</span>==<span class=\"number\">0</span>)<span class=\"class\"><span class=\"keyword\">class</span>=&quot;<span class=\"title\">active</span>&quot;@<span class=\"title\">endif</span> <span class=\"title\">data</span>-<span class=\"title\">slide</span>-<span class=\"title\">to</span>=&quot;</span>&#123;&#123;<span class=\"variable\">$key</span>&#125;&#125;<span class=\"string\">&quot;&gt;&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">@endforeach</span></span><br></pre></td></tr></table></figure>\n"},{"title":"Laravel使用（共享数据,debugbar）","date":"2018-03-23T06:54:47.000Z","_content":"1.多视图共享数据\n如题，如果我们有一些固定的网站内容，如联系方式，客服扣扣等，需要放在公用视图模板的头部或底部，如这样：\n\n在home.blade.php中\n```php\n            <p>手机：{{$config->linktel}} 丨 邮箱：{{$config->linkemail}} 丨 地址：{{$config->linkadress}}</p>\n```\n怎样在每个视图中都加载这些内容呢。\n\n1.直接使用View::share()方法来在每个视图层加载固定内容\n\n首先使用Artisan创建服务提供者\n```php\n    php artisan make:provider ComposerServiceProvider\n```\n然后在config/app.php里注册提供者。在providers里加入：\n```php\n\t'providers' => [\n\n\t\t/*\n\t\t\t         * Laravel Framework Service Providers...\n\t\t*/\n\t\tIlluminate\\Auth\\AuthServiceProvider::class,\n\t\tIlluminate\\Broadcasting\\BroadcastServiceProvider::class,\n\t\t........\n\t\tApp\\Providers\\RouteServiceProvider::class,\n\t\tApp\\Providers\\ComposerServiceProvider::class,//加入刚刚创建的提供者\n\t\tStevenyangecho\\UEditor\\UEditorServiceProvider::class,\n\t],\n```\n然后在注册的提供者里面加入：\n```php\n    public function boot()\n    {\n    View::share('abc','beeasy');\n    }\n```\n这是使用外观模式，也可以直接使用view()方法，\n```php\n    view()->share('abc', 'beeasy');\n```\n这样在视图层里面就能直接使用\n```php\n    {{$abc}}\n```\n2.使用Composer单独对某个视图闭包来完成\n```php\n\tpublic function boot() {\n\t\t//基于闭包的composer\n\t\tview()->composer('layouts.home', function ($view) {//绑定公用视图的前端页面\n\t\t\t$config = DB::table('config')\n\t\t\t\t->where('id', 1)\n\t\t\t\t->first();\n\t\t\t$view->with('config', $config);//将数据载入到视图\n\t\t});\n\t}\n```\n这样就能在layouts/home.blade.php视图下直接使用config变量了\n\n当然你也可以这样写：\n```php\n\tpublic function boot() {\n\t\t//基于闭包的composer\n\t\tview()->composer(*, function ($view) {//绑定公用视图的前端页面\n\t\t\t$config = DB::table('config')\n\t\t\t\t->where('id', 1)\n\t\t\t\t->first();\n\t\t\t$view->with('config', $config);//将数据传递到视图\n\t\t});\n\t}\n```\n这样就能达到第一种方法的效果\n\n\n\n两种方法的区别：第一种方法是在每个视图层都传递数据，而第二种是针对某个视图层来传递数据，具体的选择方法还是要根据具体情况来定。\n\n2.安装laravel-debugbar来提高开发效率\n1). 使用 Composer 安装该扩展包：\n```php\n    composer require barryvdh/laravel-debugbar\n```\n2). 安装完成后，修改 config/app.php 在 providers 数组内追加 Debugbar 的 Provider\n```php\n    'providers' => [\n    ...\n    Barryvdh\\Debugbar\\ServiceProvider::class,\n    ],\n```\n同时在 aliases 数组内追加如下内容\n```php\n    'aliases' => [\n    ...\n    'Debugbar' => Barryvdh\\Debugbar\\Facade::class,\n    ]\n```\n3). 接下来运行以下命令生成此扩展包的配置文件 config/debugbar.php：\n```php\n    php artisan vendor:publish --provider=\"Barryvdh\\Debugbar\\ServiceProvider\"\n```\n打开 config/debugbar.php，将 enabled 的值设置为：\n```php\n    'enabled' => env('DEBUGBAR_ENABLED', true),\n```\n修改完以后, Debugbar 分析器的启动状态将由 .env文件中 DEBUGBAR_ENABLED 值决定。\n\n页面刷新后, 看到下图即表示运行成功。\n\n![](https://i.imgur.com/1ImUL0w.png)\n\n原文地址：https://laravel-china.org/topics/2531\n\n关闭功能只需要在debugbar.php文件中，将\n```php\n    'enabled' => env('DEBUGBAR_ENABLED', true),\n```\n改为\n```php\n    'enabled' => env('DEBUGBAR_ENABLED', false),\n```\n\n或者将根目录下.ENV文件：\n```php\n    DEBUGBAR_ENABLED=true\n```\n改为\n```php\n    DEBUGBAR_ENABLED=false\n```\n","source":"_posts/Laravel-share-debugbar.md","raw":"---\ntitle: Laravel使用（共享数据,debugbar）\ndate: 2018-03-23 14:54:47\ncategories: PHP\ntags:\n\t- laravel\n\t- debugbar\n---\n1.多视图共享数据\n如题，如果我们有一些固定的网站内容，如联系方式，客服扣扣等，需要放在公用视图模板的头部或底部，如这样：\n\n在home.blade.php中\n```php\n            <p>手机：{{$config->linktel}} 丨 邮箱：{{$config->linkemail}} 丨 地址：{{$config->linkadress}}</p>\n```\n怎样在每个视图中都加载这些内容呢。\n\n1.直接使用View::share()方法来在每个视图层加载固定内容\n\n首先使用Artisan创建服务提供者\n```php\n    php artisan make:provider ComposerServiceProvider\n```\n然后在config/app.php里注册提供者。在providers里加入：\n```php\n\t'providers' => [\n\n\t\t/*\n\t\t\t         * Laravel Framework Service Providers...\n\t\t*/\n\t\tIlluminate\\Auth\\AuthServiceProvider::class,\n\t\tIlluminate\\Broadcasting\\BroadcastServiceProvider::class,\n\t\t........\n\t\tApp\\Providers\\RouteServiceProvider::class,\n\t\tApp\\Providers\\ComposerServiceProvider::class,//加入刚刚创建的提供者\n\t\tStevenyangecho\\UEditor\\UEditorServiceProvider::class,\n\t],\n```\n然后在注册的提供者里面加入：\n```php\n    public function boot()\n    {\n    View::share('abc','beeasy');\n    }\n```\n这是使用外观模式，也可以直接使用view()方法，\n```php\n    view()->share('abc', 'beeasy');\n```\n这样在视图层里面就能直接使用\n```php\n    {{$abc}}\n```\n2.使用Composer单独对某个视图闭包来完成\n```php\n\tpublic function boot() {\n\t\t//基于闭包的composer\n\t\tview()->composer('layouts.home', function ($view) {//绑定公用视图的前端页面\n\t\t\t$config = DB::table('config')\n\t\t\t\t->where('id', 1)\n\t\t\t\t->first();\n\t\t\t$view->with('config', $config);//将数据载入到视图\n\t\t});\n\t}\n```\n这样就能在layouts/home.blade.php视图下直接使用config变量了\n\n当然你也可以这样写：\n```php\n\tpublic function boot() {\n\t\t//基于闭包的composer\n\t\tview()->composer(*, function ($view) {//绑定公用视图的前端页面\n\t\t\t$config = DB::table('config')\n\t\t\t\t->where('id', 1)\n\t\t\t\t->first();\n\t\t\t$view->with('config', $config);//将数据传递到视图\n\t\t});\n\t}\n```\n这样就能达到第一种方法的效果\n\n\n\n两种方法的区别：第一种方法是在每个视图层都传递数据，而第二种是针对某个视图层来传递数据，具体的选择方法还是要根据具体情况来定。\n\n2.安装laravel-debugbar来提高开发效率\n1). 使用 Composer 安装该扩展包：\n```php\n    composer require barryvdh/laravel-debugbar\n```\n2). 安装完成后，修改 config/app.php 在 providers 数组内追加 Debugbar 的 Provider\n```php\n    'providers' => [\n    ...\n    Barryvdh\\Debugbar\\ServiceProvider::class,\n    ],\n```\n同时在 aliases 数组内追加如下内容\n```php\n    'aliases' => [\n    ...\n    'Debugbar' => Barryvdh\\Debugbar\\Facade::class,\n    ]\n```\n3). 接下来运行以下命令生成此扩展包的配置文件 config/debugbar.php：\n```php\n    php artisan vendor:publish --provider=\"Barryvdh\\Debugbar\\ServiceProvider\"\n```\n打开 config/debugbar.php，将 enabled 的值设置为：\n```php\n    'enabled' => env('DEBUGBAR_ENABLED', true),\n```\n修改完以后, Debugbar 分析器的启动状态将由 .env文件中 DEBUGBAR_ENABLED 值决定。\n\n页面刷新后, 看到下图即表示运行成功。\n\n![](https://i.imgur.com/1ImUL0w.png)\n\n原文地址：https://laravel-china.org/topics/2531\n\n关闭功能只需要在debugbar.php文件中，将\n```php\n    'enabled' => env('DEBUGBAR_ENABLED', true),\n```\n改为\n```php\n    'enabled' => env('DEBUGBAR_ENABLED', false),\n```\n\n或者将根目录下.ENV文件：\n```php\n    DEBUGBAR_ENABLED=true\n```\n改为\n```php\n    DEBUGBAR_ENABLED=false\n```\n","slug":"Laravel-share-debugbar","published":1,"updated":"2021-11-25T03:28:13.075Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwn8bfxs0012twnf8h00d02h","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>1.多视图共享数据<br>如题，如果我们有一些固定的网站内容，如联系方式，客服扣扣等，需要放在公用视图模板的头部或底部，如这样：</p>\n<p>在home.blade.php中</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p&gt;手机：&#123;&#123;<span class=\"variable\">$config</span>-&gt;linktel&#125;&#125; 丨 邮箱：&#123;&#123;<span class=\"variable\">$config</span>-&gt;linkemail&#125;&#125; 丨 地址：&#123;&#123;<span class=\"variable\">$config</span>-&gt;linkadress&#125;&#125;&lt;/p&gt;</span><br></pre></td></tr></table></figure>\n<p>怎样在每个视图中都加载这些内容呢。</p>\n<p>1.直接使用View::share()方法来在每个视图层加载固定内容</p>\n<p>首先使用Artisan创建服务提供者</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan make:provider ComposerServiceProvider</span><br></pre></td></tr></table></figure>\n<p>然后在config/app.php里注册提供者。在providers里加入：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;providers&#x27;</span> =&gt; [</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t\t         * Laravel Framework Service Providers...</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\tIlluminate\\Auth\\AuthServiceProvider::class,</span><br><span class=\"line\">\tIlluminate\\Broadcasting\\BroadcastServiceProvider::class,</span><br><span class=\"line\">\t........</span><br><span class=\"line\">\tApp\\Providers\\RouteServiceProvider::class,</span><br><span class=\"line\">\tApp\\Providers\\ComposerServiceProvider::class,<span class=\"comment\">//加入刚刚创建的提供者</span></span><br><span class=\"line\">\tStevenyangecho\\UEditor\\UEditorServiceProvider::class,</span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n<p>然后在注册的提供者里面加入：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">boot</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">View::share(<span class=\"string\">&#x27;abc&#x27;</span>,<span class=\"string\">&#x27;beeasy&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这是使用外观模式，也可以直接使用view()方法，</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">view()-&gt;share(<span class=\"string\">&#x27;abc&#x27;</span>, <span class=\"string\">&#x27;beeasy&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p>这样在视图层里面就能直接使用</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;<span class=\"variable\">$abc</span>&#125;&#125;</span><br></pre></td></tr></table></figure>\n<p>2.使用Composer单独对某个视图闭包来完成</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">boot</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//基于闭包的composer</span></span><br><span class=\"line\">\tview()-&gt;composer(<span class=\"string\">&#x27;layouts.home&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"variable\">$view</span></span>) </span>&#123;<span class=\"comment\">//绑定公用视图的前端页面</span></span><br><span class=\"line\">\t\t<span class=\"variable\">$config</span> = DB::table(<span class=\"string\">&#x27;config&#x27;</span>)</span><br><span class=\"line\">\t\t\t-&gt;where(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t-&gt;first();</span><br><span class=\"line\">\t\t<span class=\"variable\">$view</span>-&gt;with(<span class=\"string\">&#x27;config&#x27;</span>, <span class=\"variable\">$config</span>);<span class=\"comment\">//将数据载入到视图</span></span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样就能在layouts/home.blade.php视图下直接使用config变量了</p>\n<p>当然你也可以这样写：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">boot</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//基于闭包的composer</span></span><br><span class=\"line\">\tview()-&gt;composer(*, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"variable\">$view</span></span>) </span>&#123;<span class=\"comment\">//绑定公用视图的前端页面</span></span><br><span class=\"line\">\t\t<span class=\"variable\">$config</span> = DB::table(<span class=\"string\">&#x27;config&#x27;</span>)</span><br><span class=\"line\">\t\t\t-&gt;where(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t-&gt;first();</span><br><span class=\"line\">\t\t<span class=\"variable\">$view</span>-&gt;with(<span class=\"string\">&#x27;config&#x27;</span>, <span class=\"variable\">$config</span>);<span class=\"comment\">//将数据传递到视图</span></span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样就能达到第一种方法的效果</p>\n<p>两种方法的区别：第一种方法是在每个视图层都传递数据，而第二种是针对某个视图层来传递数据，具体的选择方法还是要根据具体情况来定。</p>\n<p>2.安装laravel-debugbar来提高开发效率<br>1). 使用 Composer 安装该扩展包：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">composer <span class=\"keyword\">require</span> barryvdh/laravel-debugbar</span><br></pre></td></tr></table></figure>\n<p>2). 安装完成后，修改 config/app.php 在 providers 数组内追加 Debugbar 的 Provider</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;providers&#x27;</span> =&gt; [</span><br><span class=\"line\">...</span><br><span class=\"line\">Barryvdh\\Debugbar\\ServiceProvider::class,</span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n<p>同时在 aliases 数组内追加如下内容</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;aliases&#x27;</span> =&gt; [</span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"string\">&#x27;Debugbar&#x27;</span> =&gt; Barryvdh\\Debugbar\\Facade::class,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>3). 接下来运行以下命令生成此扩展包的配置文件 config/debugbar.php：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan vendor:publish --provider=<span class=\"string\">&quot;Barryvdh\\Debugbar\\ServiceProvider&quot;</span></span><br></pre></td></tr></table></figure>\n<p>打开 config/debugbar.php，将 enabled 的值设置为：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;enabled&#x27;</span> =&gt; env(<span class=\"string\">&#x27;DEBUGBAR_ENABLED&#x27;</span>, <span class=\"literal\">true</span>),</span><br></pre></td></tr></table></figure>\n<p>修改完以后, Debugbar 分析器的启动状态将由 .env文件中 DEBUGBAR_ENABLED 值决定。</p>\n<p>页面刷新后, 看到下图即表示运行成功。</p>\n<p><img src=\"https://i.imgur.com/1ImUL0w.png\"></p>\n<p>原文地址：<a href=\"https://laravel-china.org/topics/2531\">https://laravel-china.org/topics/2531</a></p>\n<p>关闭功能只需要在debugbar.php文件中，将</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;enabled&#x27;</span> =&gt; env(<span class=\"string\">&#x27;DEBUGBAR_ENABLED&#x27;</span>, <span class=\"literal\">true</span>),</span><br></pre></td></tr></table></figure>\n<p>改为</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;enabled&#x27;</span> =&gt; env(<span class=\"string\">&#x27;DEBUGBAR_ENABLED&#x27;</span>, <span class=\"literal\">false</span>),</span><br></pre></td></tr></table></figure>\n\n<p>或者将根目录下.ENV文件：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DEBUGBAR_ENABLED=<span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p>改为</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DEBUGBAR_ENABLED=<span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>1.多视图共享数据<br>如题，如果我们有一些固定的网站内容，如联系方式，客服扣扣等，需要放在公用视图模板的头部或底部，如这样：</p>\n<p>在home.blade.php中</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p&gt;手机：&#123;&#123;<span class=\"variable\">$config</span>-&gt;linktel&#125;&#125; 丨 邮箱：&#123;&#123;<span class=\"variable\">$config</span>-&gt;linkemail&#125;&#125; 丨 地址：&#123;&#123;<span class=\"variable\">$config</span>-&gt;linkadress&#125;&#125;&lt;/p&gt;</span><br></pre></td></tr></table></figure>\n<p>怎样在每个视图中都加载这些内容呢。</p>\n<p>1.直接使用View::share()方法来在每个视图层加载固定内容</p>\n<p>首先使用Artisan创建服务提供者</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan make:provider ComposerServiceProvider</span><br></pre></td></tr></table></figure>\n<p>然后在config/app.php里注册提供者。在providers里加入：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;providers&#x27;</span> =&gt; [</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t\t         * Laravel Framework Service Providers...</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\tIlluminate\\Auth\\AuthServiceProvider::class,</span><br><span class=\"line\">\tIlluminate\\Broadcasting\\BroadcastServiceProvider::class,</span><br><span class=\"line\">\t........</span><br><span class=\"line\">\tApp\\Providers\\RouteServiceProvider::class,</span><br><span class=\"line\">\tApp\\Providers\\ComposerServiceProvider::class,<span class=\"comment\">//加入刚刚创建的提供者</span></span><br><span class=\"line\">\tStevenyangecho\\UEditor\\UEditorServiceProvider::class,</span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n<p>然后在注册的提供者里面加入：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">boot</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">View::share(<span class=\"string\">&#x27;abc&#x27;</span>,<span class=\"string\">&#x27;beeasy&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这是使用外观模式，也可以直接使用view()方法，</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">view()-&gt;share(<span class=\"string\">&#x27;abc&#x27;</span>, <span class=\"string\">&#x27;beeasy&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p>这样在视图层里面就能直接使用</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;<span class=\"variable\">$abc</span>&#125;&#125;</span><br></pre></td></tr></table></figure>\n<p>2.使用Composer单独对某个视图闭包来完成</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">boot</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//基于闭包的composer</span></span><br><span class=\"line\">\tview()-&gt;composer(<span class=\"string\">&#x27;layouts.home&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"variable\">$view</span></span>) </span>&#123;<span class=\"comment\">//绑定公用视图的前端页面</span></span><br><span class=\"line\">\t\t<span class=\"variable\">$config</span> = DB::table(<span class=\"string\">&#x27;config&#x27;</span>)</span><br><span class=\"line\">\t\t\t-&gt;where(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t-&gt;first();</span><br><span class=\"line\">\t\t<span class=\"variable\">$view</span>-&gt;with(<span class=\"string\">&#x27;config&#x27;</span>, <span class=\"variable\">$config</span>);<span class=\"comment\">//将数据载入到视图</span></span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样就能在layouts/home.blade.php视图下直接使用config变量了</p>\n<p>当然你也可以这样写：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">boot</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//基于闭包的composer</span></span><br><span class=\"line\">\tview()-&gt;composer(*, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"variable\">$view</span></span>) </span>&#123;<span class=\"comment\">//绑定公用视图的前端页面</span></span><br><span class=\"line\">\t\t<span class=\"variable\">$config</span> = DB::table(<span class=\"string\">&#x27;config&#x27;</span>)</span><br><span class=\"line\">\t\t\t-&gt;where(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t-&gt;first();</span><br><span class=\"line\">\t\t<span class=\"variable\">$view</span>-&gt;with(<span class=\"string\">&#x27;config&#x27;</span>, <span class=\"variable\">$config</span>);<span class=\"comment\">//将数据传递到视图</span></span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样就能达到第一种方法的效果</p>\n<p>两种方法的区别：第一种方法是在每个视图层都传递数据，而第二种是针对某个视图层来传递数据，具体的选择方法还是要根据具体情况来定。</p>\n<p>2.安装laravel-debugbar来提高开发效率<br>1). 使用 Composer 安装该扩展包：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">composer <span class=\"keyword\">require</span> barryvdh/laravel-debugbar</span><br></pre></td></tr></table></figure>\n<p>2). 安装完成后，修改 config/app.php 在 providers 数组内追加 Debugbar 的 Provider</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;providers&#x27;</span> =&gt; [</span><br><span class=\"line\">...</span><br><span class=\"line\">Barryvdh\\Debugbar\\ServiceProvider::class,</span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n<p>同时在 aliases 数组内追加如下内容</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;aliases&#x27;</span> =&gt; [</span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"string\">&#x27;Debugbar&#x27;</span> =&gt; Barryvdh\\Debugbar\\Facade::class,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>3). 接下来运行以下命令生成此扩展包的配置文件 config/debugbar.php：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan vendor:publish --provider=<span class=\"string\">&quot;Barryvdh\\Debugbar\\ServiceProvider&quot;</span></span><br></pre></td></tr></table></figure>\n<p>打开 config/debugbar.php，将 enabled 的值设置为：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;enabled&#x27;</span> =&gt; env(<span class=\"string\">&#x27;DEBUGBAR_ENABLED&#x27;</span>, <span class=\"literal\">true</span>),</span><br></pre></td></tr></table></figure>\n<p>修改完以后, Debugbar 分析器的启动状态将由 .env文件中 DEBUGBAR_ENABLED 值决定。</p>\n<p>页面刷新后, 看到下图即表示运行成功。</p>\n<p><img src=\"https://i.imgur.com/1ImUL0w.png\"></p>\n<p>原文地址：<a href=\"https://laravel-china.org/topics/2531\">https://laravel-china.org/topics/2531</a></p>\n<p>关闭功能只需要在debugbar.php文件中，将</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;enabled&#x27;</span> =&gt; env(<span class=\"string\">&#x27;DEBUGBAR_ENABLED&#x27;</span>, <span class=\"literal\">true</span>),</span><br></pre></td></tr></table></figure>\n<p>改为</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;enabled&#x27;</span> =&gt; env(<span class=\"string\">&#x27;DEBUGBAR_ENABLED&#x27;</span>, <span class=\"literal\">false</span>),</span><br></pre></td></tr></table></figure>\n\n<p>或者将根目录下.ENV文件：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DEBUGBAR_ENABLED=<span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p>改为</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DEBUGBAR_ENABLED=<span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n"},{"title":"Linux下MYSQL开启远程访问权限","date":"2018-03-23T06:31:52.000Z","_content":"当在Linux服务器上搭建了LNMP环境后，在服务器端本地可以访问，但是有时候需要本地先创建数据表再上传到服务器，而Linux下Mysql默认安装完成后只有本地访问的权限，需要指定用户设置访问权限才能远程访问该数据库。\n\n首先登陆数据库：\n```php\n    mysql -U root -p\n```\n输入数据库密码\n\n然后运行以下sql语句：\n```php\n    grant all privileges on *.* to 'root'@'%' identified by 'root';\n```\n前面的root代表远程登陆时的用户名，后面的root代表密码，这样设置的是账号为root密码也为root的mysql用户，中间的'%'表示所有ip地址都能远程访问，如果要针对一台机器访问，将‘%’改为对应的ip地址即可访问数据库。\n\n特别提醒不要讲账号密码设置成简单的组合，不然容易被黑。当我按照以上的操作成功远程登陆，过了几天以后。。。。\n自己创建的数据库不见了，取而代之的是一个名为 “WARNING”的数据库，其中只有一张名为Readme的表，wtf？打开后是一条数据，大致内容是这样的：\n\n    Your Data is downloaded and backed up on our secured servers. To recover your lost data: Send 0.1 BTC to our BitCoin Address and Contact us by eMail with your server IP Address and a Proof of Payment. Any eMail without your server IP Address and a Proof of Payment together will be ignored. You are welcome\n翻译后是这样的：\n\n您的数据已下载并备份在我们的安全服务器上。恢复你丢失的数据：发送0.1 BTC我们的比特币地址的服务器IP地址的电子邮件和付款证明联系我们。任何没有您的服务器IP地址和付款证明的电子邮件都将被忽略。不客气\n上网查了一下原来是数据库被黑了，因为设置的账号密码太过简单，而且设置的是在所有ip上都能登陆。所以不要为了省事就不限制登陆数据库的ip地址，也不要将远程登陆的用户密码设置的过于简单。","source":"_posts/Linux-mysql-remote.md","raw":"---\ntitle: Linux下MYSQL开启远程访问权限\ndate: 2018-03-23 14:31:52\ncategories: Mysql\ntags:\n\tmysql\n---\n当在Linux服务器上搭建了LNMP环境后，在服务器端本地可以访问，但是有时候需要本地先创建数据表再上传到服务器，而Linux下Mysql默认安装完成后只有本地访问的权限，需要指定用户设置访问权限才能远程访问该数据库。\n\n首先登陆数据库：\n```php\n    mysql -U root -p\n```\n输入数据库密码\n\n然后运行以下sql语句：\n```php\n    grant all privileges on *.* to 'root'@'%' identified by 'root';\n```\n前面的root代表远程登陆时的用户名，后面的root代表密码，这样设置的是账号为root密码也为root的mysql用户，中间的'%'表示所有ip地址都能远程访问，如果要针对一台机器访问，将‘%’改为对应的ip地址即可访问数据库。\n\n特别提醒不要讲账号密码设置成简单的组合，不然容易被黑。当我按照以上的操作成功远程登陆，过了几天以后。。。。\n自己创建的数据库不见了，取而代之的是一个名为 “WARNING”的数据库，其中只有一张名为Readme的表，wtf？打开后是一条数据，大致内容是这样的：\n\n    Your Data is downloaded and backed up on our secured servers. To recover your lost data: Send 0.1 BTC to our BitCoin Address and Contact us by eMail with your server IP Address and a Proof of Payment. Any eMail without your server IP Address and a Proof of Payment together will be ignored. You are welcome\n翻译后是这样的：\n\n您的数据已下载并备份在我们的安全服务器上。恢复你丢失的数据：发送0.1 BTC我们的比特币地址的服务器IP地址的电子邮件和付款证明联系我们。任何没有您的服务器IP地址和付款证明的电子邮件都将被忽略。不客气\n上网查了一下原来是数据库被黑了，因为设置的账号密码太过简单，而且设置的是在所有ip上都能登陆。所以不要为了省事就不限制登陆数据库的ip地址，也不要将远程登陆的用户密码设置的过于简单。","slug":"Linux-mysql-remote","published":1,"updated":"2021-11-25T03:28:13.076Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwn8bfxt0015twnffpkm3nbb","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>当在Linux服务器上搭建了LNMP环境后，在服务器端本地可以访问，但是有时候需要本地先创建数据表再上传到服务器，而Linux下Mysql默认安装完成后只有本地访问的权限，需要指定用户设置访问权限才能远程访问该数据库。</p>\n<p>首先登陆数据库：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -U root -p</span><br></pre></td></tr></table></figure>\n<p>输入数据库密码</p>\n<p>然后运行以下sql语句：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grant all privileges on *.* to <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;%&#x27;</span> identified by <span class=\"string\">&#x27;root&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<p>前面的root代表远程登陆时的用户名，后面的root代表密码，这样设置的是账号为root密码也为root的mysql用户，中间的’%’表示所有ip地址都能远程访问，如果要针对一台机器访问，将‘%’改为对应的ip地址即可访问数据库。</p>\n<p>特别提醒不要讲账号密码设置成简单的组合，不然容易被黑。当我按照以上的操作成功远程登陆，过了几天以后。。。。<br>自己创建的数据库不见了，取而代之的是一个名为 “WARNING”的数据库，其中只有一张名为Readme的表，wtf？打开后是一条数据，大致内容是这样的：</p>\n<pre><code>Your Data is downloaded and backed up on our secured servers. To recover your lost data: Send 0.1 BTC to our BitCoin Address and Contact us by eMail with your server IP Address and a Proof of Payment. Any eMail without your server IP Address and a Proof of Payment together will be ignored. You are welcome\n</code></pre>\n<p>翻译后是这样的：</p>\n<p>您的数据已下载并备份在我们的安全服务器上。恢复你丢失的数据：发送0.1 BTC我们的比特币地址的服务器IP地址的电子邮件和付款证明联系我们。任何没有您的服务器IP地址和付款证明的电子邮件都将被忽略。不客气<br>上网查了一下原来是数据库被黑了，因为设置的账号密码太过简单，而且设置的是在所有ip上都能登陆。所以不要为了省事就不限制登陆数据库的ip地址，也不要将远程登陆的用户密码设置的过于简单。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>当在Linux服务器上搭建了LNMP环境后，在服务器端本地可以访问，但是有时候需要本地先创建数据表再上传到服务器，而Linux下Mysql默认安装完成后只有本地访问的权限，需要指定用户设置访问权限才能远程访问该数据库。</p>\n<p>首先登陆数据库：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -U root -p</span><br></pre></td></tr></table></figure>\n<p>输入数据库密码</p>\n<p>然后运行以下sql语句：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grant all privileges on *.* to <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;%&#x27;</span> identified by <span class=\"string\">&#x27;root&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<p>前面的root代表远程登陆时的用户名，后面的root代表密码，这样设置的是账号为root密码也为root的mysql用户，中间的’%’表示所有ip地址都能远程访问，如果要针对一台机器访问，将‘%’改为对应的ip地址即可访问数据库。</p>\n<p>特别提醒不要讲账号密码设置成简单的组合，不然容易被黑。当我按照以上的操作成功远程登陆，过了几天以后。。。。<br>自己创建的数据库不见了，取而代之的是一个名为 “WARNING”的数据库，其中只有一张名为Readme的表，wtf？打开后是一条数据，大致内容是这样的：</p>\n<pre><code>Your Data is downloaded and backed up on our secured servers. To recover your lost data: Send 0.1 BTC to our BitCoin Address and Contact us by eMail with your server IP Address and a Proof of Payment. Any eMail without your server IP Address and a Proof of Payment together will be ignored. You are welcome\n</code></pre>\n<p>翻译后是这样的：</p>\n<p>您的数据已下载并备份在我们的安全服务器上。恢复你丢失的数据：发送0.1 BTC我们的比特币地址的服务器IP地址的电子邮件和付款证明联系我们。任何没有您的服务器IP地址和付款证明的电子邮件都将被忽略。不客气<br>上网查了一下原来是数据库被黑了，因为设置的账号密码太过简单，而且设置的是在所有ip上都能登陆。所以不要为了省事就不限制登陆数据库的ip地址，也不要将远程登陆的用户密码设置的过于简单。</p>\n"},{"title":"Linux服务器搭建vsftp","date":"2018-03-23T04:03:16.000Z","description":null,"_content":"之前一直用的是windows下的FlashFXP，现在用的Linux服务器（Centos 7.1），为了方便上传项目，安装vsftpd。\n\n1.安装vsftpd\n```php\n    yum -y install vsftpd\n```\n安装完毕后可以通过启动来测试是否安装完成\n```php\n    systemctl start vsftpd.service\n```\n2.创建宿主用户及分配权限\n\n安装完默认情况下是开启匿名登录的，对应的是 /var/ftp 目录，这时只要服务启动了，就可以直接连上FTP了。而这并不是我们想要的效果，一般都是按照需求来分配用户访问不同的目录。\n\n新建一个ftp的宿主用户(即存在Linux系统的用户，不是虚拟用户)\n```php\n    groupadd ftpuser #创建用户组\n    useradd -g root -M -d /var/www -s /sbin/nologin ftpuser\n    #创建系统用户分配权限，只用于ftp，所以禁止登陆系统\n    passwd ftpuser #设置账户密码，这个不是很重要\n    #此处的ftpuser就是你的账户名\n    \n    chown -R ftpuser.root /var/www\n    #把 /var/www 的所有权给ftpuser.root\n    #这里的 /var/www 就是ftp的根目录，没有的话自行创建，也可以换成其他目录\n```\n这样就可以通过ftpuser用户连接FTP了。至于虚拟用户需要做的步骤就比较多了。首先虚拟用户的用户认证是通过pam方式去认证的，pam文件里面指定了认证的db文件，db文件又是通过明文用户名和密码文件生成而来，在 /etc/vsftpd/vsftpd.conf 配置文件是通过 pam_service_name=vsftpd 配置指定的，其位置是 /etc/pam.d/vsftpd，编辑该文件，把文件内容全部注释掉，加上以下两行：\n\n64位系统：\n```php\n    auth required /lib64/security/pam_userdb.so db=/etc/vsftpd/vuser_passwd\n    account required /lib64/security/pam_userdb.so db=/etc/vsftpd/vuser_passwd\n```\n32位系统：\n```php\n    auth sufficient /lib/security/pam_userdb.so db=/etc/vsftpd/vuser_passwd\n    account sufficient /lib/security/pam_userdb.so db=/etc/vsftpd/vuser_passwd\n```\ndb=/etc/vsftpd/vuser_passwd 指定了db文件的位置，接下来就是生成db文件，由于db文件是通过明文用户名和密码文件生成而来，所以先创建一个保存明文用户名和密码的文件     vuser_passwd.txt\n```php\n    vi /etc/vsftpd/vuser_passwd.txt\n```\n这个文件的奇数行位账号，偶数行为密码：\n```php\n    beeasy\n    beeasy1234\n```\n保存之后通过以下命令生成db文件：\n```php\n    cd /etc/vsftpd\n    db_load -T -t hash -f vuser_passwd.txt vuser_passwd.db\n```\n如果 db_load 命令无法使用，那就需要安装db4 包\n```php\n    yum -y install db4\n```\n如果要添加新的用户的话，在 vuser_passwd.txt 文件里面继续添加用户密码，但是要再次生成一下db文件。然后现在每个用户的具体配置是通过一个用户对应一个配置文件来实现的，且这个文件必须用FTP用户名去做文件名，建一个目录专门存放这些文件：\n\n在vsftpd目录下\n```php\n    mkdir vuser_conf\n```\n并且新建文件\n```php\n    vi vuser_conf/beeasy\n```\n大致内容如下：\n\n![](https://i.imgur.com/mzvPvJe.png)\n\n\nlocal_root 是指当前虚拟用户的访问目录\n\nwrite_enable 设置用户是否可以写入\n\nanon_upload_enable 设置虚拟用户的上传功能\n\nanon_mkdir_write_enable 设置虚拟用户创建文件夹的功能\n\nanon_other_write_enable 设置虚拟用户是否可以执行其他的写入操作，覆盖，删除，重命名等。\n\nmax_per_ip 最多允许同一账户在多少个不同的ip登陆\n\n3.根据以上的信息来修改vsftpd的配置文件\n```php\n    anonymous_enable=NO # 禁用匿名登录\n    ascii_upload_enable=YES\n    ascii_download_enable=YES\n    chroot_local_user=YES # 启用限定用户在其主目录下\n```\n以下配置为自己添加：\n![](https://i.imgur.com/3lWKWbB.png)\n\n\n然后重启vsftpd：\n```php\n    systemctl restart vsftpd.service\n```\n若是连接超时，请确认防火墙是否开放vsftpd服务的端口，建议开放20至22号端口以及主动模式PASV下的6000至7000端口。或者在服务器上的安全组里添加入方向的端口。\n\n以及SElinux是否关闭。","source":"_posts/Linux-vsftp.md","raw":"---\ntitle: Linux服务器搭建vsftp\ndate: 2018-03-23 12:03:16\ncategories: Linux\ntags:\ndescription: #你對本頁的描述 可以省略\n---\n之前一直用的是windows下的FlashFXP，现在用的Linux服务器（Centos 7.1），为了方便上传项目，安装vsftpd。\n\n1.安装vsftpd\n```php\n    yum -y install vsftpd\n```\n安装完毕后可以通过启动来测试是否安装完成\n```php\n    systemctl start vsftpd.service\n```\n2.创建宿主用户及分配权限\n\n安装完默认情况下是开启匿名登录的，对应的是 /var/ftp 目录，这时只要服务启动了，就可以直接连上FTP了。而这并不是我们想要的效果，一般都是按照需求来分配用户访问不同的目录。\n\n新建一个ftp的宿主用户(即存在Linux系统的用户，不是虚拟用户)\n```php\n    groupadd ftpuser #创建用户组\n    useradd -g root -M -d /var/www -s /sbin/nologin ftpuser\n    #创建系统用户分配权限，只用于ftp，所以禁止登陆系统\n    passwd ftpuser #设置账户密码，这个不是很重要\n    #此处的ftpuser就是你的账户名\n    \n    chown -R ftpuser.root /var/www\n    #把 /var/www 的所有权给ftpuser.root\n    #这里的 /var/www 就是ftp的根目录，没有的话自行创建，也可以换成其他目录\n```\n这样就可以通过ftpuser用户连接FTP了。至于虚拟用户需要做的步骤就比较多了。首先虚拟用户的用户认证是通过pam方式去认证的，pam文件里面指定了认证的db文件，db文件又是通过明文用户名和密码文件生成而来，在 /etc/vsftpd/vsftpd.conf 配置文件是通过 pam_service_name=vsftpd 配置指定的，其位置是 /etc/pam.d/vsftpd，编辑该文件，把文件内容全部注释掉，加上以下两行：\n\n64位系统：\n```php\n    auth required /lib64/security/pam_userdb.so db=/etc/vsftpd/vuser_passwd\n    account required /lib64/security/pam_userdb.so db=/etc/vsftpd/vuser_passwd\n```\n32位系统：\n```php\n    auth sufficient /lib/security/pam_userdb.so db=/etc/vsftpd/vuser_passwd\n    account sufficient /lib/security/pam_userdb.so db=/etc/vsftpd/vuser_passwd\n```\ndb=/etc/vsftpd/vuser_passwd 指定了db文件的位置，接下来就是生成db文件，由于db文件是通过明文用户名和密码文件生成而来，所以先创建一个保存明文用户名和密码的文件     vuser_passwd.txt\n```php\n    vi /etc/vsftpd/vuser_passwd.txt\n```\n这个文件的奇数行位账号，偶数行为密码：\n```php\n    beeasy\n    beeasy1234\n```\n保存之后通过以下命令生成db文件：\n```php\n    cd /etc/vsftpd\n    db_load -T -t hash -f vuser_passwd.txt vuser_passwd.db\n```\n如果 db_load 命令无法使用，那就需要安装db4 包\n```php\n    yum -y install db4\n```\n如果要添加新的用户的话，在 vuser_passwd.txt 文件里面继续添加用户密码，但是要再次生成一下db文件。然后现在每个用户的具体配置是通过一个用户对应一个配置文件来实现的，且这个文件必须用FTP用户名去做文件名，建一个目录专门存放这些文件：\n\n在vsftpd目录下\n```php\n    mkdir vuser_conf\n```\n并且新建文件\n```php\n    vi vuser_conf/beeasy\n```\n大致内容如下：\n\n![](https://i.imgur.com/mzvPvJe.png)\n\n\nlocal_root 是指当前虚拟用户的访问目录\n\nwrite_enable 设置用户是否可以写入\n\nanon_upload_enable 设置虚拟用户的上传功能\n\nanon_mkdir_write_enable 设置虚拟用户创建文件夹的功能\n\nanon_other_write_enable 设置虚拟用户是否可以执行其他的写入操作，覆盖，删除，重命名等。\n\nmax_per_ip 最多允许同一账户在多少个不同的ip登陆\n\n3.根据以上的信息来修改vsftpd的配置文件\n```php\n    anonymous_enable=NO # 禁用匿名登录\n    ascii_upload_enable=YES\n    ascii_download_enable=YES\n    chroot_local_user=YES # 启用限定用户在其主目录下\n```\n以下配置为自己添加：\n![](https://i.imgur.com/3lWKWbB.png)\n\n\n然后重启vsftpd：\n```php\n    systemctl restart vsftpd.service\n```\n若是连接超时，请确认防火墙是否开放vsftpd服务的端口，建议开放20至22号端口以及主动模式PASV下的6000至7000端口。或者在服务器上的安全组里添加入方向的端口。\n\n以及SElinux是否关闭。","slug":"Linux-vsftp","published":1,"updated":"2021-11-25T03:28:13.076Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwn8bfxu0018twnfdxju3tf1","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>之前一直用的是windows下的FlashFXP，现在用的Linux服务器（Centos 7.1），为了方便上传项目，安装vsftpd。</p>\n<p>1.安装vsftpd</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install vsftpd</span><br></pre></td></tr></table></figure>\n<p>安装完毕后可以通过启动来测试是否安装完成</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl start vsftpd.service</span><br></pre></td></tr></table></figure>\n<p>2.创建宿主用户及分配权限</p>\n<p>安装完默认情况下是开启匿名登录的，对应的是 /var/ftp 目录，这时只要服务启动了，就可以直接连上FTP了。而这并不是我们想要的效果，一般都是按照需求来分配用户访问不同的目录。</p>\n<p>新建一个ftp的宿主用户(即存在Linux系统的用户，不是虚拟用户)</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">groupadd ftpuser <span class=\"comment\">#创建用户组</span></span><br><span class=\"line\">useradd -g root -M -d /<span class=\"keyword\">var</span>/www -s /sbin/nologin ftpuser</span><br><span class=\"line\"><span class=\"comment\">#创建系统用户分配权限，只用于ftp，所以禁止登陆系统</span></span><br><span class=\"line\">passwd ftpuser <span class=\"comment\">#设置账户密码，这个不是很重要</span></span><br><span class=\"line\"><span class=\"comment\">#此处的ftpuser就是你的账户名</span></span><br><span class=\"line\"></span><br><span class=\"line\">chown -R ftpuser.root /<span class=\"keyword\">var</span>/www</span><br><span class=\"line\"><span class=\"comment\">#把 /var/www 的所有权给ftpuser.root</span></span><br><span class=\"line\"><span class=\"comment\">#这里的 /var/www 就是ftp的根目录，没有的话自行创建，也可以换成其他目录</span></span><br></pre></td></tr></table></figure>\n<p>这样就可以通过ftpuser用户连接FTP了。至于虚拟用户需要做的步骤就比较多了。首先虚拟用户的用户认证是通过pam方式去认证的，pam文件里面指定了认证的db文件，db文件又是通过明文用户名和密码文件生成而来，在 /etc/vsftpd/vsftpd.conf 配置文件是通过 pam_service_name=vsftpd 配置指定的，其位置是 /etc/pam.d/vsftpd，编辑该文件，把文件内容全部注释掉，加上以下两行：</p>\n<p>64位系统：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">auth required /lib64/security/pam_userdb.so db=/etc/vsftpd/vuser_passwd</span><br><span class=\"line\">account required /lib64/security/pam_userdb.so db=/etc/vsftpd/vuser_passwd</span><br></pre></td></tr></table></figure>\n<p>32位系统：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">auth sufficient /lib/security/pam_userdb.so db=/etc/vsftpd/vuser_passwd</span><br><span class=\"line\">account sufficient /lib/security/pam_userdb.so db=/etc/vsftpd/vuser_passwd</span><br></pre></td></tr></table></figure>\n<p>db=/etc/vsftpd/vuser_passwd 指定了db文件的位置，接下来就是生成db文件，由于db文件是通过明文用户名和密码文件生成而来，所以先创建一个保存明文用户名和密码的文件     vuser_passwd.txt</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/vsftpd/vuser_passwd.txt</span><br></pre></td></tr></table></figure>\n<p>这个文件的奇数行位账号，偶数行为密码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">beeasy</span><br><span class=\"line\">beeasy1234</span><br></pre></td></tr></table></figure>\n<p>保存之后通过以下命令生成db文件：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /etc/vsftpd</span><br><span class=\"line\">db_load -T -t hash -f vuser_passwd.txt vuser_passwd.db</span><br></pre></td></tr></table></figure>\n<p>如果 db_load 命令无法使用，那就需要安装db4 包</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install db4</span><br></pre></td></tr></table></figure>\n<p>如果要添加新的用户的话，在 vuser_passwd.txt 文件里面继续添加用户密码，但是要再次生成一下db文件。然后现在每个用户的具体配置是通过一个用户对应一个配置文件来实现的，且这个文件必须用FTP用户名去做文件名，建一个目录专门存放这些文件：</p>\n<p>在vsftpd目录下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir vuser_conf</span><br></pre></td></tr></table></figure>\n<p>并且新建文件</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi vuser_conf/beeasy</span><br></pre></td></tr></table></figure>\n<p>大致内容如下：</p>\n<p><img src=\"https://i.imgur.com/mzvPvJe.png\"></p>\n<p>local_root 是指当前虚拟用户的访问目录</p>\n<p>write_enable 设置用户是否可以写入</p>\n<p>anon_upload_enable 设置虚拟用户的上传功能</p>\n<p>anon_mkdir_write_enable 设置虚拟用户创建文件夹的功能</p>\n<p>anon_other_write_enable 设置虚拟用户是否可以执行其他的写入操作，覆盖，删除，重命名等。</p>\n<p>max_per_ip 最多允许同一账户在多少个不同的ip登陆</p>\n<p>3.根据以上的信息来修改vsftpd的配置文件</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">anonymous_enable=NO <span class=\"comment\"># 禁用匿名登录</span></span><br><span class=\"line\">ascii_upload_enable=YES</span><br><span class=\"line\">ascii_download_enable=YES</span><br><span class=\"line\">chroot_local_user=YES <span class=\"comment\"># 启用限定用户在其主目录下</span></span><br></pre></td></tr></table></figure>\n<p>以下配置为自己添加：<br><img src=\"https://i.imgur.com/3lWKWbB.png\"></p>\n<p>然后重启vsftpd：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart vsftpd.service</span><br></pre></td></tr></table></figure>\n<p>若是连接超时，请确认防火墙是否开放vsftpd服务的端口，建议开放20至22号端口以及主动模式PASV下的6000至7000端口。或者在服务器上的安全组里添加入方向的端口。</p>\n<p>以及SElinux是否关闭。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>之前一直用的是windows下的FlashFXP，现在用的Linux服务器（Centos 7.1），为了方便上传项目，安装vsftpd。</p>\n<p>1.安装vsftpd</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install vsftpd</span><br></pre></td></tr></table></figure>\n<p>安装完毕后可以通过启动来测试是否安装完成</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl start vsftpd.service</span><br></pre></td></tr></table></figure>\n<p>2.创建宿主用户及分配权限</p>\n<p>安装完默认情况下是开启匿名登录的，对应的是 /var/ftp 目录，这时只要服务启动了，就可以直接连上FTP了。而这并不是我们想要的效果，一般都是按照需求来分配用户访问不同的目录。</p>\n<p>新建一个ftp的宿主用户(即存在Linux系统的用户，不是虚拟用户)</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">groupadd ftpuser <span class=\"comment\">#创建用户组</span></span><br><span class=\"line\">useradd -g root -M -d /<span class=\"keyword\">var</span>/www -s /sbin/nologin ftpuser</span><br><span class=\"line\"><span class=\"comment\">#创建系统用户分配权限，只用于ftp，所以禁止登陆系统</span></span><br><span class=\"line\">passwd ftpuser <span class=\"comment\">#设置账户密码，这个不是很重要</span></span><br><span class=\"line\"><span class=\"comment\">#此处的ftpuser就是你的账户名</span></span><br><span class=\"line\"></span><br><span class=\"line\">chown -R ftpuser.root /<span class=\"keyword\">var</span>/www</span><br><span class=\"line\"><span class=\"comment\">#把 /var/www 的所有权给ftpuser.root</span></span><br><span class=\"line\"><span class=\"comment\">#这里的 /var/www 就是ftp的根目录，没有的话自行创建，也可以换成其他目录</span></span><br></pre></td></tr></table></figure>\n<p>这样就可以通过ftpuser用户连接FTP了。至于虚拟用户需要做的步骤就比较多了。首先虚拟用户的用户认证是通过pam方式去认证的，pam文件里面指定了认证的db文件，db文件又是通过明文用户名和密码文件生成而来，在 /etc/vsftpd/vsftpd.conf 配置文件是通过 pam_service_name=vsftpd 配置指定的，其位置是 /etc/pam.d/vsftpd，编辑该文件，把文件内容全部注释掉，加上以下两行：</p>\n<p>64位系统：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">auth required /lib64/security/pam_userdb.so db=/etc/vsftpd/vuser_passwd</span><br><span class=\"line\">account required /lib64/security/pam_userdb.so db=/etc/vsftpd/vuser_passwd</span><br></pre></td></tr></table></figure>\n<p>32位系统：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">auth sufficient /lib/security/pam_userdb.so db=/etc/vsftpd/vuser_passwd</span><br><span class=\"line\">account sufficient /lib/security/pam_userdb.so db=/etc/vsftpd/vuser_passwd</span><br></pre></td></tr></table></figure>\n<p>db=/etc/vsftpd/vuser_passwd 指定了db文件的位置，接下来就是生成db文件，由于db文件是通过明文用户名和密码文件生成而来，所以先创建一个保存明文用户名和密码的文件     vuser_passwd.txt</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/vsftpd/vuser_passwd.txt</span><br></pre></td></tr></table></figure>\n<p>这个文件的奇数行位账号，偶数行为密码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">beeasy</span><br><span class=\"line\">beeasy1234</span><br></pre></td></tr></table></figure>\n<p>保存之后通过以下命令生成db文件：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /etc/vsftpd</span><br><span class=\"line\">db_load -T -t hash -f vuser_passwd.txt vuser_passwd.db</span><br></pre></td></tr></table></figure>\n<p>如果 db_load 命令无法使用，那就需要安装db4 包</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install db4</span><br></pre></td></tr></table></figure>\n<p>如果要添加新的用户的话，在 vuser_passwd.txt 文件里面继续添加用户密码，但是要再次生成一下db文件。然后现在每个用户的具体配置是通过一个用户对应一个配置文件来实现的，且这个文件必须用FTP用户名去做文件名，建一个目录专门存放这些文件：</p>\n<p>在vsftpd目录下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir vuser_conf</span><br></pre></td></tr></table></figure>\n<p>并且新建文件</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi vuser_conf/beeasy</span><br></pre></td></tr></table></figure>\n<p>大致内容如下：</p>\n<p><img src=\"https://i.imgur.com/mzvPvJe.png\"></p>\n<p>local_root 是指当前虚拟用户的访问目录</p>\n<p>write_enable 设置用户是否可以写入</p>\n<p>anon_upload_enable 设置虚拟用户的上传功能</p>\n<p>anon_mkdir_write_enable 设置虚拟用户创建文件夹的功能</p>\n<p>anon_other_write_enable 设置虚拟用户是否可以执行其他的写入操作，覆盖，删除，重命名等。</p>\n<p>max_per_ip 最多允许同一账户在多少个不同的ip登陆</p>\n<p>3.根据以上的信息来修改vsftpd的配置文件</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">anonymous_enable=NO <span class=\"comment\"># 禁用匿名登录</span></span><br><span class=\"line\">ascii_upload_enable=YES</span><br><span class=\"line\">ascii_download_enable=YES</span><br><span class=\"line\">chroot_local_user=YES <span class=\"comment\"># 启用限定用户在其主目录下</span></span><br></pre></td></tr></table></figure>\n<p>以下配置为自己添加：<br><img src=\"https://i.imgur.com/3lWKWbB.png\"></p>\n<p>然后重启vsftpd：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart vsftpd.service</span><br></pre></td></tr></table></figure>\n<p>若是连接超时，请确认防火墙是否开放vsftpd服务的端口，建议开放20至22号端口以及主动模式PASV下的6000至7000端口。或者在服务器上的安全组里添加入方向的端口。</p>\n<p>以及SElinux是否关闭。</p>\n"},{"title":"Mysql相关小技巧总结在这里","date":"2018-11-24T06:42:47.000Z","_content":"1.Mysql触发器\n\n适用案例，删除订单同时删除订单详情：\n```php\n    CREATE TRIGGER del_orderdetails AFTER DELETE ON ms_order FOR EACH ROW\n    BEGIN\n    DELETE FROM ms_order_details WHERE user_id=old.id;\n    END\n```\ndel_orderdetails：触发器的名称 AFTER：触发时机，为BEFORE或者AFTER DELETE：触发事件，为INSERT、DELETE或者UPDATE ms_order：表示建立触发器的表明，就是在哪张表上建立触发器\n\n\n2.不同库之间的表关联查询\n```php\n    select * from db1.table1 left join db2.table2 on db1.table1.id = db2.table2.id\n```\n只需要在表前面带上库的名称加上然后在后面加上 ‘.’ 表名\n\n\n3.查询指定表是否存在\n```php\n    SELECT count(0) FROM information_schema.TABLES WHERE table_schema='gzjs' and table_name='user';\n```\n需要注意的是一定要带上table_schema来判断是哪个库，不然将会在所有的数据库来检索目标数据表\n\n\n4.查找id为奇数（偶数）的行\n```php\n    select * from table where id&1 ;//奇数\n    \n    select * from table where id=(id>>1)<<1 ;//偶数\n```","source":"_posts/Mysql-sum.md","raw":"---\ntitle: Mysql相关小技巧总结在这里\ndate: 2018-11-24 14:42:47\ncategories: Mysql\ntags:\n\tmysql\n---\n1.Mysql触发器\n\n适用案例，删除订单同时删除订单详情：\n```php\n    CREATE TRIGGER del_orderdetails AFTER DELETE ON ms_order FOR EACH ROW\n    BEGIN\n    DELETE FROM ms_order_details WHERE user_id=old.id;\n    END\n```\ndel_orderdetails：触发器的名称 AFTER：触发时机，为BEFORE或者AFTER DELETE：触发事件，为INSERT、DELETE或者UPDATE ms_order：表示建立触发器的表明，就是在哪张表上建立触发器\n\n\n2.不同库之间的表关联查询\n```php\n    select * from db1.table1 left join db2.table2 on db1.table1.id = db2.table2.id\n```\n只需要在表前面带上库的名称加上然后在后面加上 ‘.’ 表名\n\n\n3.查询指定表是否存在\n```php\n    SELECT count(0) FROM information_schema.TABLES WHERE table_schema='gzjs' and table_name='user';\n```\n需要注意的是一定要带上table_schema来判断是哪个库，不然将会在所有的数据库来检索目标数据表\n\n\n4.查找id为奇数（偶数）的行\n```php\n    select * from table where id&1 ;//奇数\n    \n    select * from table where id=(id>>1)<<1 ;//偶数\n```","slug":"Mysql-sum","published":1,"updated":"2021-11-25T03:28:13.077Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwn8bfxv001ctwnf38jk4cio","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>1.Mysql触发器</p>\n<p>适用案例，删除订单同时删除订单详情：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TRIGGER del_orderdetails AFTER DELETE ON ms_order <span class=\"keyword\">FOR</span> EACH ROW</span><br><span class=\"line\">BEGIN</span><br><span class=\"line\">DELETE <span class=\"keyword\">FROM</span> ms_order_details WHERE user_id=old.id;</span><br><span class=\"line\">END</span><br></pre></td></tr></table></figure>\n<p>del_orderdetails：触发器的名称 AFTER：触发时机，为BEFORE或者AFTER DELETE：触发事件，为INSERT、DELETE或者UPDATE ms_order：表示建立触发器的表明，就是在哪张表上建立触发器</p>\n<p>2.不同库之间的表关联查询</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * <span class=\"keyword\">from</span> db1.table1 left join db2.table2 on db1.table1.id = db2.table2.id</span><br></pre></td></tr></table></figure>\n<p>只需要在表前面带上库的名称加上然后在后面加上 ‘.’ 表名</p>\n<p>3.查询指定表是否存在</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT count(<span class=\"number\">0</span>) <span class=\"keyword\">FROM</span> information_schema.TABLES WHERE table_schema=<span class=\"string\">&#x27;gzjs&#x27;</span> <span class=\"keyword\">and</span> table_name=<span class=\"string\">&#x27;user&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<p>需要注意的是一定要带上table_schema来判断是哪个库，不然将会在所有的数据库来检索目标数据表</p>\n<p>4.查找id为奇数（偶数）的行</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * <span class=\"keyword\">from</span> table where id&amp;<span class=\"number\">1</span> ;<span class=\"comment\">//奇数</span></span><br><span class=\"line\"></span><br><span class=\"line\">select * <span class=\"keyword\">from</span> table where id=(id&gt;&gt;<span class=\"number\">1</span>)&lt;&lt;<span class=\"number\">1</span> ;<span class=\"comment\">//偶数</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>1.Mysql触发器</p>\n<p>适用案例，删除订单同时删除订单详情：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TRIGGER del_orderdetails AFTER DELETE ON ms_order <span class=\"keyword\">FOR</span> EACH ROW</span><br><span class=\"line\">BEGIN</span><br><span class=\"line\">DELETE <span class=\"keyword\">FROM</span> ms_order_details WHERE user_id=old.id;</span><br><span class=\"line\">END</span><br></pre></td></tr></table></figure>\n<p>del_orderdetails：触发器的名称 AFTER：触发时机，为BEFORE或者AFTER DELETE：触发事件，为INSERT、DELETE或者UPDATE ms_order：表示建立触发器的表明，就是在哪张表上建立触发器</p>\n<p>2.不同库之间的表关联查询</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * <span class=\"keyword\">from</span> db1.table1 left join db2.table2 on db1.table1.id = db2.table2.id</span><br></pre></td></tr></table></figure>\n<p>只需要在表前面带上库的名称加上然后在后面加上 ‘.’ 表名</p>\n<p>3.查询指定表是否存在</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT count(<span class=\"number\">0</span>) <span class=\"keyword\">FROM</span> information_schema.TABLES WHERE table_schema=<span class=\"string\">&#x27;gzjs&#x27;</span> <span class=\"keyword\">and</span> table_name=<span class=\"string\">&#x27;user&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<p>需要注意的是一定要带上table_schema来判断是哪个库，不然将会在所有的数据库来检索目标数据表</p>\n<p>4.查找id为奇数（偶数）的行</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * <span class=\"keyword\">from</span> table where id&amp;<span class=\"number\">1</span> ;<span class=\"comment\">//奇数</span></span><br><span class=\"line\"></span><br><span class=\"line\">select * <span class=\"keyword\">from</span> table where id=(id&gt;&gt;<span class=\"number\">1</span>)&lt;&lt;<span class=\"number\">1</span> ;<span class=\"comment\">//偶数</span></span><br></pre></td></tr></table></figure>"},{"title":"PHP无极分类递归方法实现","date":"2018-03-23T06:36:44.000Z","_content":"在做权限相关模块的功能，我们需要给不同的用户指定不同功能权限。\n\n首先我们需要一张分类的表格。类似于这样：\n\n![](https://i.imgur.com/Ix6npqC.png)\n\n其中category_id表示的是分类id，category_name表示的是分类名，pid代表的就是父级分类id，我们可以将顶级的pid设置为0，以递归算法实现父级以下包涵所有子级：\n```php\n    /**\n     * 无极分类递归 选择权限\n    *   @param   int $assortPid   要查询分类的父级id\n    *   @param   mixed   $tag 上下级分类之间的分隔符\n    *   @param   array   $list包涵权限的数组\n    *   @return  string  $tree返回的分类树型结构结果 \n    *\n    */\n    function recursiveAssort($assortPid, $tag = '',$list)\n    {   \n    \n    $assort = M('category')->where(\"pid = $assortPid\")->field('category_id, category_name')->order(\"category_id asc\")->select();\n    foreach ($assort as $value) {\n      if(in_array($value['category_id'], $list)){\n    $tree .= '<li>'.$tag.'<input type=\"checkbox\" checked=\"checked\" name=\"permission[]\" value=\"' . $value['category_id'] . '\">' .\"<label for='role_2'>\".$value['category_name'].\"</label></li>\";\n    $tree .= recursiveAssort($value['category_id'], $tag.'├ ',$list);\n      }else{\n    $tree .= '<li>'.$tag.'<input type=\"checkbox\" name=\"permission[]\" value=\"' . $value['category_id'] . '\">' .\"<label for='role_2'>\".$value['category_name'].\"</label></li>\";\n    $tree .= recursiveAssort($value['category_id'], $tag.'├ ',$list);\n      }\n    }\n    return $tree;\n    }\n```\n比如\n```php\n$list=[1,3,4];\n```\n那么分类id为1,3,4的分类将会自动添加钩中的样式。\n\n相当于先遍历出pid=0的所有顶级菜单，然后再次调用自身查询当前顶级菜单下的子级菜单，以此类推，直到查询结束。同时以字符串拼接的方式存放在$tree里。\n\n以下为工作中改良后的版本，实现的效果如下：\n\n![](https://i.imgur.com/UAcpdqu.png)\n\n\n源代码：\n```php\n    <li class=\"level0\">\n    <a href=\"\">\n    <i class=\"icon-cogs\"></i>\n    <span class=\"title\">基础设置</span>\n    <span class=\"arrow\"></span>\n    </a>\n    <ul class=\"sub-menu\">\n    <li class=\"level1\">\n    <a href=\"\">\n    <i class=\"icon-home\"></i>\n    <span class=\"title\">管理中心</span>\n    </a>\n    </li>\n    <li class=\"level1\">\n    <a href=\"\">\n    <i class=\"icon-globe\"></i>\n    <span class=\"title\">站点配置</span>\n    </a>\n    </li>\n    <li class=\"level1\">\n    <a href=\"\">\n    <i class=\"icon-user\"></i>\n    <span class=\"title\">管理员</span>\n    </a>\n    </li>\n    </ul>\n     </li>\n```\n改版后的递归方法：\n```php\n    /**\n     * 无极分类递归 菜单加载\n    *   @param   int $assortPid   要查询分类的父级id\n    *   @param   mixed   $tag 上下级分类之间的分隔符\n    *   @param   array   $list包涵权限的数组\n    *   @return  string  $tree返回的分类树型结构结果 \n    *\n    */\n    function recursiveAssort_menu($assortPid,$list,$tag = '<li class=\"level0\">',$tag2='<ul class=\"sub-menu\">',$tag3='<span class=\"arrow\"></span>',$tag4='</ul></li>')\n    {   \n    $assort = M('category')->where(\"pid = $assortPid\")->field('category_id, category_name,url,icon')->order(\"category_id asc\")->select();\n    \n    foreach ($assort as $value) {\n      \n      if(in_array($value['category_id'], $list)){\n    $tree.=$tag;\n    $tree.= '<a href=\"'.$value['url'].'\"> <i class=\"'.$value['icon'].'\"></i><span class=\"title\">'.$value['category_name'].'</span>'.$tag3.'</a>'.$tag2;\n    $tree.= recursiveAssort_menu($value['category_id'],$list,'<li class=\"level1\">','','','</li>');\n    $tree.=$tag4;\n      \n     \n      }\n      \n    }\n    return $tree;\n    }\n```","source":"_posts/PHP-non-polar-classification.md","raw":"---\ntitle: PHP无极分类递归方法实现\ndate: 2018-03-23 14:36:44\ncategories: PHP\ntags:\n\t- 递归\n\t- php\n---\n在做权限相关模块的功能，我们需要给不同的用户指定不同功能权限。\n\n首先我们需要一张分类的表格。类似于这样：\n\n![](https://i.imgur.com/Ix6npqC.png)\n\n其中category_id表示的是分类id，category_name表示的是分类名，pid代表的就是父级分类id，我们可以将顶级的pid设置为0，以递归算法实现父级以下包涵所有子级：\n```php\n    /**\n     * 无极分类递归 选择权限\n    *   @param   int $assortPid   要查询分类的父级id\n    *   @param   mixed   $tag 上下级分类之间的分隔符\n    *   @param   array   $list包涵权限的数组\n    *   @return  string  $tree返回的分类树型结构结果 \n    *\n    */\n    function recursiveAssort($assortPid, $tag = '',$list)\n    {   \n    \n    $assort = M('category')->where(\"pid = $assortPid\")->field('category_id, category_name')->order(\"category_id asc\")->select();\n    foreach ($assort as $value) {\n      if(in_array($value['category_id'], $list)){\n    $tree .= '<li>'.$tag.'<input type=\"checkbox\" checked=\"checked\" name=\"permission[]\" value=\"' . $value['category_id'] . '\">' .\"<label for='role_2'>\".$value['category_name'].\"</label></li>\";\n    $tree .= recursiveAssort($value['category_id'], $tag.'├ ',$list);\n      }else{\n    $tree .= '<li>'.$tag.'<input type=\"checkbox\" name=\"permission[]\" value=\"' . $value['category_id'] . '\">' .\"<label for='role_2'>\".$value['category_name'].\"</label></li>\";\n    $tree .= recursiveAssort($value['category_id'], $tag.'├ ',$list);\n      }\n    }\n    return $tree;\n    }\n```\n比如\n```php\n$list=[1,3,4];\n```\n那么分类id为1,3,4的分类将会自动添加钩中的样式。\n\n相当于先遍历出pid=0的所有顶级菜单，然后再次调用自身查询当前顶级菜单下的子级菜单，以此类推，直到查询结束。同时以字符串拼接的方式存放在$tree里。\n\n以下为工作中改良后的版本，实现的效果如下：\n\n![](https://i.imgur.com/UAcpdqu.png)\n\n\n源代码：\n```php\n    <li class=\"level0\">\n    <a href=\"\">\n    <i class=\"icon-cogs\"></i>\n    <span class=\"title\">基础设置</span>\n    <span class=\"arrow\"></span>\n    </a>\n    <ul class=\"sub-menu\">\n    <li class=\"level1\">\n    <a href=\"\">\n    <i class=\"icon-home\"></i>\n    <span class=\"title\">管理中心</span>\n    </a>\n    </li>\n    <li class=\"level1\">\n    <a href=\"\">\n    <i class=\"icon-globe\"></i>\n    <span class=\"title\">站点配置</span>\n    </a>\n    </li>\n    <li class=\"level1\">\n    <a href=\"\">\n    <i class=\"icon-user\"></i>\n    <span class=\"title\">管理员</span>\n    </a>\n    </li>\n    </ul>\n     </li>\n```\n改版后的递归方法：\n```php\n    /**\n     * 无极分类递归 菜单加载\n    *   @param   int $assortPid   要查询分类的父级id\n    *   @param   mixed   $tag 上下级分类之间的分隔符\n    *   @param   array   $list包涵权限的数组\n    *   @return  string  $tree返回的分类树型结构结果 \n    *\n    */\n    function recursiveAssort_menu($assortPid,$list,$tag = '<li class=\"level0\">',$tag2='<ul class=\"sub-menu\">',$tag3='<span class=\"arrow\"></span>',$tag4='</ul></li>')\n    {   \n    $assort = M('category')->where(\"pid = $assortPid\")->field('category_id, category_name,url,icon')->order(\"category_id asc\")->select();\n    \n    foreach ($assort as $value) {\n      \n      if(in_array($value['category_id'], $list)){\n    $tree.=$tag;\n    $tree.= '<a href=\"'.$value['url'].'\"> <i class=\"'.$value['icon'].'\"></i><span class=\"title\">'.$value['category_name'].'</span>'.$tag3.'</a>'.$tag2;\n    $tree.= recursiveAssort_menu($value['category_id'],$list,'<li class=\"level1\">','','','</li>');\n    $tree.=$tag4;\n      \n     \n      }\n      \n    }\n    return $tree;\n    }\n```","slug":"PHP-non-polar-classification","published":1,"updated":"2021-11-25T03:28:13.077Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwn8bfxw001ftwnf084daso3","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>在做权限相关模块的功能，我们需要给不同的用户指定不同功能权限。</p>\n<p>首先我们需要一张分类的表格。类似于这样：</p>\n<p><img src=\"https://i.imgur.com/Ix6npqC.png\"></p>\n<p>其中category_id表示的是分类id，category_name表示的是分类名，pid代表的就是父级分类id，我们可以将顶级的pid设置为0，以递归算法实现父级以下包涵所有子级：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 无极分类递归 选择权限</span></span><br><span class=\"line\"><span class=\"comment\">*   <span class=\"doctag\">@param</span>   int $assortPid   要查询分类的父级id</span></span><br><span class=\"line\"><span class=\"comment\">*   <span class=\"doctag\">@param</span>   mixed   $tag 上下级分类之间的分隔符</span></span><br><span class=\"line\"><span class=\"comment\">*   <span class=\"doctag\">@param</span>   array   $list包涵权限的数组</span></span><br><span class=\"line\"><span class=\"comment\">*   <span class=\"doctag\">@return</span>  string  $tree返回的分类树型结构结果 </span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">recursiveAssort</span>(<span class=\"params\"><span class=\"variable\">$assortPid</span>, <span class=\"variable\">$tag</span> = <span class=\"string\">&#x27;&#x27;</span>,<span class=\"variable\">$list</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$assort</span> = M(<span class=\"string\">&#x27;category&#x27;</span>)-&gt;where(<span class=\"string\">&quot;pid = <span class=\"subst\">$assortPid</span>&quot;</span>)-&gt;field(<span class=\"string\">&#x27;category_id, category_name&#x27;</span>)-&gt;order(<span class=\"string\">&quot;category_id asc&quot;</span>)-&gt;select();</span><br><span class=\"line\"><span class=\"keyword\">foreach</span> (<span class=\"variable\">$assort</span> <span class=\"keyword\">as</span> <span class=\"variable\">$value</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(in_array(<span class=\"variable\">$value</span>[<span class=\"string\">&#x27;category_id&#x27;</span>], <span class=\"variable\">$list</span>))&#123;</span><br><span class=\"line\"><span class=\"variable\">$tree</span> .= <span class=\"string\">&#x27;&lt;li&gt;&#x27;</span>.<span class=\"variable\">$tag</span>.<span class=\"string\">&#x27;&lt;input type=&quot;checkbox&quot; checked=&quot;checked&quot; name=&quot;permission[]&quot; value=&quot;&#x27;</span> . <span class=\"variable\">$value</span>[<span class=\"string\">&#x27;category_id&#x27;</span>] . <span class=\"string\">&#x27;&quot;&gt;&#x27;</span> .<span class=\"string\">&quot;&lt;label for=&#x27;role_2&#x27;&gt;&quot;</span>.<span class=\"variable\">$value</span>[<span class=\"string\">&#x27;category_name&#x27;</span>].<span class=\"string\">&quot;&lt;/label&gt;&lt;/li&gt;&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$tree</span> .= recursiveAssort(<span class=\"variable\">$value</span>[<span class=\"string\">&#x27;category_id&#x27;</span>], <span class=\"variable\">$tag</span>.<span class=\"string\">&#x27;├ &#x27;</span>,<span class=\"variable\">$list</span>);</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\"><span class=\"variable\">$tree</span> .= <span class=\"string\">&#x27;&lt;li&gt;&#x27;</span>.<span class=\"variable\">$tag</span>.<span class=\"string\">&#x27;&lt;input type=&quot;checkbox&quot; name=&quot;permission[]&quot; value=&quot;&#x27;</span> . <span class=\"variable\">$value</span>[<span class=\"string\">&#x27;category_id&#x27;</span>] . <span class=\"string\">&#x27;&quot;&gt;&#x27;</span> .<span class=\"string\">&quot;&lt;label for=&#x27;role_2&#x27;&gt;&quot;</span>.<span class=\"variable\">$value</span>[<span class=\"string\">&#x27;category_name&#x27;</span>].<span class=\"string\">&quot;&lt;/label&gt;&lt;/li&gt;&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$tree</span> .= recursiveAssort(<span class=\"variable\">$value</span>[<span class=\"string\">&#x27;category_id&#x27;</span>], <span class=\"variable\">$tag</span>.<span class=\"string\">&#x27;├ &#x27;</span>,<span class=\"variable\">$list</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"variable\">$tree</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>比如</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$list</span>=[<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>];</span><br></pre></td></tr></table></figure>\n<p>那么分类id为1,3,4的分类将会自动添加钩中的样式。</p>\n<p>相当于先遍历出pid=0的所有顶级菜单，然后再次调用自身查询当前顶级菜单下的子级菜单，以此类推，直到查询结束。同时以字符串拼接的方式存放在$tree里。</p>\n<p>以下为工作中改良后的版本，实现的效果如下：</p>\n<p><img src=\"https://i.imgur.com/UAcpdqu.png\"></p>\n<p>源代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;li <span class=\"class\"><span class=\"keyword\">class</span>=&quot;<span class=\"title\">level0</span>&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">a</span> <span class=\"title\">href</span>=&quot;&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">i</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">icon</span>-<span class=\"title\">cogs</span>&quot;&gt;&lt;/<span class=\"title\">i</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">span</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">title</span>&quot;&gt;基础设置&lt;/<span class=\"title\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">span</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">arrow</span>&quot;&gt;&lt;/<span class=\"title\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">ul</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">sub</span>-<span class=\"title\">menu</span>&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">li</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">level1</span>&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">a</span> <span class=\"title\">href</span>=&quot;&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">i</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">icon</span>-<span class=\"title\">home</span>&quot;&gt;&lt;/<span class=\"title\">i</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">span</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">title</span>&quot;&gt;管理中心&lt;/<span class=\"title\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">li</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">level1</span>&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">a</span> <span class=\"title\">href</span>=&quot;&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">i</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">icon</span>-<span class=\"title\">globe</span>&quot;&gt;&lt;/<span class=\"title\">i</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">span</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">title</span>&quot;&gt;站点配置&lt;/<span class=\"title\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">li</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">level1</span>&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">a</span> <span class=\"title\">href</span>=&quot;&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">i</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">icon</span>-<span class=\"title\">user</span>&quot;&gt;&lt;/<span class=\"title\">i</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">span</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">title</span>&quot;&gt;管理员&lt;/<span class=\"title\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\"> &lt;/<span class=\"title\">li</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>改版后的递归方法：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 无极分类递归 菜单加载</span></span><br><span class=\"line\"><span class=\"comment\">*   <span class=\"doctag\">@param</span>   int $assortPid   要查询分类的父级id</span></span><br><span class=\"line\"><span class=\"comment\">*   <span class=\"doctag\">@param</span>   mixed   $tag 上下级分类之间的分隔符</span></span><br><span class=\"line\"><span class=\"comment\">*   <span class=\"doctag\">@param</span>   array   $list包涵权限的数组</span></span><br><span class=\"line\"><span class=\"comment\">*   <span class=\"doctag\">@return</span>  string  $tree返回的分类树型结构结果 </span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">recursiveAssort_menu</span>(<span class=\"params\"><span class=\"variable\">$assortPid</span>,<span class=\"variable\">$list</span>,<span class=\"variable\">$tag</span> = <span class=\"string\">&#x27;&lt;li class=&quot;level0&quot;&gt;&#x27;</span>,<span class=\"variable\">$tag2</span>=<span class=\"string\">&#x27;&lt;ul class=&quot;sub-menu&quot;&gt;&#x27;</span>,<span class=\"variable\">$tag3</span>=<span class=\"string\">&#x27;&lt;span class=&quot;arrow&quot;&gt;&lt;/span&gt;&#x27;</span>,<span class=\"variable\">$tag4</span>=<span class=\"string\">&#x27;&lt;/ul&gt;&lt;/li&gt;&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;   </span><br><span class=\"line\"><span class=\"variable\">$assort</span> = M(<span class=\"string\">&#x27;category&#x27;</span>)-&gt;where(<span class=\"string\">&quot;pid = <span class=\"subst\">$assortPid</span>&quot;</span>)-&gt;field(<span class=\"string\">&#x27;category_id, category_name,url,icon&#x27;</span>)-&gt;order(<span class=\"string\">&quot;category_id asc&quot;</span>)-&gt;select();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">foreach</span> (<span class=\"variable\">$assort</span> <span class=\"keyword\">as</span> <span class=\"variable\">$value</span>) &#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(in_array(<span class=\"variable\">$value</span>[<span class=\"string\">&#x27;category_id&#x27;</span>], <span class=\"variable\">$list</span>))&#123;</span><br><span class=\"line\"><span class=\"variable\">$tree</span>.=<span class=\"variable\">$tag</span>;</span><br><span class=\"line\"><span class=\"variable\">$tree</span>.= <span class=\"string\">&#x27;&lt;a href=&quot;&#x27;</span>.<span class=\"variable\">$value</span>[<span class=\"string\">&#x27;url&#x27;</span>].<span class=\"string\">&#x27;&quot;&gt; &lt;i class=&quot;&#x27;</span>.<span class=\"variable\">$value</span>[<span class=\"string\">&#x27;icon&#x27;</span>].<span class=\"string\">&#x27;&quot;&gt;&lt;/i&gt;&lt;span class=&quot;title&quot;&gt;&#x27;</span>.<span class=\"variable\">$value</span>[<span class=\"string\">&#x27;category_name&#x27;</span>].<span class=\"string\">&#x27;&lt;/span&gt;&#x27;</span>.<span class=\"variable\">$tag3</span>.<span class=\"string\">&#x27;&lt;/a&gt;&#x27;</span>.<span class=\"variable\">$tag2</span>;</span><br><span class=\"line\"><span class=\"variable\">$tree</span>.= recursiveAssort_menu(<span class=\"variable\">$value</span>[<span class=\"string\">&#x27;category_id&#x27;</span>],<span class=\"variable\">$list</span>,<span class=\"string\">&#x27;&lt;li class=&quot;level1&quot;&gt;&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>,<span class=\"string\">&#x27;&lt;/li&gt;&#x27;</span>);</span><br><span class=\"line\"><span class=\"variable\">$tree</span>.=<span class=\"variable\">$tag4</span>;</span><br><span class=\"line\">  </span><br><span class=\"line\"> </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"variable\">$tree</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>在做权限相关模块的功能，我们需要给不同的用户指定不同功能权限。</p>\n<p>首先我们需要一张分类的表格。类似于这样：</p>\n<p><img src=\"https://i.imgur.com/Ix6npqC.png\"></p>\n<p>其中category_id表示的是分类id，category_name表示的是分类名，pid代表的就是父级分类id，我们可以将顶级的pid设置为0，以递归算法实现父级以下包涵所有子级：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 无极分类递归 选择权限</span></span><br><span class=\"line\"><span class=\"comment\">*   <span class=\"doctag\">@param</span>   int $assortPid   要查询分类的父级id</span></span><br><span class=\"line\"><span class=\"comment\">*   <span class=\"doctag\">@param</span>   mixed   $tag 上下级分类之间的分隔符</span></span><br><span class=\"line\"><span class=\"comment\">*   <span class=\"doctag\">@param</span>   array   $list包涵权限的数组</span></span><br><span class=\"line\"><span class=\"comment\">*   <span class=\"doctag\">@return</span>  string  $tree返回的分类树型结构结果 </span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">recursiveAssort</span>(<span class=\"params\"><span class=\"variable\">$assortPid</span>, <span class=\"variable\">$tag</span> = <span class=\"string\">&#x27;&#x27;</span>,<span class=\"variable\">$list</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$assort</span> = M(<span class=\"string\">&#x27;category&#x27;</span>)-&gt;where(<span class=\"string\">&quot;pid = <span class=\"subst\">$assortPid</span>&quot;</span>)-&gt;field(<span class=\"string\">&#x27;category_id, category_name&#x27;</span>)-&gt;order(<span class=\"string\">&quot;category_id asc&quot;</span>)-&gt;select();</span><br><span class=\"line\"><span class=\"keyword\">foreach</span> (<span class=\"variable\">$assort</span> <span class=\"keyword\">as</span> <span class=\"variable\">$value</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(in_array(<span class=\"variable\">$value</span>[<span class=\"string\">&#x27;category_id&#x27;</span>], <span class=\"variable\">$list</span>))&#123;</span><br><span class=\"line\"><span class=\"variable\">$tree</span> .= <span class=\"string\">&#x27;&lt;li&gt;&#x27;</span>.<span class=\"variable\">$tag</span>.<span class=\"string\">&#x27;&lt;input type=&quot;checkbox&quot; checked=&quot;checked&quot; name=&quot;permission[]&quot; value=&quot;&#x27;</span> . <span class=\"variable\">$value</span>[<span class=\"string\">&#x27;category_id&#x27;</span>] . <span class=\"string\">&#x27;&quot;&gt;&#x27;</span> .<span class=\"string\">&quot;&lt;label for=&#x27;role_2&#x27;&gt;&quot;</span>.<span class=\"variable\">$value</span>[<span class=\"string\">&#x27;category_name&#x27;</span>].<span class=\"string\">&quot;&lt;/label&gt;&lt;/li&gt;&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$tree</span> .= recursiveAssort(<span class=\"variable\">$value</span>[<span class=\"string\">&#x27;category_id&#x27;</span>], <span class=\"variable\">$tag</span>.<span class=\"string\">&#x27;├ &#x27;</span>,<span class=\"variable\">$list</span>);</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\"><span class=\"variable\">$tree</span> .= <span class=\"string\">&#x27;&lt;li&gt;&#x27;</span>.<span class=\"variable\">$tag</span>.<span class=\"string\">&#x27;&lt;input type=&quot;checkbox&quot; name=&quot;permission[]&quot; value=&quot;&#x27;</span> . <span class=\"variable\">$value</span>[<span class=\"string\">&#x27;category_id&#x27;</span>] . <span class=\"string\">&#x27;&quot;&gt;&#x27;</span> .<span class=\"string\">&quot;&lt;label for=&#x27;role_2&#x27;&gt;&quot;</span>.<span class=\"variable\">$value</span>[<span class=\"string\">&#x27;category_name&#x27;</span>].<span class=\"string\">&quot;&lt;/label&gt;&lt;/li&gt;&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$tree</span> .= recursiveAssort(<span class=\"variable\">$value</span>[<span class=\"string\">&#x27;category_id&#x27;</span>], <span class=\"variable\">$tag</span>.<span class=\"string\">&#x27;├ &#x27;</span>,<span class=\"variable\">$list</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"variable\">$tree</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>比如</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$list</span>=[<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>];</span><br></pre></td></tr></table></figure>\n<p>那么分类id为1,3,4的分类将会自动添加钩中的样式。</p>\n<p>相当于先遍历出pid=0的所有顶级菜单，然后再次调用自身查询当前顶级菜单下的子级菜单，以此类推，直到查询结束。同时以字符串拼接的方式存放在$tree里。</p>\n<p>以下为工作中改良后的版本，实现的效果如下：</p>\n<p><img src=\"https://i.imgur.com/UAcpdqu.png\"></p>\n<p>源代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;li <span class=\"class\"><span class=\"keyword\">class</span>=&quot;<span class=\"title\">level0</span>&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">a</span> <span class=\"title\">href</span>=&quot;&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">i</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">icon</span>-<span class=\"title\">cogs</span>&quot;&gt;&lt;/<span class=\"title\">i</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">span</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">title</span>&quot;&gt;基础设置&lt;/<span class=\"title\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">span</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">arrow</span>&quot;&gt;&lt;/<span class=\"title\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">ul</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">sub</span>-<span class=\"title\">menu</span>&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">li</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">level1</span>&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">a</span> <span class=\"title\">href</span>=&quot;&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">i</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">icon</span>-<span class=\"title\">home</span>&quot;&gt;&lt;/<span class=\"title\">i</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">span</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">title</span>&quot;&gt;管理中心&lt;/<span class=\"title\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">li</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">level1</span>&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">a</span> <span class=\"title\">href</span>=&quot;&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">i</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">icon</span>-<span class=\"title\">globe</span>&quot;&gt;&lt;/<span class=\"title\">i</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">span</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">title</span>&quot;&gt;站点配置&lt;/<span class=\"title\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">li</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">level1</span>&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">a</span> <span class=\"title\">href</span>=&quot;&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">i</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">icon</span>-<span class=\"title\">user</span>&quot;&gt;&lt;/<span class=\"title\">i</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">span</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">title</span>&quot;&gt;管理员&lt;/<span class=\"title\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\"> &lt;/<span class=\"title\">li</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>改版后的递归方法：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 无极分类递归 菜单加载</span></span><br><span class=\"line\"><span class=\"comment\">*   <span class=\"doctag\">@param</span>   int $assortPid   要查询分类的父级id</span></span><br><span class=\"line\"><span class=\"comment\">*   <span class=\"doctag\">@param</span>   mixed   $tag 上下级分类之间的分隔符</span></span><br><span class=\"line\"><span class=\"comment\">*   <span class=\"doctag\">@param</span>   array   $list包涵权限的数组</span></span><br><span class=\"line\"><span class=\"comment\">*   <span class=\"doctag\">@return</span>  string  $tree返回的分类树型结构结果 </span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">recursiveAssort_menu</span>(<span class=\"params\"><span class=\"variable\">$assortPid</span>,<span class=\"variable\">$list</span>,<span class=\"variable\">$tag</span> = <span class=\"string\">&#x27;&lt;li class=&quot;level0&quot;&gt;&#x27;</span>,<span class=\"variable\">$tag2</span>=<span class=\"string\">&#x27;&lt;ul class=&quot;sub-menu&quot;&gt;&#x27;</span>,<span class=\"variable\">$tag3</span>=<span class=\"string\">&#x27;&lt;span class=&quot;arrow&quot;&gt;&lt;/span&gt;&#x27;</span>,<span class=\"variable\">$tag4</span>=<span class=\"string\">&#x27;&lt;/ul&gt;&lt;/li&gt;&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;   </span><br><span class=\"line\"><span class=\"variable\">$assort</span> = M(<span class=\"string\">&#x27;category&#x27;</span>)-&gt;where(<span class=\"string\">&quot;pid = <span class=\"subst\">$assortPid</span>&quot;</span>)-&gt;field(<span class=\"string\">&#x27;category_id, category_name,url,icon&#x27;</span>)-&gt;order(<span class=\"string\">&quot;category_id asc&quot;</span>)-&gt;select();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">foreach</span> (<span class=\"variable\">$assort</span> <span class=\"keyword\">as</span> <span class=\"variable\">$value</span>) &#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(in_array(<span class=\"variable\">$value</span>[<span class=\"string\">&#x27;category_id&#x27;</span>], <span class=\"variable\">$list</span>))&#123;</span><br><span class=\"line\"><span class=\"variable\">$tree</span>.=<span class=\"variable\">$tag</span>;</span><br><span class=\"line\"><span class=\"variable\">$tree</span>.= <span class=\"string\">&#x27;&lt;a href=&quot;&#x27;</span>.<span class=\"variable\">$value</span>[<span class=\"string\">&#x27;url&#x27;</span>].<span class=\"string\">&#x27;&quot;&gt; &lt;i class=&quot;&#x27;</span>.<span class=\"variable\">$value</span>[<span class=\"string\">&#x27;icon&#x27;</span>].<span class=\"string\">&#x27;&quot;&gt;&lt;/i&gt;&lt;span class=&quot;title&quot;&gt;&#x27;</span>.<span class=\"variable\">$value</span>[<span class=\"string\">&#x27;category_name&#x27;</span>].<span class=\"string\">&#x27;&lt;/span&gt;&#x27;</span>.<span class=\"variable\">$tag3</span>.<span class=\"string\">&#x27;&lt;/a&gt;&#x27;</span>.<span class=\"variable\">$tag2</span>;</span><br><span class=\"line\"><span class=\"variable\">$tree</span>.= recursiveAssort_menu(<span class=\"variable\">$value</span>[<span class=\"string\">&#x27;category_id&#x27;</span>],<span class=\"variable\">$list</span>,<span class=\"string\">&#x27;&lt;li class=&quot;level1&quot;&gt;&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>,<span class=\"string\">&#x27;&lt;/li&gt;&#x27;</span>);</span><br><span class=\"line\"><span class=\"variable\">$tree</span>.=<span class=\"variable\">$tag4</span>;</span><br><span class=\"line\">  </span><br><span class=\"line\"> </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"variable\">$tree</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Thinkphp+jquery实现多图异步上传","date":"2018-03-23T06:43:35.000Z","_content":"网上查找了很多方法，有的多图上传是通过html添加多个input框type=file，然后在后台遍历循环$_FILES实现一张张上传图片。还有一种就是通过jq将图片转码成base64来将图片存储成字符串的形式，然后后台将获取到的字符串通过解码成图片文件保存，这里要说的就是这种方法。\n\nhtml页面主要部分如下：\n```php\n            <div class=\"weui-cells weui-cells_form\" id=\"uploader\">\n                <div class=\"weui-cell\">\n                    <div class=\"weui-cell__bd\">\n                        <div class=\"weui-uploader\">\n                            <input name=\"goods_id\" value=\"{$goods_id}\" type=\"hidden\">\n                            <div class=\"weui-uploader__bd\">\n                                <ul class=\"weui-uploader__files\" id=\"uploaderFiles\"></ul>\n                                <div class=\"weui-uploader__input-box\">\n                                    <div class=\"file-img\">\n                                        <i></i>\n                                        <p>添加图片</p>\n                                    </div>\n\n                                    <input id=\"uploaderInput\" class=\"weui-uploader__input\" name=\"img\" type=\"file\" accept=\"image/*\" capture=\"camera\" multiple=\"\" />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n```\njq部分：\n```php\n    /* 图片手动上传 */\n    var uploadCustomFileList = [];\n    var uploadCount = 0;\n    \n    weui.uploader('#uploader', {\n    // url: 'http://localhost:8002/upload',\n    auto: false,\n    type:'base64',\n    onQueued: function onQueued() {\n    uploadCustomFileList.push(this);\n      \n    //console.log(this.url.match(/url\\((.*?)\\)/)[1].replace(/\"/g, ''));\n    },\n    onBeforeQueued: function (files) {\n    // `this` 是轮询到的文件, `files` 是所有文件\n    \n    if ([\"image/jpg\", \"image/jpeg\", \"image/png\", \"image/gif\"].indexOf(this.type) < 0) {\n    weui.alert('请上传图片');\n    return false; // 阻止文件添加\n    }\n    if (this.size > 2 * 1024 * 1024) {\n    weui.alert('请上传不超过2M的图片');\n    return false;\n    }\n    if (files.length > 3) { // 防止一下子选择过多文件\n    weui.alert('最多只能上传3张图片，请重新选择');\n    return false;\n    }\n    if (uploadCount + 1 > 3) {\n    weui.alert('最多只能上传3张图片');\n    return false;\n    }\n    \n    ++uploadCount;\n    \n    //return true; // 阻止默认行为，不插入预览图的框架\n    },\n    });\n```\n将上传的图片转码成base64\n```php\n    // 缩略图预览\n    document.querySelector('#uploaderFiles').addEventListener('click', function (e) {\n    var target = e.target;\n    // var _that = this.children.length;\n    // console.log(_that);\n    \n    while (!target.classList.contains('weui-uploader__file') && target) {\n    target = target.parentNode;\n    \n    }\n    if (!target) return;\n    \n    var url = target.getAttribute('style') || '';\n    var id = target.getAttribute('data-id');\n    \n    if (url) {\n    url = url.match(/url\\((.*?)\\)/)[1].replace(/\"/g, '');\n    }\n    var gallery = weui.gallery(url, {\n    onDelete: function onDelete() {\n    weui.confirm('确定删除该图片？', function () {\n    var index;\n    for (var i = 0, len = uploadCustomFileList.length; i < len; ++i) {\n    var file = uploadCustomFileList[i];\n    if (file.id == id) {\n    index = i;\n    break;\n    }\n    }\n    if (index !== undefined) uploadCustomFileList.splice(index, 1);\n    \n     uploadCount --;\n    \n    target.remove();\n    gallery.hide();\n    \n    });\n    }\n    });\n    });\n```\n这是生成缩略图预览\n```php\n    $(function () {\n    \n    $(\"form\").submit(function(){\n    \n    var arr=[];\n    var urls=$(\"[name=upload_url]\").val();\n      $(\"#uploaderFiles\").find(\"li\").each(function(index,item){\n    var data_id = $(item).data(\"id\");\n       var img_url = $(item)[0].style.backgroundImage.split(\"\\\"\")[1];\n    \n    //.split(\"\\\"\")[1]\n    arr[index]=img_url;\n    //console.log(data_id);\n    //console.log(img_url);\n      })\n    \n      $.ajax({\n    type:'post',\n    url:urls,\n    async:false,\n    data:{result:arr},\n    success:function(msg){\n    console.log(msg);\n    }\n      })\n      console.log(arr);\n    return  false;\n    });\n    })\n```\n以上是将转码成base64的图片存到一个二维数组里面，方便后台遍历存储。\n\njquery传递的数据大致如下：\n\n![](https://i.imgur.com/tQSb2iq.png)\n\n这是传递两个图片的例子，当只有一个图片的时候二维数组的长度（length）即为1。\n\n后台接收处理图片：\n```php\n    \t/**\n    \t * 异步上传图片\n    \t */\n    \tpublic function upload_img() {\n    \t\tif (IS_AJAX) {\n    \t\t\t$data = I(\"result\");\n    \t\t\tforeach ($data as $key => $value) {\n    \n    \t\t\t\tlist($type, $datas) = explode(',', $value);//获取图片类型，以及转码后的图片\n    \t\t\t\tif (strstr($type, 'image/jpeg') !== '') {//判断图片类型\n    \t\t\t\t\t$ext = '.jpg';\n    \t\t\t\t} elseif (strstr($type, 'image/gif') !== '') {\n    \t\t\t\t\t$ext = '.gif';\n    \t\t\t\t} elseif (strstr($type, 'image/png') !== '') {\n    \t\t\t\t\t$ext = '.png';\n    \t\t\t\t}\n    \n    \t\t\t\t$photo = __ROOT__ . \"/uploads/Goods/\" . date(\"Y-m-d\", time()) . '/' . time() . $key . $ext;//生成图片地址和文件并加上图片后缀\n    \n    \t\t\t\t// 生成文件\n    \t\t\t\tfile_put_contents($photo, base64_decode($datas), true);//解码图片进行保存\n    \t\t\t}\n    \t\t\t$this->ajaxReturn(\"ok\");\n    \t\t}\n    \t}\n```\n接收到的数据就是一个二维数组，内容类似：\n```php\n    [\"data:image\\/jpeg;base64,\\/9j\\/4AAQSkZJRgABgk..\",data:image\\/jpeg;base64,\\/9j\\HBwYIChAKCgk..\"]\n```\n大概就是二维数组中的每个数组都是一个很长的字符串，其中base64后面就是经转码后的图片。我们要做的就是将图片还原然后保存。\n\n","source":"_posts/Thinkphp-jquery-imgupload.md","raw":"---\ntitle: Thinkphp+jquery实现多图异步上传\ndate: 2018-03-23 14:43:35\ncategories: PHP\ntags:\n\ttp\n---\n网上查找了很多方法，有的多图上传是通过html添加多个input框type=file，然后在后台遍历循环$_FILES实现一张张上传图片。还有一种就是通过jq将图片转码成base64来将图片存储成字符串的形式，然后后台将获取到的字符串通过解码成图片文件保存，这里要说的就是这种方法。\n\nhtml页面主要部分如下：\n```php\n            <div class=\"weui-cells weui-cells_form\" id=\"uploader\">\n                <div class=\"weui-cell\">\n                    <div class=\"weui-cell__bd\">\n                        <div class=\"weui-uploader\">\n                            <input name=\"goods_id\" value=\"{$goods_id}\" type=\"hidden\">\n                            <div class=\"weui-uploader__bd\">\n                                <ul class=\"weui-uploader__files\" id=\"uploaderFiles\"></ul>\n                                <div class=\"weui-uploader__input-box\">\n                                    <div class=\"file-img\">\n                                        <i></i>\n                                        <p>添加图片</p>\n                                    </div>\n\n                                    <input id=\"uploaderInput\" class=\"weui-uploader__input\" name=\"img\" type=\"file\" accept=\"image/*\" capture=\"camera\" multiple=\"\" />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n```\njq部分：\n```php\n    /* 图片手动上传 */\n    var uploadCustomFileList = [];\n    var uploadCount = 0;\n    \n    weui.uploader('#uploader', {\n    // url: 'http://localhost:8002/upload',\n    auto: false,\n    type:'base64',\n    onQueued: function onQueued() {\n    uploadCustomFileList.push(this);\n      \n    //console.log(this.url.match(/url\\((.*?)\\)/)[1].replace(/\"/g, ''));\n    },\n    onBeforeQueued: function (files) {\n    // `this` 是轮询到的文件, `files` 是所有文件\n    \n    if ([\"image/jpg\", \"image/jpeg\", \"image/png\", \"image/gif\"].indexOf(this.type) < 0) {\n    weui.alert('请上传图片');\n    return false; // 阻止文件添加\n    }\n    if (this.size > 2 * 1024 * 1024) {\n    weui.alert('请上传不超过2M的图片');\n    return false;\n    }\n    if (files.length > 3) { // 防止一下子选择过多文件\n    weui.alert('最多只能上传3张图片，请重新选择');\n    return false;\n    }\n    if (uploadCount + 1 > 3) {\n    weui.alert('最多只能上传3张图片');\n    return false;\n    }\n    \n    ++uploadCount;\n    \n    //return true; // 阻止默认行为，不插入预览图的框架\n    },\n    });\n```\n将上传的图片转码成base64\n```php\n    // 缩略图预览\n    document.querySelector('#uploaderFiles').addEventListener('click', function (e) {\n    var target = e.target;\n    // var _that = this.children.length;\n    // console.log(_that);\n    \n    while (!target.classList.contains('weui-uploader__file') && target) {\n    target = target.parentNode;\n    \n    }\n    if (!target) return;\n    \n    var url = target.getAttribute('style') || '';\n    var id = target.getAttribute('data-id');\n    \n    if (url) {\n    url = url.match(/url\\((.*?)\\)/)[1].replace(/\"/g, '');\n    }\n    var gallery = weui.gallery(url, {\n    onDelete: function onDelete() {\n    weui.confirm('确定删除该图片？', function () {\n    var index;\n    for (var i = 0, len = uploadCustomFileList.length; i < len; ++i) {\n    var file = uploadCustomFileList[i];\n    if (file.id == id) {\n    index = i;\n    break;\n    }\n    }\n    if (index !== undefined) uploadCustomFileList.splice(index, 1);\n    \n     uploadCount --;\n    \n    target.remove();\n    gallery.hide();\n    \n    });\n    }\n    });\n    });\n```\n这是生成缩略图预览\n```php\n    $(function () {\n    \n    $(\"form\").submit(function(){\n    \n    var arr=[];\n    var urls=$(\"[name=upload_url]\").val();\n      $(\"#uploaderFiles\").find(\"li\").each(function(index,item){\n    var data_id = $(item).data(\"id\");\n       var img_url = $(item)[0].style.backgroundImage.split(\"\\\"\")[1];\n    \n    //.split(\"\\\"\")[1]\n    arr[index]=img_url;\n    //console.log(data_id);\n    //console.log(img_url);\n      })\n    \n      $.ajax({\n    type:'post',\n    url:urls,\n    async:false,\n    data:{result:arr},\n    success:function(msg){\n    console.log(msg);\n    }\n      })\n      console.log(arr);\n    return  false;\n    });\n    })\n```\n以上是将转码成base64的图片存到一个二维数组里面，方便后台遍历存储。\n\njquery传递的数据大致如下：\n\n![](https://i.imgur.com/tQSb2iq.png)\n\n这是传递两个图片的例子，当只有一个图片的时候二维数组的长度（length）即为1。\n\n后台接收处理图片：\n```php\n    \t/**\n    \t * 异步上传图片\n    \t */\n    \tpublic function upload_img() {\n    \t\tif (IS_AJAX) {\n    \t\t\t$data = I(\"result\");\n    \t\t\tforeach ($data as $key => $value) {\n    \n    \t\t\t\tlist($type, $datas) = explode(',', $value);//获取图片类型，以及转码后的图片\n    \t\t\t\tif (strstr($type, 'image/jpeg') !== '') {//判断图片类型\n    \t\t\t\t\t$ext = '.jpg';\n    \t\t\t\t} elseif (strstr($type, 'image/gif') !== '') {\n    \t\t\t\t\t$ext = '.gif';\n    \t\t\t\t} elseif (strstr($type, 'image/png') !== '') {\n    \t\t\t\t\t$ext = '.png';\n    \t\t\t\t}\n    \n    \t\t\t\t$photo = __ROOT__ . \"/uploads/Goods/\" . date(\"Y-m-d\", time()) . '/' . time() . $key . $ext;//生成图片地址和文件并加上图片后缀\n    \n    \t\t\t\t// 生成文件\n    \t\t\t\tfile_put_contents($photo, base64_decode($datas), true);//解码图片进行保存\n    \t\t\t}\n    \t\t\t$this->ajaxReturn(\"ok\");\n    \t\t}\n    \t}\n```\n接收到的数据就是一个二维数组，内容类似：\n```php\n    [\"data:image\\/jpeg;base64,\\/9j\\/4AAQSkZJRgABgk..\",data:image\\/jpeg;base64,\\/9j\\HBwYIChAKCgk..\"]\n```\n大概就是二维数组中的每个数组都是一个很长的字符串，其中base64后面就是经转码后的图片。我们要做的就是将图片还原然后保存。\n\n","slug":"Thinkphp-jquery-imgupload","published":1,"updated":"2021-11-25T03:28:13.078Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwn8bfxx001itwnfdekt8y22","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>网上查找了很多方法，有的多图上传是通过html添加多个input框type=file，然后在后台遍历循环$_FILES实现一张张上传图片。还有一种就是通过jq将图片转码成base64来将图片存储成字符串的形式，然后后台将获取到的字符串通过解码成图片文件保存，这里要说的就是这种方法。</p>\n<p>html页面主要部分如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div <span class=\"class\"><span class=\"keyword\">class</span>=&quot;<span class=\"title\">weui</span>-<span class=\"title\">cells</span> <span class=\"title\">weui</span>-<span class=\"title\">cells_form</span>&quot; <span class=\"title\">id</span>=&quot;<span class=\"title\">uploader</span>&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">div</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">weui</span>-<span class=\"title\">cell</span>&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">        &lt;<span class=\"title\">div</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">weui</span>-<span class=\"title\">cell__bd</span>&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">            &lt;<span class=\"title\">div</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">weui</span>-<span class=\"title\">uploader</span>&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">                &lt;<span class=\"title\">input</span> <span class=\"title\">name</span>=&quot;<span class=\"title\">goods_id</span>&quot; <span class=\"title\">value</span>=&quot;</span>&#123;<span class=\"variable\">$goods_id</span>&#125;<span class=\"string\">&quot; type=&quot;</span>hidden<span class=\"string\">&quot;&gt;</span></span><br><span class=\"line\"><span class=\"string\">                &lt;div class=&quot;</span>weui-uploader__bd<span class=\"string\">&quot;&gt;</span></span><br><span class=\"line\"><span class=\"string\">                    &lt;ul class=&quot;</span>weui-uploader__files<span class=\"string\">&quot; id=&quot;</span>uploaderFiles<span class=\"string\">&quot;&gt;&lt;/ul&gt;</span></span><br><span class=\"line\"><span class=\"string\">                    &lt;div class=&quot;</span>weui-uploader__input-box<span class=\"string\">&quot;&gt;</span></span><br><span class=\"line\"><span class=\"string\">                        &lt;div class=&quot;</span>file-img<span class=\"string\">&quot;&gt;</span></span><br><span class=\"line\"><span class=\"string\">                            &lt;i&gt;&lt;/i&gt;</span></span><br><span class=\"line\"><span class=\"string\">                            &lt;p&gt;添加图片&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"string\">                        &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">                        &lt;input id=&quot;</span>uploaderInput<span class=\"string\">&quot; class=&quot;</span>weui-uploader__input<span class=\"string\">&quot; name=&quot;</span>img<span class=\"string\">&quot; type=&quot;</span>file<span class=\"string\">&quot; accept=&quot;</span>image<span class=\"comment\">/*&quot; capture=&quot;camera&quot; multiple=&quot;&quot; /&gt;</span></span><br><span class=\"line\"><span class=\"comment\">                    &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"comment\">                &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"comment\">            &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"comment\">        &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"comment\">    &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;/div&gt;</span></span><br></pre></td></tr></table></figure>\n<p>jq部分：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 图片手动上传 */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> uploadCustomFileList = [];</span><br><span class=\"line\"><span class=\"keyword\">var</span> uploadCount = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">weui.uploader(<span class=\"string\">&#x27;#uploader&#x27;</span>, &#123;</span><br><span class=\"line\"><span class=\"comment\">// url: &#x27;http://localhost:8002/upload&#x27;,</span></span><br><span class=\"line\">auto: <span class=\"literal\">false</span>,</span><br><span class=\"line\">type:<span class=\"string\">&#x27;base64&#x27;</span>,</span><br><span class=\"line\">onQueued: <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">onQueued</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">uploadCustomFileList.push(this);</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">//console.log(this.url.match(/url\\((.*?)\\)/)[1].replace(/&quot;/g, &#x27;&#x27;));</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">onBeforeQueued: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">files</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"comment\">// `this` 是轮询到的文件, `files` 是所有文件</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> ([<span class=\"string\">&quot;image/jpg&quot;</span>, <span class=\"string\">&quot;image/jpeg&quot;</span>, <span class=\"string\">&quot;image/png&quot;</span>, <span class=\"string\">&quot;image/gif&quot;</span>].indexOf(this.type) &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">weui.alert(<span class=\"string\">&#x27;请上传图片&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"literal\">false</span>; <span class=\"comment\">// 阻止文件添加</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (this.size &gt; <span class=\"number\">2</span> * <span class=\"number\">1024</span> * <span class=\"number\">1024</span>) &#123;</span><br><span class=\"line\">weui.alert(<span class=\"string\">&#x27;请上传不超过2M的图片&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (files.length &gt; <span class=\"number\">3</span>) &#123; <span class=\"comment\">// 防止一下子选择过多文件</span></span><br><span class=\"line\">weui.alert(<span class=\"string\">&#x27;最多只能上传3张图片，请重新选择&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (uploadCount + <span class=\"number\">1</span> &gt; <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">weui.alert(<span class=\"string\">&#x27;最多只能上传3张图片&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">++uploadCount;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//return true; // 阻止默认行为，不插入预览图的框架</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>将上传的图片转码成base64</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 缩略图预览</span></span><br><span class=\"line\">document.querySelector(<span class=\"string\">&#x27;#uploaderFiles&#x27;</span>).addEventListener(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">var</span> target = e.target;</span><br><span class=\"line\"><span class=\"comment\">// var _that = this.children.length;</span></span><br><span class=\"line\"><span class=\"comment\">// console.log(_that);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> (!target.classList.contains(<span class=\"string\">&#x27;weui-uploader__file&#x27;</span>) &amp;&amp; target) &#123;</span><br><span class=\"line\">target = target.parentNode;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (!target) <span class=\"keyword\">return</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> url = target.getAttribute(<span class=\"string\">&#x27;style&#x27;</span>) || <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> id = target.getAttribute(<span class=\"string\">&#x27;data-id&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (url) &#123;</span><br><span class=\"line\">url = url.<span class=\"keyword\">match</span>(/url\\((.*?)\\)/)[<span class=\"number\">1</span>].replace(/<span class=\"string\">&quot;/g, &#x27;&#x27;);</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">var gallery = weui.gallery(url, &#123;</span></span><br><span class=\"line\"><span class=\"string\">onDelete: function onDelete() &#123;</span></span><br><span class=\"line\"><span class=\"string\">weui.confirm(&#x27;确定删除该图片？&#x27;, function () &#123;</span></span><br><span class=\"line\"><span class=\"string\">var index;</span></span><br><span class=\"line\"><span class=\"string\">for (var i = 0, len = uploadCustomFileList.length; i &lt; len; ++i) &#123;</span></span><br><span class=\"line\"><span class=\"string\">var file = uploadCustomFileList[i];</span></span><br><span class=\"line\"><span class=\"string\">if (file.id == id) &#123;</span></span><br><span class=\"line\"><span class=\"string\">index = i;</span></span><br><span class=\"line\"><span class=\"string\">break;</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">if (index !== undefined) uploadCustomFileList.splice(index, 1);</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"> uploadCount --;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">target.remove();</span></span><br><span class=\"line\"><span class=\"string\">gallery.hide();</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&#125;);</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125;);</span></span><br><span class=\"line\"><span class=\"string\">&#125;);</span></span><br></pre></td></tr></table></figure>\n<p>这是生成缩略图预览</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">$(<span class=\"string\">&quot;form&quot;</span>).submit(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr=[];</span><br><span class=\"line\"><span class=\"keyword\">var</span> urls=$(<span class=\"string\">&quot;[name=upload_url]&quot;</span>).val();</span><br><span class=\"line\">  $(<span class=\"string\">&quot;#uploaderFiles&quot;</span>).find(<span class=\"string\">&quot;li&quot;</span>).each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">index,item</span>)</span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">var</span> data_id = $(item).data(<span class=\"string\">&quot;id&quot;</span>);</span><br><span class=\"line\">   <span class=\"keyword\">var</span> img_url = $(item)[<span class=\"number\">0</span>].style.backgroundImage.split(<span class=\"string\">&quot;\\&quot;&quot;</span>)[<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//.split(&quot;\\&quot;&quot;)[1]</span></span><br><span class=\"line\">arr[index]=img_url;</span><br><span class=\"line\"><span class=\"comment\">//console.log(data_id);</span></span><br><span class=\"line\"><span class=\"comment\">//console.log(img_url);</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  $.ajax(&#123;</span><br><span class=\"line\">type:<span class=\"string\">&#x27;post&#x27;</span>,</span><br><span class=\"line\">url:urls,</span><br><span class=\"line\">async:<span class=\"literal\">false</span>,</span><br><span class=\"line\">data:&#123;result:arr&#125;,</span><br><span class=\"line\">success:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">msg</span>)</span>&#123;</span><br><span class=\"line\">console.log(msg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  console.log(arr);</span><br><span class=\"line\"><span class=\"keyword\">return</span>  <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>以上是将转码成base64的图片存到一个二维数组里面，方便后台遍历存储。</p>\n<p>jquery传递的数据大致如下：</p>\n<p><img src=\"https://i.imgur.com/tQSb2iq.png\"></p>\n<p>这是传递两个图片的例子，当只有一个图片的时候二维数组的长度（length）即为1。</p>\n<p>后台接收处理图片：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 异步上传图片</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">upload_img</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (IS_AJAX) &#123;</span><br><span class=\"line\">\t\t<span class=\"variable\">$data</span> = I(<span class=\"string\">&quot;result&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">foreach</span> (<span class=\"variable\">$data</span> <span class=\"keyword\">as</span> <span class=\"variable\">$key</span> =&gt; <span class=\"variable\">$value</span>) &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">\t\t\t<span class=\"keyword\">list</span>(<span class=\"variable\">$type</span>, <span class=\"variable\">$datas</span>) = explode(<span class=\"string\">&#x27;,&#x27;</span>, <span class=\"variable\">$value</span>);<span class=\"comment\">//获取图片类型，以及转码后的图片</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (strstr(<span class=\"variable\">$type</span>, <span class=\"string\">&#x27;image/jpeg&#x27;</span>) !== <span class=\"string\">&#x27;&#x27;</span>) &#123;<span class=\"comment\">//判断图片类型</span></span><br><span class=\"line\">\t\t\t\t<span class=\"variable\">$ext</span> = <span class=\"string\">&#x27;.jpg&#x27;</span>;</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">elseif</span> (strstr(<span class=\"variable\">$type</span>, <span class=\"string\">&#x27;image/gif&#x27;</span>) !== <span class=\"string\">&#x27;&#x27;</span>) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"variable\">$ext</span> = <span class=\"string\">&#x27;.gif&#x27;</span>;</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">elseif</span> (strstr(<span class=\"variable\">$type</span>, <span class=\"string\">&#x27;image/png&#x27;</span>) !== <span class=\"string\">&#x27;&#x27;</span>) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"variable\">$ext</span> = <span class=\"string\">&#x27;.png&#x27;</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">\t\t\t<span class=\"variable\">$photo</span> = __ROOT__ . <span class=\"string\">&quot;/uploads/Goods/&quot;</span> . date(<span class=\"string\">&quot;Y-m-d&quot;</span>, time()) . <span class=\"string\">&#x27;/&#x27;</span> . time() . <span class=\"variable\">$key</span> . <span class=\"variable\">$ext</span>;<span class=\"comment\">//生成图片地址和文件并加上图片后缀</span></span><br><span class=\"line\">    </span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 生成文件</span></span><br><span class=\"line\">\t\t\tfile_put_contents(<span class=\"variable\">$photo</span>, base64_decode(<span class=\"variable\">$datas</span>), <span class=\"literal\">true</span>);<span class=\"comment\">//解码图片进行保存</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">$this</span>-&gt;ajaxReturn(<span class=\"string\">&quot;ok&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>接收到的数据就是一个二维数组，内容类似：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">&quot;data:image\\/jpeg;base64,\\/9j\\/4AAQSkZJRgABgk..&quot;</span>,data:image\\/jpeg;base64,\\/<span class=\"number\">9</span>j\\HBwYIChAKCgk..<span class=\"string\">&quot;]</span></span><br></pre></td></tr></table></figure>\n<p>大概就是二维数组中的每个数组都是一个很长的字符串，其中base64后面就是经转码后的图片。我们要做的就是将图片还原然后保存。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>网上查找了很多方法，有的多图上传是通过html添加多个input框type=file，然后在后台遍历循环$_FILES实现一张张上传图片。还有一种就是通过jq将图片转码成base64来将图片存储成字符串的形式，然后后台将获取到的字符串通过解码成图片文件保存，这里要说的就是这种方法。</p>\n<p>html页面主要部分如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div <span class=\"class\"><span class=\"keyword\">class</span>=&quot;<span class=\"title\">weui</span>-<span class=\"title\">cells</span> <span class=\"title\">weui</span>-<span class=\"title\">cells_form</span>&quot; <span class=\"title\">id</span>=&quot;<span class=\"title\">uploader</span>&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">div</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">weui</span>-<span class=\"title\">cell</span>&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">        &lt;<span class=\"title\">div</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">weui</span>-<span class=\"title\">cell__bd</span>&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">            &lt;<span class=\"title\">div</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">weui</span>-<span class=\"title\">uploader</span>&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">                &lt;<span class=\"title\">input</span> <span class=\"title\">name</span>=&quot;<span class=\"title\">goods_id</span>&quot; <span class=\"title\">value</span>=&quot;</span>&#123;<span class=\"variable\">$goods_id</span>&#125;<span class=\"string\">&quot; type=&quot;</span>hidden<span class=\"string\">&quot;&gt;</span></span><br><span class=\"line\"><span class=\"string\">                &lt;div class=&quot;</span>weui-uploader__bd<span class=\"string\">&quot;&gt;</span></span><br><span class=\"line\"><span class=\"string\">                    &lt;ul class=&quot;</span>weui-uploader__files<span class=\"string\">&quot; id=&quot;</span>uploaderFiles<span class=\"string\">&quot;&gt;&lt;/ul&gt;</span></span><br><span class=\"line\"><span class=\"string\">                    &lt;div class=&quot;</span>weui-uploader__input-box<span class=\"string\">&quot;&gt;</span></span><br><span class=\"line\"><span class=\"string\">                        &lt;div class=&quot;</span>file-img<span class=\"string\">&quot;&gt;</span></span><br><span class=\"line\"><span class=\"string\">                            &lt;i&gt;&lt;/i&gt;</span></span><br><span class=\"line\"><span class=\"string\">                            &lt;p&gt;添加图片&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"string\">                        &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">                        &lt;input id=&quot;</span>uploaderInput<span class=\"string\">&quot; class=&quot;</span>weui-uploader__input<span class=\"string\">&quot; name=&quot;</span>img<span class=\"string\">&quot; type=&quot;</span>file<span class=\"string\">&quot; accept=&quot;</span>image<span class=\"comment\">/*&quot; capture=&quot;camera&quot; multiple=&quot;&quot; /&gt;</span></span><br><span class=\"line\"><span class=\"comment\">                    &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"comment\">                &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"comment\">            &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"comment\">        &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"comment\">    &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;/div&gt;</span></span><br></pre></td></tr></table></figure>\n<p>jq部分：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 图片手动上传 */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> uploadCustomFileList = [];</span><br><span class=\"line\"><span class=\"keyword\">var</span> uploadCount = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">weui.uploader(<span class=\"string\">&#x27;#uploader&#x27;</span>, &#123;</span><br><span class=\"line\"><span class=\"comment\">// url: &#x27;http://localhost:8002/upload&#x27;,</span></span><br><span class=\"line\">auto: <span class=\"literal\">false</span>,</span><br><span class=\"line\">type:<span class=\"string\">&#x27;base64&#x27;</span>,</span><br><span class=\"line\">onQueued: <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">onQueued</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">uploadCustomFileList.push(this);</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">//console.log(this.url.match(/url\\((.*?)\\)/)[1].replace(/&quot;/g, &#x27;&#x27;));</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">onBeforeQueued: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">files</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"comment\">// `this` 是轮询到的文件, `files` 是所有文件</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> ([<span class=\"string\">&quot;image/jpg&quot;</span>, <span class=\"string\">&quot;image/jpeg&quot;</span>, <span class=\"string\">&quot;image/png&quot;</span>, <span class=\"string\">&quot;image/gif&quot;</span>].indexOf(this.type) &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">weui.alert(<span class=\"string\">&#x27;请上传图片&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"literal\">false</span>; <span class=\"comment\">// 阻止文件添加</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (this.size &gt; <span class=\"number\">2</span> * <span class=\"number\">1024</span> * <span class=\"number\">1024</span>) &#123;</span><br><span class=\"line\">weui.alert(<span class=\"string\">&#x27;请上传不超过2M的图片&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (files.length &gt; <span class=\"number\">3</span>) &#123; <span class=\"comment\">// 防止一下子选择过多文件</span></span><br><span class=\"line\">weui.alert(<span class=\"string\">&#x27;最多只能上传3张图片，请重新选择&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (uploadCount + <span class=\"number\">1</span> &gt; <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">weui.alert(<span class=\"string\">&#x27;最多只能上传3张图片&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">++uploadCount;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//return true; // 阻止默认行为，不插入预览图的框架</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>将上传的图片转码成base64</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 缩略图预览</span></span><br><span class=\"line\">document.querySelector(<span class=\"string\">&#x27;#uploaderFiles&#x27;</span>).addEventListener(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">var</span> target = e.target;</span><br><span class=\"line\"><span class=\"comment\">// var _that = this.children.length;</span></span><br><span class=\"line\"><span class=\"comment\">// console.log(_that);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> (!target.classList.contains(<span class=\"string\">&#x27;weui-uploader__file&#x27;</span>) &amp;&amp; target) &#123;</span><br><span class=\"line\">target = target.parentNode;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (!target) <span class=\"keyword\">return</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> url = target.getAttribute(<span class=\"string\">&#x27;style&#x27;</span>) || <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> id = target.getAttribute(<span class=\"string\">&#x27;data-id&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (url) &#123;</span><br><span class=\"line\">url = url.<span class=\"keyword\">match</span>(/url\\((.*?)\\)/)[<span class=\"number\">1</span>].replace(/<span class=\"string\">&quot;/g, &#x27;&#x27;);</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">var gallery = weui.gallery(url, &#123;</span></span><br><span class=\"line\"><span class=\"string\">onDelete: function onDelete() &#123;</span></span><br><span class=\"line\"><span class=\"string\">weui.confirm(&#x27;确定删除该图片？&#x27;, function () &#123;</span></span><br><span class=\"line\"><span class=\"string\">var index;</span></span><br><span class=\"line\"><span class=\"string\">for (var i = 0, len = uploadCustomFileList.length; i &lt; len; ++i) &#123;</span></span><br><span class=\"line\"><span class=\"string\">var file = uploadCustomFileList[i];</span></span><br><span class=\"line\"><span class=\"string\">if (file.id == id) &#123;</span></span><br><span class=\"line\"><span class=\"string\">index = i;</span></span><br><span class=\"line\"><span class=\"string\">break;</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">if (index !== undefined) uploadCustomFileList.splice(index, 1);</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"> uploadCount --;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">target.remove();</span></span><br><span class=\"line\"><span class=\"string\">gallery.hide();</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&#125;);</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125;);</span></span><br><span class=\"line\"><span class=\"string\">&#125;);</span></span><br></pre></td></tr></table></figure>\n<p>这是生成缩略图预览</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">$(<span class=\"string\">&quot;form&quot;</span>).submit(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr=[];</span><br><span class=\"line\"><span class=\"keyword\">var</span> urls=$(<span class=\"string\">&quot;[name=upload_url]&quot;</span>).val();</span><br><span class=\"line\">  $(<span class=\"string\">&quot;#uploaderFiles&quot;</span>).find(<span class=\"string\">&quot;li&quot;</span>).each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">index,item</span>)</span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">var</span> data_id = $(item).data(<span class=\"string\">&quot;id&quot;</span>);</span><br><span class=\"line\">   <span class=\"keyword\">var</span> img_url = $(item)[<span class=\"number\">0</span>].style.backgroundImage.split(<span class=\"string\">&quot;\\&quot;&quot;</span>)[<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//.split(&quot;\\&quot;&quot;)[1]</span></span><br><span class=\"line\">arr[index]=img_url;</span><br><span class=\"line\"><span class=\"comment\">//console.log(data_id);</span></span><br><span class=\"line\"><span class=\"comment\">//console.log(img_url);</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  $.ajax(&#123;</span><br><span class=\"line\">type:<span class=\"string\">&#x27;post&#x27;</span>,</span><br><span class=\"line\">url:urls,</span><br><span class=\"line\">async:<span class=\"literal\">false</span>,</span><br><span class=\"line\">data:&#123;result:arr&#125;,</span><br><span class=\"line\">success:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">msg</span>)</span>&#123;</span><br><span class=\"line\">console.log(msg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  console.log(arr);</span><br><span class=\"line\"><span class=\"keyword\">return</span>  <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>以上是将转码成base64的图片存到一个二维数组里面，方便后台遍历存储。</p>\n<p>jquery传递的数据大致如下：</p>\n<p><img src=\"https://i.imgur.com/tQSb2iq.png\"></p>\n<p>这是传递两个图片的例子，当只有一个图片的时候二维数组的长度（length）即为1。</p>\n<p>后台接收处理图片：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 异步上传图片</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">upload_img</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (IS_AJAX) &#123;</span><br><span class=\"line\">\t\t<span class=\"variable\">$data</span> = I(<span class=\"string\">&quot;result&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">foreach</span> (<span class=\"variable\">$data</span> <span class=\"keyword\">as</span> <span class=\"variable\">$key</span> =&gt; <span class=\"variable\">$value</span>) &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">\t\t\t<span class=\"keyword\">list</span>(<span class=\"variable\">$type</span>, <span class=\"variable\">$datas</span>) = explode(<span class=\"string\">&#x27;,&#x27;</span>, <span class=\"variable\">$value</span>);<span class=\"comment\">//获取图片类型，以及转码后的图片</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (strstr(<span class=\"variable\">$type</span>, <span class=\"string\">&#x27;image/jpeg&#x27;</span>) !== <span class=\"string\">&#x27;&#x27;</span>) &#123;<span class=\"comment\">//判断图片类型</span></span><br><span class=\"line\">\t\t\t\t<span class=\"variable\">$ext</span> = <span class=\"string\">&#x27;.jpg&#x27;</span>;</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">elseif</span> (strstr(<span class=\"variable\">$type</span>, <span class=\"string\">&#x27;image/gif&#x27;</span>) !== <span class=\"string\">&#x27;&#x27;</span>) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"variable\">$ext</span> = <span class=\"string\">&#x27;.gif&#x27;</span>;</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">elseif</span> (strstr(<span class=\"variable\">$type</span>, <span class=\"string\">&#x27;image/png&#x27;</span>) !== <span class=\"string\">&#x27;&#x27;</span>) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"variable\">$ext</span> = <span class=\"string\">&#x27;.png&#x27;</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">\t\t\t<span class=\"variable\">$photo</span> = __ROOT__ . <span class=\"string\">&quot;/uploads/Goods/&quot;</span> . date(<span class=\"string\">&quot;Y-m-d&quot;</span>, time()) . <span class=\"string\">&#x27;/&#x27;</span> . time() . <span class=\"variable\">$key</span> . <span class=\"variable\">$ext</span>;<span class=\"comment\">//生成图片地址和文件并加上图片后缀</span></span><br><span class=\"line\">    </span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 生成文件</span></span><br><span class=\"line\">\t\t\tfile_put_contents(<span class=\"variable\">$photo</span>, base64_decode(<span class=\"variable\">$datas</span>), <span class=\"literal\">true</span>);<span class=\"comment\">//解码图片进行保存</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">$this</span>-&gt;ajaxReturn(<span class=\"string\">&quot;ok&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>接收到的数据就是一个二维数组，内容类似：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">&quot;data:image\\/jpeg;base64,\\/9j\\/4AAQSkZJRgABgk..&quot;</span>,data:image\\/jpeg;base64,\\/<span class=\"number\">9</span>j\\HBwYIChAKCgk..<span class=\"string\">&quot;]</span></span><br></pre></td></tr></table></figure>\n<p>大概就是二维数组中的每个数组都是一个很长的字符串，其中base64后面就是经转码后的图片。我们要做的就是将图片还原然后保存。</p>\n"},{"title":"php基础算法","date":"2018-11-24T06:42:47.000Z","_content":"**1.冒泡排序**\n\n冒泡排序（Bubble Sort，台湾译为：泡沫排序或气泡排序）是一种简单的排序算法。它重复地走访过要排序的数列，依次比较两个元素，如果他们的顺序错误就把他们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越小的元素会经由交换慢慢“浮”到数列的顶端。\n\n步骤：\n\n1. 比较相邻的元素。如果第一个比第二个大，就交换他们两个。\n2. 对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。\n3. 针对所有的元素重复以上的步骤，除了最后一个。\n4. 持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。\n\n\n具体代码：\n```php\n    $arr=array(1,43,54,62,21,66,32,78,36,76,39);\n    function bubblesort($arr){\n    \t$len=count($arr);\n    \t//计算需要冒泡的轮次\n    \tfor($i=1;$i<$len;$i++){\n    \t\t//这里的循环控制每轮两个数之间一共比较的次数，随着数字的减少，所以经历的轮数越多比较的次数越少\n    \t\tfor($k=0;$k<$len-$i;$k++){//如果前一个数比后一位数大，就将两个数的位置互换，那么第一轮两两比较下来就能确定最大数了，以此类推\n    \t\t\tif($arr[$k]>$arr[$k+1]){\n    \t\t\t\t$tmp=$arr[$k+1];\n    \t\t\t\t$arr[$k+1]=$arr[$k];\n    \t\t\t\t$arr[$k]=$tmp;\n    \t\t\t}\n    \t\t}\n    \t}\n    \treturn $arr;\n    }\n```\n**2.选择排序**\n\n选择排序(Selection sort)是一种简单直观的排序算法。它的工作原理如下。首先在未排序序列中找到最小元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最小元素，然后放到排序序列末尾。以此类推，直到所有元素均排序完毕。\n```php\n    //实现思路 双重循环完成，外层控制轮数，当前的最小值。内层 控制的比较次数\n    function select_sort($arr) {\n    \tfor($i=0,$len=count($arr);$i<$len-1;$i++){\n    \t\t//假设最小值为初始位置\n    \t\t$p=$i;\n    \t\tfor($j=$i+1;$l<$len;$j++){\n    \t\t\tif($arr[$p]>$arr[$j]){\n    \t\t\t\t//比较发现更小的值，则记录最小值的位置，并在下次比较采用已知的最小值进行比较\n    \t\t\t\t$p=$j;\n    \t\t\t}\n    \t\t}\n    \t\t//那么第一轮比较下来就确定了最小值的位置\n    \t\t//这个时候再比较当前最小值的位置与当前轮次开始时最小值位置是否一致，如果不一致，则将两值的位置交换\n    \t\tif($p!=$i){\n    \t\t\t$tmp=$arr[$p];\n    \t\t\t$arr[$p]=$arr[$i];\n    \t\t\t$arr[$i]=$tmp;\n    \t\t}\n    \t}\n    \treturn $arr;\n    \n    }\n```\n**3.插入排序**\n\n插入排序（Insertion Sort）的算法描述是一种简单直观的排序算法。它的工作原理是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入。插入排序在实现上，通常采用in-place排序（即只需用到O(1)的额外空间的排序），因而在从后向前扫描过程中，需要反复把已排序元素逐步向后挪位，为最新元素提供插入空间。\n\n步骤：\n\n1. 从第一个元素开始，该元素可以认为已经被排序\n2. 取出下一个元素，在已经排序的元素序列中从后向前扫描\n3. 如果该元素（已排序）大于新元素，将该元素移到下一位置\n4. 重复步骤3，直到找到已排序的元素小于或者等于新元素的位置\n5. 将新元素插入到该位置中\n6. 重复步骤2\n\n具体代码：\n```php\n    function insert_sort($arr) {\n    \t $len=count($arr);\n    \t for($i=1; $i<$len; $i++) {\n    \t //获得当前需要比较的元素值。\n    \t\t $tmp = $arr[$i];\n    \t\t //内层循环控制 比较 并 插入\n    \t\t for($j=$i-1; $j>=0; $j--) {\n    \t\t //$arr[$i];//需要插入的元素; $arr[$j];//需要比较的元素\n    \t\t\t if($tmp < $arr[$j]) {\n    \t\t\t\t //发现插入的元素要小，交换位置\n    \t\t\t\t //将后边的元素与前面的元素互换\n    \t\t\t\t $arr[$j+1] = $arr[$j];\n    \t\t\t\t //将前面的数设置为 当前需要交换的数\n    \t\t\t\t $arr[$j] = $tmp;\n    \t\t\t } else {\n    \t\t\t\t //如果碰到不需要移动的元素\n    \t\t\t\t //由于是已经排序好是数组，则前面的就不需要再次比较了。\n    \t\t\t\t break;\n    \t\t\t }\n    \t\t }\n    \t }\n    \t //将这个元素 插入到已经排序好的序列内。\n    \t //返回\n    \t return $arr;\n    }\n```\n**4.快速排序**\n快速排序是由东尼·霍尔所发展的一种排序算法。在平均状况下，排序 n 个项目要Ο(n log n)次比较。在最坏状况下则需要Ο(n2)次比较，但这种状况并不常见。事实上，快速排序通常明显比其他Ο(n log n) 算法更快，因为它的内部循环（inner loop）可以在大部分的架构上很有效率地被实现出来，且在大部分真实世界的数据，可以决定设计的选择，减少所需时间的二次方项之可能性。\n\n步骤：\n1. 从数列中挑出一个元素，称为 “基准”（pivot）\n2. 重新排序数列，所有元素比基准值小的摆放在基准前面，所有元素比基准值大的摆在基准的后面（相同的数可以到任一边）。在这个分区退出之后，该基准就处于数列的中间位置。这个称为分区（partition）操作。\n3. 递归地（recursive）把小于基准值元素的子数列和大于基准值元素的子数列排序。\n\n具体代码：\n```php\n    function quick_sort($arr){\n      //判断参数是否是一个数组\n      if(!is_array($arr)) return false;\n      //递归出口:数组长度为1，直接返回数组\n      $length = count($arr);\n      if($length<=1) return $arr;\n      //数组元素有多个,则定义两个空数组\n      $left = $right = array();\n     //使用for循环进行遍历，把第一个元素当做比较的对象\n     for($i=1; $i<$length; $i++){\n    \t //判断当前元素的大小\n    \t if($arr[$i]<$arr[0]){\n    \t \t$left[]=$arr[$i];\n    \t }else{\n    \t \t$right[]=$arr[$i];\n    \t }\n     }\n     //递归调用\n     $left=quick_sort($left);\n     $right=quick_sort($right);\n     //将所有的结果合并\n     return array_merge($left,array($arr[0]),$right);\n    }\n```\n","source":"_posts/php-basicsort.md","raw":"---\ntitle: php基础算法\ndate: 2018-11-24 14:42:47\ncategories: PHP\ntags:\n\t算法\n---\n**1.冒泡排序**\n\n冒泡排序（Bubble Sort，台湾译为：泡沫排序或气泡排序）是一种简单的排序算法。它重复地走访过要排序的数列，依次比较两个元素，如果他们的顺序错误就把他们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越小的元素会经由交换慢慢“浮”到数列的顶端。\n\n步骤：\n\n1. 比较相邻的元素。如果第一个比第二个大，就交换他们两个。\n2. 对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。\n3. 针对所有的元素重复以上的步骤，除了最后一个。\n4. 持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。\n\n\n具体代码：\n```php\n    $arr=array(1,43,54,62,21,66,32,78,36,76,39);\n    function bubblesort($arr){\n    \t$len=count($arr);\n    \t//计算需要冒泡的轮次\n    \tfor($i=1;$i<$len;$i++){\n    \t\t//这里的循环控制每轮两个数之间一共比较的次数，随着数字的减少，所以经历的轮数越多比较的次数越少\n    \t\tfor($k=0;$k<$len-$i;$k++){//如果前一个数比后一位数大，就将两个数的位置互换，那么第一轮两两比较下来就能确定最大数了，以此类推\n    \t\t\tif($arr[$k]>$arr[$k+1]){\n    \t\t\t\t$tmp=$arr[$k+1];\n    \t\t\t\t$arr[$k+1]=$arr[$k];\n    \t\t\t\t$arr[$k]=$tmp;\n    \t\t\t}\n    \t\t}\n    \t}\n    \treturn $arr;\n    }\n```\n**2.选择排序**\n\n选择排序(Selection sort)是一种简单直观的排序算法。它的工作原理如下。首先在未排序序列中找到最小元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最小元素，然后放到排序序列末尾。以此类推，直到所有元素均排序完毕。\n```php\n    //实现思路 双重循环完成，外层控制轮数，当前的最小值。内层 控制的比较次数\n    function select_sort($arr) {\n    \tfor($i=0,$len=count($arr);$i<$len-1;$i++){\n    \t\t//假设最小值为初始位置\n    \t\t$p=$i;\n    \t\tfor($j=$i+1;$l<$len;$j++){\n    \t\t\tif($arr[$p]>$arr[$j]){\n    \t\t\t\t//比较发现更小的值，则记录最小值的位置，并在下次比较采用已知的最小值进行比较\n    \t\t\t\t$p=$j;\n    \t\t\t}\n    \t\t}\n    \t\t//那么第一轮比较下来就确定了最小值的位置\n    \t\t//这个时候再比较当前最小值的位置与当前轮次开始时最小值位置是否一致，如果不一致，则将两值的位置交换\n    \t\tif($p!=$i){\n    \t\t\t$tmp=$arr[$p];\n    \t\t\t$arr[$p]=$arr[$i];\n    \t\t\t$arr[$i]=$tmp;\n    \t\t}\n    \t}\n    \treturn $arr;\n    \n    }\n```\n**3.插入排序**\n\n插入排序（Insertion Sort）的算法描述是一种简单直观的排序算法。它的工作原理是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入。插入排序在实现上，通常采用in-place排序（即只需用到O(1)的额外空间的排序），因而在从后向前扫描过程中，需要反复把已排序元素逐步向后挪位，为最新元素提供插入空间。\n\n步骤：\n\n1. 从第一个元素开始，该元素可以认为已经被排序\n2. 取出下一个元素，在已经排序的元素序列中从后向前扫描\n3. 如果该元素（已排序）大于新元素，将该元素移到下一位置\n4. 重复步骤3，直到找到已排序的元素小于或者等于新元素的位置\n5. 将新元素插入到该位置中\n6. 重复步骤2\n\n具体代码：\n```php\n    function insert_sort($arr) {\n    \t $len=count($arr);\n    \t for($i=1; $i<$len; $i++) {\n    \t //获得当前需要比较的元素值。\n    \t\t $tmp = $arr[$i];\n    \t\t //内层循环控制 比较 并 插入\n    \t\t for($j=$i-1; $j>=0; $j--) {\n    \t\t //$arr[$i];//需要插入的元素; $arr[$j];//需要比较的元素\n    \t\t\t if($tmp < $arr[$j]) {\n    \t\t\t\t //发现插入的元素要小，交换位置\n    \t\t\t\t //将后边的元素与前面的元素互换\n    \t\t\t\t $arr[$j+1] = $arr[$j];\n    \t\t\t\t //将前面的数设置为 当前需要交换的数\n    \t\t\t\t $arr[$j] = $tmp;\n    \t\t\t } else {\n    \t\t\t\t //如果碰到不需要移动的元素\n    \t\t\t\t //由于是已经排序好是数组，则前面的就不需要再次比较了。\n    \t\t\t\t break;\n    \t\t\t }\n    \t\t }\n    \t }\n    \t //将这个元素 插入到已经排序好的序列内。\n    \t //返回\n    \t return $arr;\n    }\n```\n**4.快速排序**\n快速排序是由东尼·霍尔所发展的一种排序算法。在平均状况下，排序 n 个项目要Ο(n log n)次比较。在最坏状况下则需要Ο(n2)次比较，但这种状况并不常见。事实上，快速排序通常明显比其他Ο(n log n) 算法更快，因为它的内部循环（inner loop）可以在大部分的架构上很有效率地被实现出来，且在大部分真实世界的数据，可以决定设计的选择，减少所需时间的二次方项之可能性。\n\n步骤：\n1. 从数列中挑出一个元素，称为 “基准”（pivot）\n2. 重新排序数列，所有元素比基准值小的摆放在基准前面，所有元素比基准值大的摆在基准的后面（相同的数可以到任一边）。在这个分区退出之后，该基准就处于数列的中间位置。这个称为分区（partition）操作。\n3. 递归地（recursive）把小于基准值元素的子数列和大于基准值元素的子数列排序。\n\n具体代码：\n```php\n    function quick_sort($arr){\n      //判断参数是否是一个数组\n      if(!is_array($arr)) return false;\n      //递归出口:数组长度为1，直接返回数组\n      $length = count($arr);\n      if($length<=1) return $arr;\n      //数组元素有多个,则定义两个空数组\n      $left = $right = array();\n     //使用for循环进行遍历，把第一个元素当做比较的对象\n     for($i=1; $i<$length; $i++){\n    \t //判断当前元素的大小\n    \t if($arr[$i]<$arr[0]){\n    \t \t$left[]=$arr[$i];\n    \t }else{\n    \t \t$right[]=$arr[$i];\n    \t }\n     }\n     //递归调用\n     $left=quick_sort($left);\n     $right=quick_sort($right);\n     //将所有的结果合并\n     return array_merge($left,array($arr[0]),$right);\n    }\n```\n","slug":"php-basicsort","published":1,"updated":"2021-11-25T03:28:13.079Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwn8bfxy001mtwnfhuj55cfn","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p><strong>1.冒泡排序</strong></p>\n<p>冒泡排序（Bubble Sort，台湾译为：泡沫排序或气泡排序）是一种简单的排序算法。它重复地走访过要排序的数列，依次比较两个元素，如果他们的顺序错误就把他们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越小的元素会经由交换慢慢“浮”到数列的顶端。</p>\n<p>步骤：</p>\n<ol>\n<li>比较相邻的元素。如果第一个比第二个大，就交换他们两个。</li>\n<li>对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。</li>\n<li>针对所有的元素重复以上的步骤，除了最后一个。</li>\n<li>持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。</li>\n</ol>\n<p>具体代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$arr</span>=<span class=\"keyword\">array</span>(<span class=\"number\">1</span>,<span class=\"number\">43</span>,<span class=\"number\">54</span>,<span class=\"number\">62</span>,<span class=\"number\">21</span>,<span class=\"number\">66</span>,<span class=\"number\">32</span>,<span class=\"number\">78</span>,<span class=\"number\">36</span>,<span class=\"number\">76</span>,<span class=\"number\">39</span>);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bubblesort</span>(<span class=\"params\"><span class=\"variable\">$arr</span></span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"variable\">$len</span>=count(<span class=\"variable\">$arr</span>);</span><br><span class=\"line\">\t<span class=\"comment\">//计算需要冒泡的轮次</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"variable\">$i</span>=<span class=\"number\">1</span>;<span class=\"variable\">$i</span>&lt;<span class=\"variable\">$len</span>;<span class=\"variable\">$i</span>++)&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//这里的循环控制每轮两个数之间一共比较的次数，随着数字的减少，所以经历的轮数越多比较的次数越少</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"variable\">$k</span>=<span class=\"number\">0</span>;<span class=\"variable\">$k</span>&lt;<span class=\"variable\">$len</span>-<span class=\"variable\">$i</span>;<span class=\"variable\">$k</span>++)&#123;<span class=\"comment\">//如果前一个数比后一位数大，就将两个数的位置互换，那么第一轮两两比较下来就能确定最大数了，以此类推</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(<span class=\"variable\">$arr</span>[<span class=\"variable\">$k</span>]&gt;<span class=\"variable\">$arr</span>[<span class=\"variable\">$k</span>+<span class=\"number\">1</span>])&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"variable\">$tmp</span>=<span class=\"variable\">$arr</span>[<span class=\"variable\">$k</span>+<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t\t\t<span class=\"variable\">$arr</span>[<span class=\"variable\">$k</span>+<span class=\"number\">1</span>]=<span class=\"variable\">$arr</span>[<span class=\"variable\">$k</span>];</span><br><span class=\"line\">\t\t\t\t<span class=\"variable\">$arr</span>[<span class=\"variable\">$k</span>]=<span class=\"variable\">$tmp</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"variable\">$arr</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>2.选择排序</strong></p>\n<p>选择排序(Selection sort)是一种简单直观的排序算法。它的工作原理如下。首先在未排序序列中找到最小元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最小元素，然后放到排序序列末尾。以此类推，直到所有元素均排序完毕。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//实现思路 双重循环完成，外层控制轮数，当前的最小值。内层 控制的比较次数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">select_sort</span>(<span class=\"params\"><span class=\"variable\">$arr</span></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"variable\">$i</span>=<span class=\"number\">0</span>,<span class=\"variable\">$len</span>=count(<span class=\"variable\">$arr</span>);<span class=\"variable\">$i</span>&lt;<span class=\"variable\">$len</span>-<span class=\"number\">1</span>;<span class=\"variable\">$i</span>++)&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//假设最小值为初始位置</span></span><br><span class=\"line\">\t\t<span class=\"variable\">$p</span>=<span class=\"variable\">$i</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"variable\">$j</span>=<span class=\"variable\">$i</span>+<span class=\"number\">1</span>;<span class=\"variable\">$l</span>&lt;<span class=\"variable\">$len</span>;<span class=\"variable\">$j</span>++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(<span class=\"variable\">$arr</span>[<span class=\"variable\">$p</span>]&gt;<span class=\"variable\">$arr</span>[<span class=\"variable\">$j</span>])&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//比较发现更小的值，则记录最小值的位置，并在下次比较采用已知的最小值进行比较</span></span><br><span class=\"line\">\t\t\t\t<span class=\"variable\">$p</span>=<span class=\"variable\">$j</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">//那么第一轮比较下来就确定了最小值的位置</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//这个时候再比较当前最小值的位置与当前轮次开始时最小值位置是否一致，如果不一致，则将两值的位置交换</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(<span class=\"variable\">$p</span>!=<span class=\"variable\">$i</span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"variable\">$tmp</span>=<span class=\"variable\">$arr</span>[<span class=\"variable\">$p</span>];</span><br><span class=\"line\">\t\t\t<span class=\"variable\">$arr</span>[<span class=\"variable\">$p</span>]=<span class=\"variable\">$arr</span>[<span class=\"variable\">$i</span>];</span><br><span class=\"line\">\t\t\t<span class=\"variable\">$arr</span>[<span class=\"variable\">$i</span>]=<span class=\"variable\">$tmp</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"variable\">$arr</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>3.插入排序</strong></p>\n<p>插入排序（Insertion Sort）的算法描述是一种简单直观的排序算法。它的工作原理是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入。插入排序在实现上，通常采用in-place排序（即只需用到O(1)的额外空间的排序），因而在从后向前扫描过程中，需要反复把已排序元素逐步向后挪位，为最新元素提供插入空间。</p>\n<p>步骤：</p>\n<ol>\n<li>从第一个元素开始，该元素可以认为已经被排序</li>\n<li>取出下一个元素，在已经排序的元素序列中从后向前扫描</li>\n<li>如果该元素（已排序）大于新元素，将该元素移到下一位置</li>\n<li>重复步骤3，直到找到已排序的元素小于或者等于新元素的位置</li>\n<li>将新元素插入到该位置中</li>\n<li>重复步骤2</li>\n</ol>\n<p>具体代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">insert_sort</span>(<span class=\"params\"><span class=\"variable\">$arr</span></span>) </span>&#123;</span><br><span class=\"line\">\t <span class=\"variable\">$len</span>=count(<span class=\"variable\">$arr</span>);</span><br><span class=\"line\">\t <span class=\"keyword\">for</span>(<span class=\"variable\">$i</span>=<span class=\"number\">1</span>; <span class=\"variable\">$i</span>&lt;<span class=\"variable\">$len</span>; <span class=\"variable\">$i</span>++) &#123;</span><br><span class=\"line\">\t <span class=\"comment\">//获得当前需要比较的元素值。</span></span><br><span class=\"line\">\t\t <span class=\"variable\">$tmp</span> = <span class=\"variable\">$arr</span>[<span class=\"variable\">$i</span>];</span><br><span class=\"line\">\t\t <span class=\"comment\">//内层循环控制 比较 并 插入</span></span><br><span class=\"line\">\t\t <span class=\"keyword\">for</span>(<span class=\"variable\">$j</span>=<span class=\"variable\">$i</span>-<span class=\"number\">1</span>; <span class=\"variable\">$j</span>&gt;=<span class=\"number\">0</span>; <span class=\"variable\">$j</span>--) &#123;</span><br><span class=\"line\">\t\t <span class=\"comment\">//$arr[$i];//需要插入的元素; $arr[$j];//需要比较的元素</span></span><br><span class=\"line\">\t\t\t <span class=\"keyword\">if</span>(<span class=\"variable\">$tmp</span> &lt; <span class=\"variable\">$arr</span>[<span class=\"variable\">$j</span>]) &#123;</span><br><span class=\"line\">\t\t\t\t <span class=\"comment\">//发现插入的元素要小，交换位置</span></span><br><span class=\"line\">\t\t\t\t <span class=\"comment\">//将后边的元素与前面的元素互换</span></span><br><span class=\"line\">\t\t\t\t <span class=\"variable\">$arr</span>[<span class=\"variable\">$j</span>+<span class=\"number\">1</span>] = <span class=\"variable\">$arr</span>[<span class=\"variable\">$j</span>];</span><br><span class=\"line\">\t\t\t\t <span class=\"comment\">//将前面的数设置为 当前需要交换的数</span></span><br><span class=\"line\">\t\t\t\t <span class=\"variable\">$arr</span>[<span class=\"variable\">$j</span>] = <span class=\"variable\">$tmp</span>;</span><br><span class=\"line\">\t\t\t &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t <span class=\"comment\">//如果碰到不需要移动的元素</span></span><br><span class=\"line\">\t\t\t\t <span class=\"comment\">//由于是已经排序好是数组，则前面的就不需要再次比较了。</span></span><br><span class=\"line\">\t\t\t\t <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t &#125;</span><br><span class=\"line\">\t\t &#125;</span><br><span class=\"line\">\t &#125;</span><br><span class=\"line\">\t <span class=\"comment\">//将这个元素 插入到已经排序好的序列内。</span></span><br><span class=\"line\">\t <span class=\"comment\">//返回</span></span><br><span class=\"line\">\t <span class=\"keyword\">return</span> <span class=\"variable\">$arr</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>4.快速排序</strong><br>快速排序是由东尼·霍尔所发展的一种排序算法。在平均状况下，排序 n 个项目要Ο(n log n)次比较。在最坏状况下则需要Ο(n2)次比较，但这种状况并不常见。事实上，快速排序通常明显比其他Ο(n log n) 算法更快，因为它的内部循环（inner loop）可以在大部分的架构上很有效率地被实现出来，且在大部分真实世界的数据，可以决定设计的选择，减少所需时间的二次方项之可能性。</p>\n<p>步骤：</p>\n<ol>\n<li>从数列中挑出一个元素，称为 “基准”（pivot）</li>\n<li>重新排序数列，所有元素比基准值小的摆放在基准前面，所有元素比基准值大的摆在基准的后面（相同的数可以到任一边）。在这个分区退出之后，该基准就处于数列的中间位置。这个称为分区（partition）操作。</li>\n<li>递归地（recursive）把小于基准值元素的子数列和大于基准值元素的子数列排序。</li>\n</ol>\n<p>具体代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">quick_sort</span>(<span class=\"params\"><span class=\"variable\">$arr</span></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//判断参数是否是一个数组</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!is_array(<span class=\"variable\">$arr</span>)) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  <span class=\"comment\">//递归出口:数组长度为1，直接返回数组</span></span><br><span class=\"line\">  <span class=\"variable\">$length</span> = count(<span class=\"variable\">$arr</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"variable\">$length</span>&lt;=<span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"variable\">$arr</span>;</span><br><span class=\"line\">  <span class=\"comment\">//数组元素有多个,则定义两个空数组</span></span><br><span class=\"line\">  <span class=\"variable\">$left</span> = <span class=\"variable\">$right</span> = <span class=\"keyword\">array</span>();</span><br><span class=\"line\"> <span class=\"comment\">//使用for循环进行遍历，把第一个元素当做比较的对象</span></span><br><span class=\"line\"> <span class=\"keyword\">for</span>(<span class=\"variable\">$i</span>=<span class=\"number\">1</span>; <span class=\"variable\">$i</span>&lt;<span class=\"variable\">$length</span>; <span class=\"variable\">$i</span>++)&#123;</span><br><span class=\"line\">\t <span class=\"comment\">//判断当前元素的大小</span></span><br><span class=\"line\">\t <span class=\"keyword\">if</span>(<span class=\"variable\">$arr</span>[<span class=\"variable\">$i</span>]&lt;<span class=\"variable\">$arr</span>[<span class=\"number\">0</span>])&#123;</span><br><span class=\"line\">\t \t<span class=\"variable\">$left</span>[]=<span class=\"variable\">$arr</span>[<span class=\"variable\">$i</span>];</span><br><span class=\"line\">\t &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t \t<span class=\"variable\">$right</span>[]=<span class=\"variable\">$arr</span>[<span class=\"variable\">$i</span>];</span><br><span class=\"line\">\t &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"comment\">//递归调用</span></span><br><span class=\"line\"> <span class=\"variable\">$left</span>=quick_sort(<span class=\"variable\">$left</span>);</span><br><span class=\"line\"> <span class=\"variable\">$right</span>=quick_sort(<span class=\"variable\">$right</span>);</span><br><span class=\"line\"> <span class=\"comment\">//将所有的结果合并</span></span><br><span class=\"line\"> <span class=\"keyword\">return</span> array_merge(<span class=\"variable\">$left</span>,<span class=\"keyword\">array</span>(<span class=\"variable\">$arr</span>[<span class=\"number\">0</span>]),<span class=\"variable\">$right</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>1.冒泡排序</strong></p>\n<p>冒泡排序（Bubble Sort，台湾译为：泡沫排序或气泡排序）是一种简单的排序算法。它重复地走访过要排序的数列，依次比较两个元素，如果他们的顺序错误就把他们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越小的元素会经由交换慢慢“浮”到数列的顶端。</p>\n<p>步骤：</p>\n<ol>\n<li>比较相邻的元素。如果第一个比第二个大，就交换他们两个。</li>\n<li>对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。</li>\n<li>针对所有的元素重复以上的步骤，除了最后一个。</li>\n<li>持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。</li>\n</ol>\n<p>具体代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$arr</span>=<span class=\"keyword\">array</span>(<span class=\"number\">1</span>,<span class=\"number\">43</span>,<span class=\"number\">54</span>,<span class=\"number\">62</span>,<span class=\"number\">21</span>,<span class=\"number\">66</span>,<span class=\"number\">32</span>,<span class=\"number\">78</span>,<span class=\"number\">36</span>,<span class=\"number\">76</span>,<span class=\"number\">39</span>);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bubblesort</span>(<span class=\"params\"><span class=\"variable\">$arr</span></span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"variable\">$len</span>=count(<span class=\"variable\">$arr</span>);</span><br><span class=\"line\">\t<span class=\"comment\">//计算需要冒泡的轮次</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"variable\">$i</span>=<span class=\"number\">1</span>;<span class=\"variable\">$i</span>&lt;<span class=\"variable\">$len</span>;<span class=\"variable\">$i</span>++)&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//这里的循环控制每轮两个数之间一共比较的次数，随着数字的减少，所以经历的轮数越多比较的次数越少</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"variable\">$k</span>=<span class=\"number\">0</span>;<span class=\"variable\">$k</span>&lt;<span class=\"variable\">$len</span>-<span class=\"variable\">$i</span>;<span class=\"variable\">$k</span>++)&#123;<span class=\"comment\">//如果前一个数比后一位数大，就将两个数的位置互换，那么第一轮两两比较下来就能确定最大数了，以此类推</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(<span class=\"variable\">$arr</span>[<span class=\"variable\">$k</span>]&gt;<span class=\"variable\">$arr</span>[<span class=\"variable\">$k</span>+<span class=\"number\">1</span>])&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"variable\">$tmp</span>=<span class=\"variable\">$arr</span>[<span class=\"variable\">$k</span>+<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t\t\t<span class=\"variable\">$arr</span>[<span class=\"variable\">$k</span>+<span class=\"number\">1</span>]=<span class=\"variable\">$arr</span>[<span class=\"variable\">$k</span>];</span><br><span class=\"line\">\t\t\t\t<span class=\"variable\">$arr</span>[<span class=\"variable\">$k</span>]=<span class=\"variable\">$tmp</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"variable\">$arr</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>2.选择排序</strong></p>\n<p>选择排序(Selection sort)是一种简单直观的排序算法。它的工作原理如下。首先在未排序序列中找到最小元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最小元素，然后放到排序序列末尾。以此类推，直到所有元素均排序完毕。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//实现思路 双重循环完成，外层控制轮数，当前的最小值。内层 控制的比较次数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">select_sort</span>(<span class=\"params\"><span class=\"variable\">$arr</span></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"variable\">$i</span>=<span class=\"number\">0</span>,<span class=\"variable\">$len</span>=count(<span class=\"variable\">$arr</span>);<span class=\"variable\">$i</span>&lt;<span class=\"variable\">$len</span>-<span class=\"number\">1</span>;<span class=\"variable\">$i</span>++)&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//假设最小值为初始位置</span></span><br><span class=\"line\">\t\t<span class=\"variable\">$p</span>=<span class=\"variable\">$i</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"variable\">$j</span>=<span class=\"variable\">$i</span>+<span class=\"number\">1</span>;<span class=\"variable\">$l</span>&lt;<span class=\"variable\">$len</span>;<span class=\"variable\">$j</span>++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(<span class=\"variable\">$arr</span>[<span class=\"variable\">$p</span>]&gt;<span class=\"variable\">$arr</span>[<span class=\"variable\">$j</span>])&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//比较发现更小的值，则记录最小值的位置，并在下次比较采用已知的最小值进行比较</span></span><br><span class=\"line\">\t\t\t\t<span class=\"variable\">$p</span>=<span class=\"variable\">$j</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">//那么第一轮比较下来就确定了最小值的位置</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//这个时候再比较当前最小值的位置与当前轮次开始时最小值位置是否一致，如果不一致，则将两值的位置交换</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(<span class=\"variable\">$p</span>!=<span class=\"variable\">$i</span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"variable\">$tmp</span>=<span class=\"variable\">$arr</span>[<span class=\"variable\">$p</span>];</span><br><span class=\"line\">\t\t\t<span class=\"variable\">$arr</span>[<span class=\"variable\">$p</span>]=<span class=\"variable\">$arr</span>[<span class=\"variable\">$i</span>];</span><br><span class=\"line\">\t\t\t<span class=\"variable\">$arr</span>[<span class=\"variable\">$i</span>]=<span class=\"variable\">$tmp</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"variable\">$arr</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>3.插入排序</strong></p>\n<p>插入排序（Insertion Sort）的算法描述是一种简单直观的排序算法。它的工作原理是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入。插入排序在实现上，通常采用in-place排序（即只需用到O(1)的额外空间的排序），因而在从后向前扫描过程中，需要反复把已排序元素逐步向后挪位，为最新元素提供插入空间。</p>\n<p>步骤：</p>\n<ol>\n<li>从第一个元素开始，该元素可以认为已经被排序</li>\n<li>取出下一个元素，在已经排序的元素序列中从后向前扫描</li>\n<li>如果该元素（已排序）大于新元素，将该元素移到下一位置</li>\n<li>重复步骤3，直到找到已排序的元素小于或者等于新元素的位置</li>\n<li>将新元素插入到该位置中</li>\n<li>重复步骤2</li>\n</ol>\n<p>具体代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">insert_sort</span>(<span class=\"params\"><span class=\"variable\">$arr</span></span>) </span>&#123;</span><br><span class=\"line\">\t <span class=\"variable\">$len</span>=count(<span class=\"variable\">$arr</span>);</span><br><span class=\"line\">\t <span class=\"keyword\">for</span>(<span class=\"variable\">$i</span>=<span class=\"number\">1</span>; <span class=\"variable\">$i</span>&lt;<span class=\"variable\">$len</span>; <span class=\"variable\">$i</span>++) &#123;</span><br><span class=\"line\">\t <span class=\"comment\">//获得当前需要比较的元素值。</span></span><br><span class=\"line\">\t\t <span class=\"variable\">$tmp</span> = <span class=\"variable\">$arr</span>[<span class=\"variable\">$i</span>];</span><br><span class=\"line\">\t\t <span class=\"comment\">//内层循环控制 比较 并 插入</span></span><br><span class=\"line\">\t\t <span class=\"keyword\">for</span>(<span class=\"variable\">$j</span>=<span class=\"variable\">$i</span>-<span class=\"number\">1</span>; <span class=\"variable\">$j</span>&gt;=<span class=\"number\">0</span>; <span class=\"variable\">$j</span>--) &#123;</span><br><span class=\"line\">\t\t <span class=\"comment\">//$arr[$i];//需要插入的元素; $arr[$j];//需要比较的元素</span></span><br><span class=\"line\">\t\t\t <span class=\"keyword\">if</span>(<span class=\"variable\">$tmp</span> &lt; <span class=\"variable\">$arr</span>[<span class=\"variable\">$j</span>]) &#123;</span><br><span class=\"line\">\t\t\t\t <span class=\"comment\">//发现插入的元素要小，交换位置</span></span><br><span class=\"line\">\t\t\t\t <span class=\"comment\">//将后边的元素与前面的元素互换</span></span><br><span class=\"line\">\t\t\t\t <span class=\"variable\">$arr</span>[<span class=\"variable\">$j</span>+<span class=\"number\">1</span>] = <span class=\"variable\">$arr</span>[<span class=\"variable\">$j</span>];</span><br><span class=\"line\">\t\t\t\t <span class=\"comment\">//将前面的数设置为 当前需要交换的数</span></span><br><span class=\"line\">\t\t\t\t <span class=\"variable\">$arr</span>[<span class=\"variable\">$j</span>] = <span class=\"variable\">$tmp</span>;</span><br><span class=\"line\">\t\t\t &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t <span class=\"comment\">//如果碰到不需要移动的元素</span></span><br><span class=\"line\">\t\t\t\t <span class=\"comment\">//由于是已经排序好是数组，则前面的就不需要再次比较了。</span></span><br><span class=\"line\">\t\t\t\t <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t &#125;</span><br><span class=\"line\">\t\t &#125;</span><br><span class=\"line\">\t &#125;</span><br><span class=\"line\">\t <span class=\"comment\">//将这个元素 插入到已经排序好的序列内。</span></span><br><span class=\"line\">\t <span class=\"comment\">//返回</span></span><br><span class=\"line\">\t <span class=\"keyword\">return</span> <span class=\"variable\">$arr</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>4.快速排序</strong><br>快速排序是由东尼·霍尔所发展的一种排序算法。在平均状况下，排序 n 个项目要Ο(n log n)次比较。在最坏状况下则需要Ο(n2)次比较，但这种状况并不常见。事实上，快速排序通常明显比其他Ο(n log n) 算法更快，因为它的内部循环（inner loop）可以在大部分的架构上很有效率地被实现出来，且在大部分真实世界的数据，可以决定设计的选择，减少所需时间的二次方项之可能性。</p>\n<p>步骤：</p>\n<ol>\n<li>从数列中挑出一个元素，称为 “基准”（pivot）</li>\n<li>重新排序数列，所有元素比基准值小的摆放在基准前面，所有元素比基准值大的摆在基准的后面（相同的数可以到任一边）。在这个分区退出之后，该基准就处于数列的中间位置。这个称为分区（partition）操作。</li>\n<li>递归地（recursive）把小于基准值元素的子数列和大于基准值元素的子数列排序。</li>\n</ol>\n<p>具体代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">quick_sort</span>(<span class=\"params\"><span class=\"variable\">$arr</span></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//判断参数是否是一个数组</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!is_array(<span class=\"variable\">$arr</span>)) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  <span class=\"comment\">//递归出口:数组长度为1，直接返回数组</span></span><br><span class=\"line\">  <span class=\"variable\">$length</span> = count(<span class=\"variable\">$arr</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"variable\">$length</span>&lt;=<span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"variable\">$arr</span>;</span><br><span class=\"line\">  <span class=\"comment\">//数组元素有多个,则定义两个空数组</span></span><br><span class=\"line\">  <span class=\"variable\">$left</span> = <span class=\"variable\">$right</span> = <span class=\"keyword\">array</span>();</span><br><span class=\"line\"> <span class=\"comment\">//使用for循环进行遍历，把第一个元素当做比较的对象</span></span><br><span class=\"line\"> <span class=\"keyword\">for</span>(<span class=\"variable\">$i</span>=<span class=\"number\">1</span>; <span class=\"variable\">$i</span>&lt;<span class=\"variable\">$length</span>; <span class=\"variable\">$i</span>++)&#123;</span><br><span class=\"line\">\t <span class=\"comment\">//判断当前元素的大小</span></span><br><span class=\"line\">\t <span class=\"keyword\">if</span>(<span class=\"variable\">$arr</span>[<span class=\"variable\">$i</span>]&lt;<span class=\"variable\">$arr</span>[<span class=\"number\">0</span>])&#123;</span><br><span class=\"line\">\t \t<span class=\"variable\">$left</span>[]=<span class=\"variable\">$arr</span>[<span class=\"variable\">$i</span>];</span><br><span class=\"line\">\t &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t \t<span class=\"variable\">$right</span>[]=<span class=\"variable\">$arr</span>[<span class=\"variable\">$i</span>];</span><br><span class=\"line\">\t &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"comment\">//递归调用</span></span><br><span class=\"line\"> <span class=\"variable\">$left</span>=quick_sort(<span class=\"variable\">$left</span>);</span><br><span class=\"line\"> <span class=\"variable\">$right</span>=quick_sort(<span class=\"variable\">$right</span>);</span><br><span class=\"line\"> <span class=\"comment\">//将所有的结果合并</span></span><br><span class=\"line\"> <span class=\"keyword\">return</span> array_merge(<span class=\"variable\">$left</span>,<span class=\"keyword\">array</span>(<span class=\"variable\">$arr</span>[<span class=\"number\">0</span>]),<span class=\"variable\">$right</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"php-位运算","date":"2018-08-23T11:35:10.000Z","_content":"# 位运算符 #\n作用是对二进制位从低到高位对齐后进行运算，其他进制需要先转换为二进制再运算\n\n<table><thead><tr><th>符号</th><th>作用</th><th>举例</th><th>个人理解</th></tr></thead><tbody><tr><td>&amp;</td><td>按位与</td><td><code>$m &amp; $n</code></td><td>全1为1，否则为0</td></tr><tr><td>|</td><td>按位或</td><td><code>$m | $n</code></td><td>全0为0，有1为1</td></tr><tr><td>^</td><td>按位异或</td><td><code>$m ^ $n</code></td><td>不同为1，相同为0</td></tr><tr><td>~</td><td>按位取反</td><td><code>~$m</code></td><td></td></tr><tr><td>&lt;&lt;</td><td>向左移位</td><td><code>$m &lt;&lt; $n</code></td><td>乘以2的n次方</td></tr><tr><td>&gt;&gt;</td><td>向右移位</td><td><code>$m &gt;&gt; $n</code></td><td>除以2的n次方</td></tr></tbody></table>\n\n## &运算符 ##\n```php\n    <?php\n    $m = 1;\n    $n = 2;\n    $mn = $m & $n;\n    echo $mn;\n```\n运行结果为0\n\n解释：将1，2分别转换为二进制为\n\n00000001\n\n00000010\n\n在按位与的过程中，按位比较，全1为1，比较结果为00000000，所以输出0\n## |运算符 ##\n```php\n    <?php\n    $m = 1;\n    $n = 2;\n    $mn = $m | $n;\n    echo $mn;\n```\n运行结果为3，同样，转换成如上的二进制\n\n00000001\n\n00000010\n\n在按位或的过程中，有1为1，全0为0，则结果为00000011，所以输出3\n## ^运算符 ##\n```php\n    <?php\n    $m = 1;\n    $n = 2;\n    $mn = $m ^ $n;\n    echo $mn;\n```\n运行结果为3，同样，转换成如上的二进制\n\n00000001\n\n00000010\n\n在按位亦或的过程中，不同为1，相同为0，所以结果为00000011,进而输出3。\n## 扩展 ##\n由于^运算可以推算：\n\n0^1=1 0^0=0 =>因此，0异或任何数等于任何数本身\n\n1^0=1 1^1=0 =>因此，1异或任何数等于任何数取反\n\n任何数异或自己=>把自己置0\n\n因此可以借用^运算来达到不使用第三个变量接收来交换两个变量的值：\n```php\n    function swap1(&$a, &$b){\n\t    $a = $a ^ $b;\n\t    $b = $a ^ $b;\n\t    $a = $b ^ $a;\n    }\n```\n这样计算的原因：\n\n$a = $a ^ $b;\n\n$b = $a ^ $b = ($a ^ $b) ^ $b = $a ^ ($b ^ $b) = $a ^ 0，根据异或特点，0与任何数异或等于任何数本身。同理可推导，$a=$b。\n另外需要注意的是这里使用的是传引用而非传值，因为对两个变量值的改变必须要在函数外也能生效。\n## ~运算符 ##\n```php\n    <?php\n    $m = 2;\n    $m1 = ~$m;\n    echo $m1;\n```\n运行结果为-3。\n\n注：在计算机中，负数以其正值的补码形式表达。\n\n1: 2的32位原码为 0000 0000 0000 0000 0000 0000 0000 0010\n\n2: 按位取反后为 1111 1111 1111 1111 1111 1111 1111 1101\n\n由于最前面的数为1，符号位为1，即为负数，所以，以其正值的补码形式表示为：（符号位不变，按位取反，末尾加1）\n\n1000 0000 0000 0000 0000 0000 0000 0011\n\n所以输出为-3\n\n## <<运算符 ##\n```php\n    <?php\n    $m = 3;\n    $m1=$m << 1;\n    echo $m1;\n```\n运算结果为6\n\n左移运算的实质是将对应的数据的二进制值逐位左移若干位，并在空出的位置上填0，最高位溢出并舍弃。\n\n3的32位原码为，0000 0000 0000 0000 0000 0000 0000 0011\n\n左移一位：0000 0000 0000 0000 0000 0000 0000 0110\n\n所以为6\n\n根据手册描述可以看出位运算可以看出向左移一位，则是实现乘2运算。由于位移操作的运算速度比乘法的 运算速度高很多。因此在处理数据的乘法运算的时，采用位移运算可以获得较快的速度。移动n位则结果为*2的n次方。\n提示 将所有对2的乘法运算转换为位移运算，可提高程序的运行效率。\n\n## >>运算符 ##\n右移一位，和<<运算符，类似，只不过这个是右移，所以是做2的除法，需要注意的是当除去的结果小于1则为零。","source":"_posts/php-bitwise.md","raw":"---\ntitle: php-位运算\ndate: 2018-08-23 19:35:10\ncategories: PHP\ntags:\n\t- 位运算\n---\n# 位运算符 #\n作用是对二进制位从低到高位对齐后进行运算，其他进制需要先转换为二进制再运算\n\n<table><thead><tr><th>符号</th><th>作用</th><th>举例</th><th>个人理解</th></tr></thead><tbody><tr><td>&amp;</td><td>按位与</td><td><code>$m &amp; $n</code></td><td>全1为1，否则为0</td></tr><tr><td>|</td><td>按位或</td><td><code>$m | $n</code></td><td>全0为0，有1为1</td></tr><tr><td>^</td><td>按位异或</td><td><code>$m ^ $n</code></td><td>不同为1，相同为0</td></tr><tr><td>~</td><td>按位取反</td><td><code>~$m</code></td><td></td></tr><tr><td>&lt;&lt;</td><td>向左移位</td><td><code>$m &lt;&lt; $n</code></td><td>乘以2的n次方</td></tr><tr><td>&gt;&gt;</td><td>向右移位</td><td><code>$m &gt;&gt; $n</code></td><td>除以2的n次方</td></tr></tbody></table>\n\n## &运算符 ##\n```php\n    <?php\n    $m = 1;\n    $n = 2;\n    $mn = $m & $n;\n    echo $mn;\n```\n运行结果为0\n\n解释：将1，2分别转换为二进制为\n\n00000001\n\n00000010\n\n在按位与的过程中，按位比较，全1为1，比较结果为00000000，所以输出0\n## |运算符 ##\n```php\n    <?php\n    $m = 1;\n    $n = 2;\n    $mn = $m | $n;\n    echo $mn;\n```\n运行结果为3，同样，转换成如上的二进制\n\n00000001\n\n00000010\n\n在按位或的过程中，有1为1，全0为0，则结果为00000011，所以输出3\n## ^运算符 ##\n```php\n    <?php\n    $m = 1;\n    $n = 2;\n    $mn = $m ^ $n;\n    echo $mn;\n```\n运行结果为3，同样，转换成如上的二进制\n\n00000001\n\n00000010\n\n在按位亦或的过程中，不同为1，相同为0，所以结果为00000011,进而输出3。\n## 扩展 ##\n由于^运算可以推算：\n\n0^1=1 0^0=0 =>因此，0异或任何数等于任何数本身\n\n1^0=1 1^1=0 =>因此，1异或任何数等于任何数取反\n\n任何数异或自己=>把自己置0\n\n因此可以借用^运算来达到不使用第三个变量接收来交换两个变量的值：\n```php\n    function swap1(&$a, &$b){\n\t    $a = $a ^ $b;\n\t    $b = $a ^ $b;\n\t    $a = $b ^ $a;\n    }\n```\n这样计算的原因：\n\n$a = $a ^ $b;\n\n$b = $a ^ $b = ($a ^ $b) ^ $b = $a ^ ($b ^ $b) = $a ^ 0，根据异或特点，0与任何数异或等于任何数本身。同理可推导，$a=$b。\n另外需要注意的是这里使用的是传引用而非传值，因为对两个变量值的改变必须要在函数外也能生效。\n## ~运算符 ##\n```php\n    <?php\n    $m = 2;\n    $m1 = ~$m;\n    echo $m1;\n```\n运行结果为-3。\n\n注：在计算机中，负数以其正值的补码形式表达。\n\n1: 2的32位原码为 0000 0000 0000 0000 0000 0000 0000 0010\n\n2: 按位取反后为 1111 1111 1111 1111 1111 1111 1111 1101\n\n由于最前面的数为1，符号位为1，即为负数，所以，以其正值的补码形式表示为：（符号位不变，按位取反，末尾加1）\n\n1000 0000 0000 0000 0000 0000 0000 0011\n\n所以输出为-3\n\n## <<运算符 ##\n```php\n    <?php\n    $m = 3;\n    $m1=$m << 1;\n    echo $m1;\n```\n运算结果为6\n\n左移运算的实质是将对应的数据的二进制值逐位左移若干位，并在空出的位置上填0，最高位溢出并舍弃。\n\n3的32位原码为，0000 0000 0000 0000 0000 0000 0000 0011\n\n左移一位：0000 0000 0000 0000 0000 0000 0000 0110\n\n所以为6\n\n根据手册描述可以看出位运算可以看出向左移一位，则是实现乘2运算。由于位移操作的运算速度比乘法的 运算速度高很多。因此在处理数据的乘法运算的时，采用位移运算可以获得较快的速度。移动n位则结果为*2的n次方。\n提示 将所有对2的乘法运算转换为位移运算，可提高程序的运行效率。\n\n## >>运算符 ##\n右移一位，和<<运算符，类似，只不过这个是右移，所以是做2的除法，需要注意的是当除去的结果小于1则为零。","slug":"php-bitwise","published":1,"updated":"2021-11-25T03:28:13.079Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwn8bfxz001ptwnf93vxblj0","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"位运算符\"><a href=\"#位运算符\" class=\"headerlink\" title=\"位运算符\"></a>位运算符</h1><p>作用是对二进制位从低到高位对齐后进行运算，其他进制需要先转换为二进制再运算</p>\n<table><thead><tr><th>符号</th><th>作用</th><th>举例</th><th>个人理解</th></tr></thead><tbody><tr><td>&amp;</td><td>按位与</td><td><code>$m &amp; $n</code></td><td>全1为1，否则为0</td></tr><tr><td>|</td><td>按位或</td><td><code>$m | $n</code></td><td>全0为0，有1为1</td></tr><tr><td>^</td><td>按位异或</td><td><code>$m ^ $n</code></td><td>不同为1，相同为0</td></tr><tr><td>~</td><td>按位取反</td><td><code>~$m</code></td><td></td></tr><tr><td>&lt;&lt;</td><td>向左移位</td><td><code>$m &lt;&lt; $n</code></td><td>乘以2的n次方</td></tr><tr><td>&gt;&gt;</td><td>向右移位</td><td><code>$m &gt;&gt; $n</code></td><td>除以2的n次方</td></tr></tbody></table>\n\n<h2 id=\"amp-运算符\"><a href=\"#amp-运算符\" class=\"headerlink\" title=\"&amp;运算符\"></a>&amp;运算符</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$m</span> = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"variable\">$n</span> = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"variable\">$mn</span> = <span class=\"variable\">$m</span> &amp; <span class=\"variable\">$n</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$mn</span>;</span><br></pre></td></tr></table></figure>\n<p>运行结果为0</p>\n<p>解释：将1，2分别转换为二进制为</p>\n<p>00000001</p>\n<p>00000010</p>\n<p>在按位与的过程中，按位比较，全1为1，比较结果为00000000，所以输出0</p>\n<h2 id=\"运算符\"><a href=\"#运算符\" class=\"headerlink\" title=\"|运算符\"></a>|运算符</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$m</span> = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"variable\">$n</span> = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"variable\">$mn</span> = <span class=\"variable\">$m</span> | <span class=\"variable\">$n</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$mn</span>;</span><br></pre></td></tr></table></figure>\n<p>运行结果为3，同样，转换成如上的二进制</p>\n<p>00000001</p>\n<p>00000010</p>\n<p>在按位或的过程中，有1为1，全0为0，则结果为00000011，所以输出3</p>\n<h2 id=\"运算符-1\"><a href=\"#运算符-1\" class=\"headerlink\" title=\"^运算符\"></a>^运算符</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$m</span> = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"variable\">$n</span> = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"variable\">$mn</span> = <span class=\"variable\">$m</span> ^ <span class=\"variable\">$n</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$mn</span>;</span><br></pre></td></tr></table></figure>\n<p>运行结果为3，同样，转换成如上的二进制</p>\n<p>00000001</p>\n<p>00000010</p>\n<p>在按位亦或的过程中，不同为1，相同为0，所以结果为00000011,进而输出3。</p>\n<h2 id=\"扩展\"><a href=\"#扩展\" class=\"headerlink\" title=\"扩展\"></a>扩展</h2><p>由于^运算可以推算：</p>\n<p>0^1=1 0^0=0 =&gt;因此，0异或任何数等于任何数本身</p>\n<p>1^0=1 1^1=0 =&gt;因此，1异或任何数等于任何数取反</p>\n<p>任何数异或自己=&gt;把自己置0</p>\n<p>因此可以借用^运算来达到不使用第三个变量接收来交换两个变量的值：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">swap1</span>(<span class=\"params\">&amp;<span class=\"variable\">$a</span>, &amp;<span class=\"variable\">$b</span></span>)</span>&#123;</span><br><span class=\"line\"> <span class=\"variable\">$a</span> = <span class=\"variable\">$a</span> ^ <span class=\"variable\">$b</span>;</span><br><span class=\"line\"> <span class=\"variable\">$b</span> = <span class=\"variable\">$a</span> ^ <span class=\"variable\">$b</span>;</span><br><span class=\"line\"> <span class=\"variable\">$a</span> = <span class=\"variable\">$b</span> ^ <span class=\"variable\">$a</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样计算的原因：</p>\n<p>$a = $a ^ $b;</p>\n<p>$b = $a ^ $b = ($a ^ $b) ^ $b = $a ^ ($b ^ $b) = $a ^ 0，根据异或特点，0与任何数异或等于任何数本身。同理可推导，$a=$b。<br>另外需要注意的是这里使用的是传引用而非传值，因为对两个变量值的改变必须要在函数外也能生效。</p>\n<h2 id=\"运算符-2\"><a href=\"#运算符-2\" class=\"headerlink\" title=\"~运算符\"></a>~运算符</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$m</span> = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"variable\">$m1</span> = ~<span class=\"variable\">$m</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$m1</span>;</span><br></pre></td></tr></table></figure>\n<p>运行结果为-3。</p>\n<p>注：在计算机中，负数以其正值的补码形式表达。</p>\n<p>1: 2的32位原码为 0000 0000 0000 0000 0000 0000 0000 0010</p>\n<p>2: 按位取反后为 1111 1111 1111 1111 1111 1111 1111 1101</p>\n<p>由于最前面的数为1，符号位为1，即为负数，所以，以其正值的补码形式表示为：（符号位不变，按位取反，末尾加1）</p>\n<p>1000 0000 0000 0000 0000 0000 0000 0011</p>\n<p>所以输出为-3</p>\n<h2 id=\"lt-lt-运算符\"><a href=\"#lt-lt-运算符\" class=\"headerlink\" title=\"&lt;&lt;运算符\"></a>&lt;&lt;运算符</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$m</span> = <span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"variable\">$m1</span>=<span class=\"variable\">$m</span> &lt;&lt; <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$m1</span>;</span><br></pre></td></tr></table></figure>\n<p>运算结果为6</p>\n<p>左移运算的实质是将对应的数据的二进制值逐位左移若干位，并在空出的位置上填0，最高位溢出并舍弃。</p>\n<p>3的32位原码为，0000 0000 0000 0000 0000 0000 0000 0011</p>\n<p>左移一位：0000 0000 0000 0000 0000 0000 0000 0110</p>\n<p>所以为6</p>\n<p>根据手册描述可以看出位运算可以看出向左移一位，则是实现乘2运算。由于位移操作的运算速度比乘法的 运算速度高很多。因此在处理数据的乘法运算的时，采用位移运算可以获得较快的速度。移动n位则结果为*2的n次方。<br>提示 将所有对2的乘法运算转换为位移运算，可提高程序的运行效率。</p>\n<h2 id=\"gt-gt-运算符\"><a href=\"#gt-gt-运算符\" class=\"headerlink\" title=\"&gt;&gt;运算符\"></a>&gt;&gt;运算符</h2><p>右移一位，和&lt;&lt;运算符，类似，只不过这个是右移，所以是做2的除法，需要注意的是当除去的结果小于1则为零。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"位运算符\"><a href=\"#位运算符\" class=\"headerlink\" title=\"位运算符\"></a>位运算符</h1><p>作用是对二进制位从低到高位对齐后进行运算，其他进制需要先转换为二进制再运算</p>\n<table><thead><tr><th>符号</th><th>作用</th><th>举例</th><th>个人理解</th></tr></thead><tbody><tr><td>&amp;</td><td>按位与</td><td><code>$m &amp; $n</code></td><td>全1为1，否则为0</td></tr><tr><td>|</td><td>按位或</td><td><code>$m | $n</code></td><td>全0为0，有1为1</td></tr><tr><td>^</td><td>按位异或</td><td><code>$m ^ $n</code></td><td>不同为1，相同为0</td></tr><tr><td>~</td><td>按位取反</td><td><code>~$m</code></td><td></td></tr><tr><td>&lt;&lt;</td><td>向左移位</td><td><code>$m &lt;&lt; $n</code></td><td>乘以2的n次方</td></tr><tr><td>&gt;&gt;</td><td>向右移位</td><td><code>$m &gt;&gt; $n</code></td><td>除以2的n次方</td></tr></tbody></table>\n\n<h2 id=\"amp-运算符\"><a href=\"#amp-运算符\" class=\"headerlink\" title=\"&amp;运算符\"></a>&amp;运算符</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$m</span> = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"variable\">$n</span> = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"variable\">$mn</span> = <span class=\"variable\">$m</span> &amp; <span class=\"variable\">$n</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$mn</span>;</span><br></pre></td></tr></table></figure>\n<p>运行结果为0</p>\n<p>解释：将1，2分别转换为二进制为</p>\n<p>00000001</p>\n<p>00000010</p>\n<p>在按位与的过程中，按位比较，全1为1，比较结果为00000000，所以输出0</p>\n<h2 id=\"运算符\"><a href=\"#运算符\" class=\"headerlink\" title=\"|运算符\"></a>|运算符</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$m</span> = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"variable\">$n</span> = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"variable\">$mn</span> = <span class=\"variable\">$m</span> | <span class=\"variable\">$n</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$mn</span>;</span><br></pre></td></tr></table></figure>\n<p>运行结果为3，同样，转换成如上的二进制</p>\n<p>00000001</p>\n<p>00000010</p>\n<p>在按位或的过程中，有1为1，全0为0，则结果为00000011，所以输出3</p>\n<h2 id=\"运算符-1\"><a href=\"#运算符-1\" class=\"headerlink\" title=\"^运算符\"></a>^运算符</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$m</span> = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"variable\">$n</span> = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"variable\">$mn</span> = <span class=\"variable\">$m</span> ^ <span class=\"variable\">$n</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$mn</span>;</span><br></pre></td></tr></table></figure>\n<p>运行结果为3，同样，转换成如上的二进制</p>\n<p>00000001</p>\n<p>00000010</p>\n<p>在按位亦或的过程中，不同为1，相同为0，所以结果为00000011,进而输出3。</p>\n<h2 id=\"扩展\"><a href=\"#扩展\" class=\"headerlink\" title=\"扩展\"></a>扩展</h2><p>由于^运算可以推算：</p>\n<p>0^1=1 0^0=0 =&gt;因此，0异或任何数等于任何数本身</p>\n<p>1^0=1 1^1=0 =&gt;因此，1异或任何数等于任何数取反</p>\n<p>任何数异或自己=&gt;把自己置0</p>\n<p>因此可以借用^运算来达到不使用第三个变量接收来交换两个变量的值：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">swap1</span>(<span class=\"params\">&amp;<span class=\"variable\">$a</span>, &amp;<span class=\"variable\">$b</span></span>)</span>&#123;</span><br><span class=\"line\"> <span class=\"variable\">$a</span> = <span class=\"variable\">$a</span> ^ <span class=\"variable\">$b</span>;</span><br><span class=\"line\"> <span class=\"variable\">$b</span> = <span class=\"variable\">$a</span> ^ <span class=\"variable\">$b</span>;</span><br><span class=\"line\"> <span class=\"variable\">$a</span> = <span class=\"variable\">$b</span> ^ <span class=\"variable\">$a</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样计算的原因：</p>\n<p>$a = $a ^ $b;</p>\n<p>$b = $a ^ $b = ($a ^ $b) ^ $b = $a ^ ($b ^ $b) = $a ^ 0，根据异或特点，0与任何数异或等于任何数本身。同理可推导，$a=$b。<br>另外需要注意的是这里使用的是传引用而非传值，因为对两个变量值的改变必须要在函数外也能生效。</p>\n<h2 id=\"运算符-2\"><a href=\"#运算符-2\" class=\"headerlink\" title=\"~运算符\"></a>~运算符</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$m</span> = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"variable\">$m1</span> = ~<span class=\"variable\">$m</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$m1</span>;</span><br></pre></td></tr></table></figure>\n<p>运行结果为-3。</p>\n<p>注：在计算机中，负数以其正值的补码形式表达。</p>\n<p>1: 2的32位原码为 0000 0000 0000 0000 0000 0000 0000 0010</p>\n<p>2: 按位取反后为 1111 1111 1111 1111 1111 1111 1111 1101</p>\n<p>由于最前面的数为1，符号位为1，即为负数，所以，以其正值的补码形式表示为：（符号位不变，按位取反，末尾加1）</p>\n<p>1000 0000 0000 0000 0000 0000 0000 0011</p>\n<p>所以输出为-3</p>\n<h2 id=\"lt-lt-运算符\"><a href=\"#lt-lt-运算符\" class=\"headerlink\" title=\"&lt;&lt;运算符\"></a>&lt;&lt;运算符</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$m</span> = <span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"variable\">$m1</span>=<span class=\"variable\">$m</span> &lt;&lt; <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$m1</span>;</span><br></pre></td></tr></table></figure>\n<p>运算结果为6</p>\n<p>左移运算的实质是将对应的数据的二进制值逐位左移若干位，并在空出的位置上填0，最高位溢出并舍弃。</p>\n<p>3的32位原码为，0000 0000 0000 0000 0000 0000 0000 0011</p>\n<p>左移一位：0000 0000 0000 0000 0000 0000 0000 0110</p>\n<p>所以为6</p>\n<p>根据手册描述可以看出位运算可以看出向左移一位，则是实现乘2运算。由于位移操作的运算速度比乘法的 运算速度高很多。因此在处理数据的乘法运算的时，采用位移运算可以获得较快的速度。移动n位则结果为*2的n次方。<br>提示 将所有对2的乘法运算转换为位移运算，可提高程序的运行效率。</p>\n<h2 id=\"gt-gt-运算符\"><a href=\"#gt-gt-运算符\" class=\"headerlink\" title=\"&gt;&gt;运算符\"></a>&gt;&gt;运算符</h2><p>右移一位，和&lt;&lt;运算符，类似，只不过这个是右移，所以是做2的除法，需要注意的是当除去的结果小于1则为零。</p>\n"},{"title":"php只出现一次的数字问题","date":"2019-01-22T07:30:16.000Z","_content":"**题目描述**\n\n给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。\n\n说明：\n你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？\n\n示例 1:\n输入: [2,2,1]\n输出: 1\n\n示例 2:\n输入: [4,1,2,1,2]\n输出: 4\n\n题目解析\n\n根据题目描述，由于加上了时间复杂度必须是 O(n)，并且空间复杂度为 O(1)的条件，因此不能用排序方法，也不能使用 map 数据结构。那么可以使用位操作的特性来解这个题。\n\n由异或运算的性质（相同为0，不同为1），那么出现两次的元素经过异或运算结果为0，那么数组中所有元素异或运算的结果就是剩下的唯一一个值了。\n```php\n    $arr=array(9,2,2,4,4);\n    function get_bin($a,$b){\n    \treturn $a^$b;\n    }\n    echo array_reduce($arr,'get_bin',0);//将数组中所有的值用回调函数进行迭代，获得的结果即是剩下的唯一值\n```\n\n**进阶版**\n\n将原题的1个数出现一次改为2个不同的数出现一次，其他条件保持不变\n\n首先通过上面的步骤获得2个不同的数的异或结果，由异或的性质得到这两个数至少有一位是不同的，即一个为0，一个为1。\n\n根据异或的性质，任何一个数字异或他自己都等于0，得到这个数字二进制形式中任意一个为1的位都是我们要找的那个位数。\n\n再然后，以这一位是 1 还是 0 为标准，将数组的 n 个元素分成两部分。\n\n将这一位为 0 的所有元素做异或，得出的数就是只出现一次的数中的一个\n\n将这一位为 1 的所有元素做异或，得出的数就是只出现一次的数中的另一个。\n\n这样就解出题目。忽略寻找不同位的过程，总共遍历数组两次，时间复杂度为 O(n)。 \n```php\n    $arr=array(899,2,2,4,4,100);\n    function get_bin($a,$b){\n    \treturn $a^$b;\n    }\n    \n    echo '两个不同数的异或结果为：'.array_reduce($arr,'get_bin',0).\"\\r\\n\";//得到两个不同数的异或结果为3\n    echo '两个不同数的异或结果的二进制数为：'.decbin(3).PHP_EOL;//将3转换为二进制为11，即得到这两个不同数的二进制位的第1位和第2位都不同\n    //我们取第一位不同，那么将原数组中所有二进制第1位为1的分为一组，将第1位为0的分为第二组，再将两个数组进行第一步中的迭代就是我们想要获得的两个不同数\n\n\n    function bin_test($num,$wei){//判断二进制某位是否为1 //这里用到按位与的性质 全1为1 否则为0\n\t    $b=1<<($wei-1);//将数字1位移至目标位数//也可将目标数右移至第一位\n\t    if(($b & $num) >0){//按位与 全1为1 否则为0\n\t    \treturn true;\n\t    }else{\n\t    \treturn false;\n\t    }\n    }\n    foreach ($arr as $value){\n\t    if(bin_test($value,1)){\n\t    \t$arr1[]=$value;\n\t    }else{\n\t    \t$arr2[]=$value;\n\t    }\n    }\n    \n    echo '其中一个数为：'.array_reduce($arr1,'get_bin',0).PHP_EOL;\n    echo '另一个数为：'.array_reduce($arr2,'get_bin',0).PHP_EOL;\n```","source":"_posts/php-question1.md","raw":"---\ntitle: php只出现一次的数字问题\ndate: 2019-01-22 15:30:16\ncategories: PHP\ntags:\n\t- 算法\n---\n**题目描述**\n\n给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。\n\n说明：\n你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？\n\n示例 1:\n输入: [2,2,1]\n输出: 1\n\n示例 2:\n输入: [4,1,2,1,2]\n输出: 4\n\n题目解析\n\n根据题目描述，由于加上了时间复杂度必须是 O(n)，并且空间复杂度为 O(1)的条件，因此不能用排序方法，也不能使用 map 数据结构。那么可以使用位操作的特性来解这个题。\n\n由异或运算的性质（相同为0，不同为1），那么出现两次的元素经过异或运算结果为0，那么数组中所有元素异或运算的结果就是剩下的唯一一个值了。\n```php\n    $arr=array(9,2,2,4,4);\n    function get_bin($a,$b){\n    \treturn $a^$b;\n    }\n    echo array_reduce($arr,'get_bin',0);//将数组中所有的值用回调函数进行迭代，获得的结果即是剩下的唯一值\n```\n\n**进阶版**\n\n将原题的1个数出现一次改为2个不同的数出现一次，其他条件保持不变\n\n首先通过上面的步骤获得2个不同的数的异或结果，由异或的性质得到这两个数至少有一位是不同的，即一个为0，一个为1。\n\n根据异或的性质，任何一个数字异或他自己都等于0，得到这个数字二进制形式中任意一个为1的位都是我们要找的那个位数。\n\n再然后，以这一位是 1 还是 0 为标准，将数组的 n 个元素分成两部分。\n\n将这一位为 0 的所有元素做异或，得出的数就是只出现一次的数中的一个\n\n将这一位为 1 的所有元素做异或，得出的数就是只出现一次的数中的另一个。\n\n这样就解出题目。忽略寻找不同位的过程，总共遍历数组两次，时间复杂度为 O(n)。 \n```php\n    $arr=array(899,2,2,4,4,100);\n    function get_bin($a,$b){\n    \treturn $a^$b;\n    }\n    \n    echo '两个不同数的异或结果为：'.array_reduce($arr,'get_bin',0).\"\\r\\n\";//得到两个不同数的异或结果为3\n    echo '两个不同数的异或结果的二进制数为：'.decbin(3).PHP_EOL;//将3转换为二进制为11，即得到这两个不同数的二进制位的第1位和第2位都不同\n    //我们取第一位不同，那么将原数组中所有二进制第1位为1的分为一组，将第1位为0的分为第二组，再将两个数组进行第一步中的迭代就是我们想要获得的两个不同数\n\n\n    function bin_test($num,$wei){//判断二进制某位是否为1 //这里用到按位与的性质 全1为1 否则为0\n\t    $b=1<<($wei-1);//将数字1位移至目标位数//也可将目标数右移至第一位\n\t    if(($b & $num) >0){//按位与 全1为1 否则为0\n\t    \treturn true;\n\t    }else{\n\t    \treturn false;\n\t    }\n    }\n    foreach ($arr as $value){\n\t    if(bin_test($value,1)){\n\t    \t$arr1[]=$value;\n\t    }else{\n\t    \t$arr2[]=$value;\n\t    }\n    }\n    \n    echo '其中一个数为：'.array_reduce($arr1,'get_bin',0).PHP_EOL;\n    echo '另一个数为：'.array_reduce($arr2,'get_bin',0).PHP_EOL;\n```","slug":"php-question1","published":1,"updated":"2021-11-25T03:28:13.080Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwn8bfy0001ttwnfetvt96af","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p><strong>题目描述</strong></p>\n<p>给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。</p>\n<p>说明：<br>你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？</p>\n<p>示例 1:<br>输入: [2,2,1]<br>输出: 1</p>\n<p>示例 2:<br>输入: [4,1,2,1,2]<br>输出: 4</p>\n<p>题目解析</p>\n<p>根据题目描述，由于加上了时间复杂度必须是 O(n)，并且空间复杂度为 O(1)的条件，因此不能用排序方法，也不能使用 map 数据结构。那么可以使用位操作的特性来解这个题。</p>\n<p>由异或运算的性质（相同为0，不同为1），那么出现两次的元素经过异或运算结果为0，那么数组中所有元素异或运算的结果就是剩下的唯一一个值了。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$arr</span>=<span class=\"keyword\">array</span>(<span class=\"number\">9</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get_bin</span>(<span class=\"params\"><span class=\"variable\">$a</span>,<span class=\"variable\">$b</span></span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"variable\">$a</span>^<span class=\"variable\">$b</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> array_reduce(<span class=\"variable\">$arr</span>,<span class=\"string\">&#x27;get_bin&#x27;</span>,<span class=\"number\">0</span>);<span class=\"comment\">//将数组中所有的值用回调函数进行迭代，获得的结果即是剩下的唯一值</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>进阶版</strong></p>\n<p>将原题的1个数出现一次改为2个不同的数出现一次，其他条件保持不变</p>\n<p>首先通过上面的步骤获得2个不同的数的异或结果，由异或的性质得到这两个数至少有一位是不同的，即一个为0，一个为1。</p>\n<p>根据异或的性质，任何一个数字异或他自己都等于0，得到这个数字二进制形式中任意一个为1的位都是我们要找的那个位数。</p>\n<p>再然后，以这一位是 1 还是 0 为标准，将数组的 n 个元素分成两部分。</p>\n<p>将这一位为 0 的所有元素做异或，得出的数就是只出现一次的数中的一个</p>\n<p>将这一位为 1 的所有元素做异或，得出的数就是只出现一次的数中的另一个。</p>\n<p>这样就解出题目。忽略寻找不同位的过程，总共遍历数组两次，时间复杂度为 O(n)。 </p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$arr</span>=<span class=\"keyword\">array</span>(<span class=\"number\">899</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">100</span>);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get_bin</span>(<span class=\"params\"><span class=\"variable\">$a</span>,<span class=\"variable\">$b</span></span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"variable\">$a</span>^<span class=\"variable\">$b</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;两个不同数的异或结果为：&#x27;</span>.array_reduce(<span class=\"variable\">$arr</span>,<span class=\"string\">&#x27;get_bin&#x27;</span>,<span class=\"number\">0</span>).<span class=\"string\">&quot;\\r\\n&quot;</span>;<span class=\"comment\">//得到两个不同数的异或结果为3</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;两个不同数的异或结果的二进制数为：&#x27;</span>.decbin(<span class=\"number\">3</span>).PHP_EOL;<span class=\"comment\">//将3转换为二进制为11，即得到这两个不同数的二进制位的第1位和第2位都不同</span></span><br><span class=\"line\"><span class=\"comment\">//我们取第一位不同，那么将原数组中所有二进制第1位为1的分为一组，将第1位为0的分为第二组，再将两个数组进行第一步中的迭代就是我们想要获得的两个不同数</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bin_test</span>(<span class=\"params\"><span class=\"variable\">$num</span>,<span class=\"variable\">$wei</span></span>)</span>&#123;<span class=\"comment\">//判断二进制某位是否为1 //这里用到按位与的性质 全1为1 否则为0</span></span><br><span class=\"line\"> <span class=\"variable\">$b</span>=<span class=\"number\">1</span>&lt;&lt;(<span class=\"variable\">$wei</span>-<span class=\"number\">1</span>);<span class=\"comment\">//将数字1位移至目标位数//也可将目标数右移至第一位</span></span><br><span class=\"line\"> <span class=\"keyword\">if</span>((<span class=\"variable\">$b</span> &amp; <span class=\"variable\">$num</span>) &gt;<span class=\"number\">0</span>)&#123;<span class=\"comment\">//按位与 全1为1 否则为0</span></span><br><span class=\"line\"> \t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\"> &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\"> \t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">foreach</span> (<span class=\"variable\">$arr</span> <span class=\"keyword\">as</span> <span class=\"variable\">$value</span>)&#123;</span><br><span class=\"line\"> <span class=\"keyword\">if</span>(bin_test(<span class=\"variable\">$value</span>,<span class=\"number\">1</span>))&#123;</span><br><span class=\"line\"> \t<span class=\"variable\">$arr1</span>[]=<span class=\"variable\">$value</span>;</span><br><span class=\"line\"> &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\"> \t<span class=\"variable\">$arr2</span>[]=<span class=\"variable\">$value</span>;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;其中一个数为：&#x27;</span>.array_reduce(<span class=\"variable\">$arr1</span>,<span class=\"string\">&#x27;get_bin&#x27;</span>,<span class=\"number\">0</span>).PHP_EOL;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;另一个数为：&#x27;</span>.array_reduce(<span class=\"variable\">$arr2</span>,<span class=\"string\">&#x27;get_bin&#x27;</span>,<span class=\"number\">0</span>).PHP_EOL;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p><strong>题目描述</strong></p>\n<p>给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。</p>\n<p>说明：<br>你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？</p>\n<p>示例 1:<br>输入: [2,2,1]<br>输出: 1</p>\n<p>示例 2:<br>输入: [4,1,2,1,2]<br>输出: 4</p>\n<p>题目解析</p>\n<p>根据题目描述，由于加上了时间复杂度必须是 O(n)，并且空间复杂度为 O(1)的条件，因此不能用排序方法，也不能使用 map 数据结构。那么可以使用位操作的特性来解这个题。</p>\n<p>由异或运算的性质（相同为0，不同为1），那么出现两次的元素经过异或运算结果为0，那么数组中所有元素异或运算的结果就是剩下的唯一一个值了。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$arr</span>=<span class=\"keyword\">array</span>(<span class=\"number\">9</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get_bin</span>(<span class=\"params\"><span class=\"variable\">$a</span>,<span class=\"variable\">$b</span></span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"variable\">$a</span>^<span class=\"variable\">$b</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> array_reduce(<span class=\"variable\">$arr</span>,<span class=\"string\">&#x27;get_bin&#x27;</span>,<span class=\"number\">0</span>);<span class=\"comment\">//将数组中所有的值用回调函数进行迭代，获得的结果即是剩下的唯一值</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>进阶版</strong></p>\n<p>将原题的1个数出现一次改为2个不同的数出现一次，其他条件保持不变</p>\n<p>首先通过上面的步骤获得2个不同的数的异或结果，由异或的性质得到这两个数至少有一位是不同的，即一个为0，一个为1。</p>\n<p>根据异或的性质，任何一个数字异或他自己都等于0，得到这个数字二进制形式中任意一个为1的位都是我们要找的那个位数。</p>\n<p>再然后，以这一位是 1 还是 0 为标准，将数组的 n 个元素分成两部分。</p>\n<p>将这一位为 0 的所有元素做异或，得出的数就是只出现一次的数中的一个</p>\n<p>将这一位为 1 的所有元素做异或，得出的数就是只出现一次的数中的另一个。</p>\n<p>这样就解出题目。忽略寻找不同位的过程，总共遍历数组两次，时间复杂度为 O(n)。 </p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$arr</span>=<span class=\"keyword\">array</span>(<span class=\"number\">899</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">100</span>);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get_bin</span>(<span class=\"params\"><span class=\"variable\">$a</span>,<span class=\"variable\">$b</span></span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"variable\">$a</span>^<span class=\"variable\">$b</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;两个不同数的异或结果为：&#x27;</span>.array_reduce(<span class=\"variable\">$arr</span>,<span class=\"string\">&#x27;get_bin&#x27;</span>,<span class=\"number\">0</span>).<span class=\"string\">&quot;\\r\\n&quot;</span>;<span class=\"comment\">//得到两个不同数的异或结果为3</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;两个不同数的异或结果的二进制数为：&#x27;</span>.decbin(<span class=\"number\">3</span>).PHP_EOL;<span class=\"comment\">//将3转换为二进制为11，即得到这两个不同数的二进制位的第1位和第2位都不同</span></span><br><span class=\"line\"><span class=\"comment\">//我们取第一位不同，那么将原数组中所有二进制第1位为1的分为一组，将第1位为0的分为第二组，再将两个数组进行第一步中的迭代就是我们想要获得的两个不同数</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bin_test</span>(<span class=\"params\"><span class=\"variable\">$num</span>,<span class=\"variable\">$wei</span></span>)</span>&#123;<span class=\"comment\">//判断二进制某位是否为1 //这里用到按位与的性质 全1为1 否则为0</span></span><br><span class=\"line\"> <span class=\"variable\">$b</span>=<span class=\"number\">1</span>&lt;&lt;(<span class=\"variable\">$wei</span>-<span class=\"number\">1</span>);<span class=\"comment\">//将数字1位移至目标位数//也可将目标数右移至第一位</span></span><br><span class=\"line\"> <span class=\"keyword\">if</span>((<span class=\"variable\">$b</span> &amp; <span class=\"variable\">$num</span>) &gt;<span class=\"number\">0</span>)&#123;<span class=\"comment\">//按位与 全1为1 否则为0</span></span><br><span class=\"line\"> \t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\"> &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\"> \t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">foreach</span> (<span class=\"variable\">$arr</span> <span class=\"keyword\">as</span> <span class=\"variable\">$value</span>)&#123;</span><br><span class=\"line\"> <span class=\"keyword\">if</span>(bin_test(<span class=\"variable\">$value</span>,<span class=\"number\">1</span>))&#123;</span><br><span class=\"line\"> \t<span class=\"variable\">$arr1</span>[]=<span class=\"variable\">$value</span>;</span><br><span class=\"line\"> &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\"> \t<span class=\"variable\">$arr2</span>[]=<span class=\"variable\">$value</span>;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;其中一个数为：&#x27;</span>.array_reduce(<span class=\"variable\">$arr1</span>,<span class=\"string\">&#x27;get_bin&#x27;</span>,<span class=\"number\">0</span>).PHP_EOL;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;另一个数为：&#x27;</span>.array_reduce(<span class=\"variable\">$arr2</span>,<span class=\"string\">&#x27;get_bin&#x27;</span>,<span class=\"number\">0</span>).PHP_EOL;</span><br></pre></td></tr></table></figure>"},{"title":"php-队列和栈","date":"2018-08-23T12:02:29.000Z","_content":"PHP里面没有栈和队列，但是可以通过数组来模拟，主要用到以下几个函数：\n```php\n    array_push   数组末尾增加一个元素 \n    \n    array_pop　　数组末尾删除一个元素 \n    \n    array_shift　数组头部删除一个元素\n```\n先看栈：\n```php\n    <?php\n    \n     class Stack{\n     public static $dataInfo =  array();\n     public static $theMax= 10;\n     public static $length=0;\n    // public static $stackInfo;\n\n     public function addData($data){\n         if(self::$length >= self::$theMax){\n             return false;\n         }else{\n           array_push(self::$dataInfo,$data);\n           self::$length ++; \n         }\n         \n     }\n     public function outData(){\n         if(self::$length<=0 ){\n             \n             return false;\n         }else{\n            $data = array_pop(self::$dataInfo);\n            self::$length --;\n             return $data;\n         }\n         \n         \n     }\n     \n     public function getAll(){\n         foreach (self::$dataInfo as $value) {\n             // code..\n             print_r($value);\n        }\n    }\n     \n     }\n    $a = new Stack();\n    $a->addData(1);\n    $a->addData(3);\n    $a->addData(5);\n    $a->getAll();\n    print_r($a->outData());\n\n\n    ?>\n```\n同理，队列也是一样的 只不过可以把array_pop()换成array_shift()。\n栈和队列的区别在于前者是先入后出，像在杯子里放东西一样，先放进去的最后才能拿出来。队列就像排队吃饭一样，先进先出。","source":"_posts/php-queue.md","raw":"---\ntitle: php-队列和栈\ndate: 2018-08-23 20:02:29\ncategories: PHP\ntags:\n\t- 队列\n\t- 栈\n---\nPHP里面没有栈和队列，但是可以通过数组来模拟，主要用到以下几个函数：\n```php\n    array_push   数组末尾增加一个元素 \n    \n    array_pop　　数组末尾删除一个元素 \n    \n    array_shift　数组头部删除一个元素\n```\n先看栈：\n```php\n    <?php\n    \n     class Stack{\n     public static $dataInfo =  array();\n     public static $theMax= 10;\n     public static $length=0;\n    // public static $stackInfo;\n\n     public function addData($data){\n         if(self::$length >= self::$theMax){\n             return false;\n         }else{\n           array_push(self::$dataInfo,$data);\n           self::$length ++; \n         }\n         \n     }\n     public function outData(){\n         if(self::$length<=0 ){\n             \n             return false;\n         }else{\n            $data = array_pop(self::$dataInfo);\n            self::$length --;\n             return $data;\n         }\n         \n         \n     }\n     \n     public function getAll(){\n         foreach (self::$dataInfo as $value) {\n             // code..\n             print_r($value);\n        }\n    }\n     \n     }\n    $a = new Stack();\n    $a->addData(1);\n    $a->addData(3);\n    $a->addData(5);\n    $a->getAll();\n    print_r($a->outData());\n\n\n    ?>\n```\n同理，队列也是一样的 只不过可以把array_pop()换成array_shift()。\n栈和队列的区别在于前者是先入后出，像在杯子里放东西一样，先放进去的最后才能拿出来。队列就像排队吃饭一样，先进先出。","slug":"php-queue","published":1,"updated":"2021-11-25T03:28:13.080Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwn8bfy1001wtwnf6xu8exwq","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>PHP里面没有栈和队列，但是可以通过数组来模拟，主要用到以下几个函数：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">array_push   数组末尾增加一个元素 </span><br><span class=\"line\"></span><br><span class=\"line\">array_pop　　数组末尾删除一个元素 </span><br><span class=\"line\"></span><br><span class=\"line\">array_shift　数组头部删除一个元素</span><br></pre></td></tr></table></figure>\n<p>先看栈：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Stack</span></span>&#123;</span><br><span class=\"line\"> <span class=\"keyword\">public</span> <span class=\"built_in\">static</span> <span class=\"variable\">$dataInfo</span> =  <span class=\"keyword\">array</span>();</span><br><span class=\"line\"> <span class=\"keyword\">public</span> <span class=\"built_in\">static</span> <span class=\"variable\">$theMax</span>= <span class=\"number\">10</span>;</span><br><span class=\"line\"> <span class=\"keyword\">public</span> <span class=\"built_in\">static</span> <span class=\"variable\">$length</span>=<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"comment\">// public static $stackInfo;</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">addData</span>(<span class=\"params\"><span class=\"variable\">$data</span></span>)</span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">if</span>(<span class=\"built_in\">self</span>::<span class=\"variable\">$length</span> &gt;= <span class=\"built_in\">self</span>::<span class=\"variable\">$theMax</span>)&#123;</span><br><span class=\"line\">         <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">     &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">       array_push(<span class=\"built_in\">self</span>::<span class=\"variable\">$dataInfo</span>,<span class=\"variable\">$data</span>);</span><br><span class=\"line\">       <span class=\"built_in\">self</span>::<span class=\"variable\">$length</span> ++; </span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">outData</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">if</span>(<span class=\"built_in\">self</span>::<span class=\"variable\">$length</span>&lt;=<span class=\"number\">0</span> )&#123;</span><br><span class=\"line\">         </span><br><span class=\"line\">         <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">     &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$data</span> = array_pop(<span class=\"built_in\">self</span>::<span class=\"variable\">$dataInfo</span>);</span><br><span class=\"line\">        <span class=\"built_in\">self</span>::<span class=\"variable\">$length</span> --;</span><br><span class=\"line\">         <span class=\"keyword\">return</span> <span class=\"variable\">$data</span>;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">     </span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getAll</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">foreach</span> (<span class=\"built_in\">self</span>::<span class=\"variable\">$dataInfo</span> <span class=\"keyword\">as</span> <span class=\"variable\">$value</span>) &#123;</span><br><span class=\"line\">         <span class=\"comment\">// code..</span></span><br><span class=\"line\">         print_r(<span class=\"variable\">$value</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"><span class=\"variable\">$a</span> = <span class=\"keyword\">new</span> Stack();</span><br><span class=\"line\"><span class=\"variable\">$a</span>-&gt;addData(<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"variable\">$a</span>-&gt;addData(<span class=\"number\">3</span>);</span><br><span class=\"line\"><span class=\"variable\">$a</span>-&gt;addData(<span class=\"number\">5</span>);</span><br><span class=\"line\"><span class=\"variable\">$a</span>-&gt;getAll();</span><br><span class=\"line\">print_r(<span class=\"variable\">$a</span>-&gt;outData());</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>同理，队列也是一样的 只不过可以把array_pop()换成array_shift()。<br>栈和队列的区别在于前者是先入后出，像在杯子里放东西一样，先放进去的最后才能拿出来。队列就像排队吃饭一样，先进先出。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>PHP里面没有栈和队列，但是可以通过数组来模拟，主要用到以下几个函数：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">array_push   数组末尾增加一个元素 </span><br><span class=\"line\"></span><br><span class=\"line\">array_pop　　数组末尾删除一个元素 </span><br><span class=\"line\"></span><br><span class=\"line\">array_shift　数组头部删除一个元素</span><br></pre></td></tr></table></figure>\n<p>先看栈：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Stack</span></span>&#123;</span><br><span class=\"line\"> <span class=\"keyword\">public</span> <span class=\"built_in\">static</span> <span class=\"variable\">$dataInfo</span> =  <span class=\"keyword\">array</span>();</span><br><span class=\"line\"> <span class=\"keyword\">public</span> <span class=\"built_in\">static</span> <span class=\"variable\">$theMax</span>= <span class=\"number\">10</span>;</span><br><span class=\"line\"> <span class=\"keyword\">public</span> <span class=\"built_in\">static</span> <span class=\"variable\">$length</span>=<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"comment\">// public static $stackInfo;</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">addData</span>(<span class=\"params\"><span class=\"variable\">$data</span></span>)</span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">if</span>(<span class=\"built_in\">self</span>::<span class=\"variable\">$length</span> &gt;= <span class=\"built_in\">self</span>::<span class=\"variable\">$theMax</span>)&#123;</span><br><span class=\"line\">         <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">     &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">       array_push(<span class=\"built_in\">self</span>::<span class=\"variable\">$dataInfo</span>,<span class=\"variable\">$data</span>);</span><br><span class=\"line\">       <span class=\"built_in\">self</span>::<span class=\"variable\">$length</span> ++; </span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">outData</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">if</span>(<span class=\"built_in\">self</span>::<span class=\"variable\">$length</span>&lt;=<span class=\"number\">0</span> )&#123;</span><br><span class=\"line\">         </span><br><span class=\"line\">         <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">     &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$data</span> = array_pop(<span class=\"built_in\">self</span>::<span class=\"variable\">$dataInfo</span>);</span><br><span class=\"line\">        <span class=\"built_in\">self</span>::<span class=\"variable\">$length</span> --;</span><br><span class=\"line\">         <span class=\"keyword\">return</span> <span class=\"variable\">$data</span>;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">     </span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getAll</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">foreach</span> (<span class=\"built_in\">self</span>::<span class=\"variable\">$dataInfo</span> <span class=\"keyword\">as</span> <span class=\"variable\">$value</span>) &#123;</span><br><span class=\"line\">         <span class=\"comment\">// code..</span></span><br><span class=\"line\">         print_r(<span class=\"variable\">$value</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"><span class=\"variable\">$a</span> = <span class=\"keyword\">new</span> Stack();</span><br><span class=\"line\"><span class=\"variable\">$a</span>-&gt;addData(<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"variable\">$a</span>-&gt;addData(<span class=\"number\">3</span>);</span><br><span class=\"line\"><span class=\"variable\">$a</span>-&gt;addData(<span class=\"number\">5</span>);</span><br><span class=\"line\"><span class=\"variable\">$a</span>-&gt;getAll();</span><br><span class=\"line\">print_r(<span class=\"variable\">$a</span>-&gt;outData());</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>同理，队列也是一样的 只不过可以把array_pop()换成array_shift()。<br>栈和队列的区别在于前者是先入后出，像在杯子里放东西一样，先放进去的最后才能拿出来。队列就像排队吃饭一样，先进先出。</p>\n"},{"title":"php算法之二分查找","date":"2018-11-24T06:42:47.000Z","_content":"**首先是二分查找算法的前提：**\n\n1.必须是索引数组，即键为数字\n\n2.必须是已经排好序的数字，即键从小到大或者从大到小排序\n```php    \n    function bin_sch($array,  $low, $high, $k){\n    if ( $low <= $high){//判断开始点是否小于等于终点\n        $mid =  intval(($low+$high)/2 );//向下取中点值\n        if ($array[$mid] ==  $k){//如果刚好等于中点值则返回\n            return $mid;\n        }elseif ( $k < $array[$mid]){//若目标值小于中点值则从起点值到中点值-1范围内继续递归查找直到找到目标值的下标\n            return  bin_sch($array, $low,  $mid-1, $k);\n        }else{//若目标值大于中点值则从中点值+1到查找终点范围内继续递归查找直到找到目标值的下标\n            return  bin_sch($array, $mid+ 1, $high, $k);\n        }\n    }\n    return -1;\n    }\n```\n$array是目标数组,$low为查找起点,$high为查找终点，$k为目标值\n\n比如在100里面找到23的位置\n首先将100/2得到两边为大于50和小于50的两部分，再判断23是小于50，就继续在小于50的范围查，继续将50/2再与23进行比较，直到等于23取其位置（键）即可。\n\n因为二分查找是将目标数一直除以2进行查找，取目标数要在最后一次查找才能找出，那么有关二分法查找算法的效率（性能）问题的一点说明：\n\n**1000个数据，约10次找出；2的10次方等于1024**\n\n**100万个数据，约20次找出；2的20次方等于1048576**\n\n**10亿个数据，约30次找出；**  **以此类推..**\n\n**40亿个数据，约32次找出。**   **..**","source":"_posts/phpalgorithm-erfen.md","raw":"---\ntitle: php算法之二分查找\ndate: 2018-11-24 14:42:47\ncategories: PHP\ntags:\n\t算法\n---\n**首先是二分查找算法的前提：**\n\n1.必须是索引数组，即键为数字\n\n2.必须是已经排好序的数字，即键从小到大或者从大到小排序\n```php    \n    function bin_sch($array,  $low, $high, $k){\n    if ( $low <= $high){//判断开始点是否小于等于终点\n        $mid =  intval(($low+$high)/2 );//向下取中点值\n        if ($array[$mid] ==  $k){//如果刚好等于中点值则返回\n            return $mid;\n        }elseif ( $k < $array[$mid]){//若目标值小于中点值则从起点值到中点值-1范围内继续递归查找直到找到目标值的下标\n            return  bin_sch($array, $low,  $mid-1, $k);\n        }else{//若目标值大于中点值则从中点值+1到查找终点范围内继续递归查找直到找到目标值的下标\n            return  bin_sch($array, $mid+ 1, $high, $k);\n        }\n    }\n    return -1;\n    }\n```\n$array是目标数组,$low为查找起点,$high为查找终点，$k为目标值\n\n比如在100里面找到23的位置\n首先将100/2得到两边为大于50和小于50的两部分，再判断23是小于50，就继续在小于50的范围查，继续将50/2再与23进行比较，直到等于23取其位置（键）即可。\n\n因为二分查找是将目标数一直除以2进行查找，取目标数要在最后一次查找才能找出，那么有关二分法查找算法的效率（性能）问题的一点说明：\n\n**1000个数据，约10次找出；2的10次方等于1024**\n\n**100万个数据，约20次找出；2的20次方等于1048576**\n\n**10亿个数据，约30次找出；**  **以此类推..**\n\n**40亿个数据，约32次找出。**   **..**","slug":"phpalgorithm-erfen","published":1,"updated":"2021-11-25T03:28:13.081Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwn8bfy2001ztwnfeyc4b1t5","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p><strong>首先是二分查找算法的前提：</strong></p>\n<p>1.必须是索引数组，即键为数字</p>\n<p>2.必须是已经排好序的数字，即键从小到大或者从大到小排序</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bin_sch</span>(<span class=\"params\"><span class=\"variable\">$array</span>,  <span class=\"variable\">$low</span>, <span class=\"variable\">$high</span>, <span class=\"variable\">$k</span></span>)</span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">if</span> ( <span class=\"variable\">$low</span> &lt;= <span class=\"variable\">$high</span>)&#123;<span class=\"comment\">//判断开始点是否小于等于终点</span></span><br><span class=\"line\">    <span class=\"variable\">$mid</span> =  intval((<span class=\"variable\">$low</span>+<span class=\"variable\">$high</span>)/<span class=\"number\">2</span> );<span class=\"comment\">//向下取中点值</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable\">$array</span>[<span class=\"variable\">$mid</span>] ==  <span class=\"variable\">$k</span>)&#123;<span class=\"comment\">//如果刚好等于中点值则返回</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable\">$mid</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">elseif</span> ( <span class=\"variable\">$k</span> &lt; <span class=\"variable\">$array</span>[<span class=\"variable\">$mid</span>])&#123;<span class=\"comment\">//若目标值小于中点值则从起点值到中点值-1范围内继续递归查找直到找到目标值的下标</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span>  bin_sch(<span class=\"variable\">$array</span>, <span class=\"variable\">$low</span>,  <span class=\"variable\">$mid</span>-<span class=\"number\">1</span>, <span class=\"variable\">$k</span>);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;<span class=\"comment\">//若目标值大于中点值则从中点值+1到查找终点范围内继续递归查找直到找到目标值的下标</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span>  bin_sch(<span class=\"variable\">$array</span>, <span class=\"variable\">$mid</span>+ <span class=\"number\">1</span>, <span class=\"variable\">$high</span>, <span class=\"variable\">$k</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>$array是目标数组,$low为查找起点,$high为查找终点，$k为目标值</p>\n<p>比如在100里面找到23的位置<br>首先将100/2得到两边为大于50和小于50的两部分，再判断23是小于50，就继续在小于50的范围查，继续将50/2再与23进行比较，直到等于23取其位置（键）即可。</p>\n<p>因为二分查找是将目标数一直除以2进行查找，取目标数要在最后一次查找才能找出，那么有关二分法查找算法的效率（性能）问题的一点说明：</p>\n<p><strong>1000个数据，约10次找出；2的10次方等于1024</strong></p>\n<p><strong>100万个数据，约20次找出；2的20次方等于1048576</strong></p>\n<p><strong>10亿个数据，约30次找出；</strong>  <strong>以此类推..</strong></p>\n<p><strong>40亿个数据，约32次找出。</strong>   <strong>..</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>首先是二分查找算法的前提：</strong></p>\n<p>1.必须是索引数组，即键为数字</p>\n<p>2.必须是已经排好序的数字，即键从小到大或者从大到小排序</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bin_sch</span>(<span class=\"params\"><span class=\"variable\">$array</span>,  <span class=\"variable\">$low</span>, <span class=\"variable\">$high</span>, <span class=\"variable\">$k</span></span>)</span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">if</span> ( <span class=\"variable\">$low</span> &lt;= <span class=\"variable\">$high</span>)&#123;<span class=\"comment\">//判断开始点是否小于等于终点</span></span><br><span class=\"line\">    <span class=\"variable\">$mid</span> =  intval((<span class=\"variable\">$low</span>+<span class=\"variable\">$high</span>)/<span class=\"number\">2</span> );<span class=\"comment\">//向下取中点值</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable\">$array</span>[<span class=\"variable\">$mid</span>] ==  <span class=\"variable\">$k</span>)&#123;<span class=\"comment\">//如果刚好等于中点值则返回</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable\">$mid</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">elseif</span> ( <span class=\"variable\">$k</span> &lt; <span class=\"variable\">$array</span>[<span class=\"variable\">$mid</span>])&#123;<span class=\"comment\">//若目标值小于中点值则从起点值到中点值-1范围内继续递归查找直到找到目标值的下标</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span>  bin_sch(<span class=\"variable\">$array</span>, <span class=\"variable\">$low</span>,  <span class=\"variable\">$mid</span>-<span class=\"number\">1</span>, <span class=\"variable\">$k</span>);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;<span class=\"comment\">//若目标值大于中点值则从中点值+1到查找终点范围内继续递归查找直到找到目标值的下标</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span>  bin_sch(<span class=\"variable\">$array</span>, <span class=\"variable\">$mid</span>+ <span class=\"number\">1</span>, <span class=\"variable\">$high</span>, <span class=\"variable\">$k</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>$array是目标数组,$low为查找起点,$high为查找终点，$k为目标值</p>\n<p>比如在100里面找到23的位置<br>首先将100/2得到两边为大于50和小于50的两部分，再判断23是小于50，就继续在小于50的范围查，继续将50/2再与23进行比较，直到等于23取其位置（键）即可。</p>\n<p>因为二分查找是将目标数一直除以2进行查找，取目标数要在最后一次查找才能找出，那么有关二分法查找算法的效率（性能）问题的一点说明：</p>\n<p><strong>1000个数据，约10次找出；2的10次方等于1024</strong></p>\n<p><strong>100万个数据，约20次找出；2的20次方等于1048576</strong></p>\n<p><strong>10亿个数据，约30次找出；</strong>  <strong>以此类推..</strong></p>\n<p><strong>40亿个数据，约32次找出。</strong>   <strong>..</strong></p>\n"},{"title":"一些小问题将全部总结在这里","date":"2018-03-23T06:41:06.000Z","_content":"**1.使用TP3.2.3将项目部署到线上出现Undefined class constant 'MYSQL_ATTR_INIT_COMMAND'的情况**\n\n是因为php没有开启Mysqlnd扩展，php5以上版本已经在使用mysqlnd驱动而非mysql，至于mysqlnd可自行百度了解。且在php7则正式移除了mysql扩展。\n\n在使用phpinfo()打印php信息的时候并没有显示mysqlnd扩展\n```php\n    yum install php70w-mysqlnd\n    systemctl restart php-fpm\n```\n网上搜了很久，也折腾了很久，最后发现直接安装mysqlnd扩展，并重启php，再次打印phpinfo()将出现以下内容：\n\n![](https://i.imgur.com/KopF8jI.png)\n\n\n证明已经成功开启mysqlnd扩展，解决了之前出现的问题。\n\n**2.FQ**\n\n常用的有Lantern（蓝灯），还有火狐浏览器的一个好用的插件Hoxx VPN Proxy\n\n**3.关于wamp集成环境安装**\n\n当出现httpd.exe停止运行，一般根据提示是缺少msvcr110.dll文件，在百度上面下载即可。\n\n但是，划重点：\n\n当我一切vs版本库安装完之后，wamp集成环境也安装完成之后，出现了php-win停止运行。于是网上搜索了各种教程，装补丁，重装了n多次wamp还是没用。最后还好根据网友的文章尝试重新下载\nmsvcr110.dll的版本，因为我是64位系统，所以必须要安装64位系统的msvcr110.dll,其他相关的组件也必须是64位，如msvcp120.dll，装完之后问题解决。\n\n**4.关于云服务器项目外网访问**\n\n1. 确保云服务器上的安全组开启了80端口访问，即入站规则\n2. 确保云服务上的防火墙未阻止外网访问\n3. 当访问服务器ip地址超时，一般是访问的权限问题，当出现403错误，说明服务器是通的，问题出在wamp或其他集成环境的配置上\n\n**5.关于git的一些使用问题**\n```php\n    git pull origin master --allow-unrelated-histories 用于无法pull本地数据\n    \n    git config --global user.name \"imcsi\"  设置用户名和邮箱，不可与已存在账户重复\n    git config --global user.email \"imcsi@qq.com\"  \n    ssh-keygen -t rsa -C \"imcsi@qq.com\"  连续三次回车设置的密码即为空，并且创建了key\n```\n最后得到了两个文件：id_rsa和id_rsa.pub  将id_rsa里的key放在github或者码云的公钥里即可\n\n基本拉取更新提交步骤\ninit + remote add origin git地址 + pull origin master --allow-unrelated-histories + wq+ add + commit +push -u origin master\n\n**6.关于Laravel项目部署线上的问题**\n当出现public目录为空白时：\n```php\n    chmod -R 777 storage\n    chmod -R 777 vendor\n    chmod -R 777 bootstrap/cache 均为最高权限\n```\n当开启debug后，出现\n```php\n    RuntimeException No application encryption key has been specified\n```\n需要在config/app.php中配置\n```php\n    'key' => 'base64:4Q7FFSyR4YjEnA6bcEpOmeAYnUo*******',\n```\n为具体的值，因为一般的虚拟主机无法直接读取根目录.env中的配置，所以导致无法获取到key才提示的错误。\n```php\n    php artisan config:cache 为生成配置项的缓存，一般用于线上配置，本地因为修改比较频繁，所以一般不会使用\n    \n    php artisan config:clear 清除生成配置项的缓存\n```\n**7.将Laravel项目部署到虚拟主机根目录**\n\n首先需要在跟目录创建.htaccess文件，内容如下：\n```php\n    RewriteEngine on\n    # 把 www.test.com 改为你要绑定的域名.\n    RewriteCond %{HTTP_HOST} ^(www.)?www.test.com$\n    # 把 public改为要绑定的目录.\n    RewriteCond %{REQUEST_URI} !^/public/\n    # 不要改以下两行.\n    RewriteCond %{REQUEST_FILENAME} !-f\n    RewriteCond %{REQUEST_FILENAME} !-d\n    # 把 public改为要绑定的目录.\n    RewriteRule ^(.*)$ /public/$1\n    # 把 www.test.com 改为你要绑定的域名\n    # 把 public 改为要绑定的目录.\n    # public/ 后面是首页文件index.php, index.html……\n    RewriteCond %{HTTP_HOST} ^(www.)?www.test.com$\n    RewriteRule ^(/)?$ public/ [L]\n```\n**补充**\n由于在windows系统下对图片上传的地址创建了软连接，但是上传到linux系统的云虚拟主机和windows系统下使用的软连接不一样，所以在windows系统下创建的软连接（即快捷方式）无法生效。所以所有的图片资源都无法访问。\n\n在网上也没有找到确切的解决方法，最终还是使用.htaccess文件来重写url。\n由于`/storage/*.jpg`图片路径实际指向的是 `/storage/app/public/*.jpg` 。所以我们可以将图片软连接的地址重写到实际的文件路径地址：\n```php\n    RewriteRule ^(.*)/storage/(.*)$ /storage/app/public/$2 [L] \n```\n这样写就是匹配url地址storage目录下的文件指向实际的文件路径达到访问图片资源的目的。\n\nLaravel项目部署到云虚拟主机上的坑比较多，由于云虚拟主机仅能够上传项目文件，所以最好还是使用云服务器来搭建Laravel项目。\n\n**8.Laravel5微信扫码支付**\n\nLaravel5中关于支付方面，我们可以使用前人已经造好的轮子，如yansongda的微信及支付宝集成的支付扩展包，可参考[http://laravelacademy.org/post/7804.html](http://laravelacademy.org/post/7804.html \"http://laravelacademy.org/post/7804.html\")\n\n在使用的过程中我们可以简单获取到微信生成的二维码以及其他的返回参数\n```php\n\t\t\t$order = [\n\t\t\t\t'out_trade_no' => time() . rand(1000, 9999),\n\t\t\t\t'body' => '实例订单',\n\t\t\t\t'total_fee' => '1',\n\t\t\t];\n\t\t\t$result = Pay::wechat()->scan($order);\n```\n但是得到的二维码地址类似于`weixin://wxpay/bizpayurl?pr=jFEHom4`，所以我们需要使用到Laravel中的另一个扩展。Simple Qrcode，是 Bacon/BaconQrCode 针对 Laravel 框架的封装版本，用于在 Laravel 中为生成二维码提供接口。可参考[http://laravelacademy.org/post/2605.html](http://laravelacademy.org/post/2605.html \"http://laravelacademy.org/post/2605.html\")\n\n然而，生成的二维码是svg格式，并且嵌套了很多页面元素，使用起来很不方面。Laravel学院中有说明将svg转存为图片\n```php\n     QrCode::format('png')->generate('Hello,LaravelAcademy!',public_path('qrcodes/qrcode.png'));\n ```\n此种方法是要将图片先保存，但是作为扫码支付，如果每次生成二维码都要先保存二维码再显示会很浪费空间，即便之后能定时删除过期的二维码也会比较麻烦。  之后在Simple Qrcode 官方网站找到了可以直接将生成的图片显示而不需要保存：\n```php\n    <img src=\"data:image/png;base64, {!! base64_encode(QrCode::format('png')->size(100)->generate('Make me into an QrCode!')) !!} \">\n```\n直接使用 base64_encode 来将二进制数据直接显示成二维码图片，免去了保存图片的步骤。\n\n**9.Apache使用mod_expires模块缓存页面，加快访问速度**\n\n mod_expires可以有效减少网页资源文件的重复请求，让重复的用户对指定的页面请求结果都CACHE在本地，不需要向服务器发出请求。\n在使用之前,首先要确认一下”mod_expires”模组是否有启用.如果是自己安装Apache来搭建网站环境,我们可以透过编辑Apache的”httpd.conf”设定来开启mod_expires模块.\n\n打开http.conf搜索mod_expires,你可能会找到这么一行:\n```php\n    #LoadModule expires_module modules/mod_expires.so\n```\n去掉前面的#号，在最下面加上：\n```php\n    <IfModule mod_expires.c>\n    ExpiresActive On\n    ExpiresDefault A0\n    # 1 年\n    <FilesMatch “\\.(flv|ico|pdf|avi|mov|ppt|doc|mp3|wmv|wav)$”>\n    ExpiresDefault A9030400\n    </FilesMatch>\n    # 1 星期\n    <FilesMatch “\\.(jpg|jpeg|png|gif|swf)$”>\n    ExpiresDefault A604800\n    </FilesMatch>\n    # 3 小时\n    <FilesMatch “\\.(txt|xml|js|css)$”>\n    ExpiresDefault A10800″\n    </FilesMatch>\n    </IfModule>\n```\n同时确定在wamp安装目录`E:\\wamp\\bin\\apache\\apache2.4.23\\modules` 下有mod_expires.so 这个模块文件。重启WAMP即可达到客户端缓存文件的目的。如果是虚拟主机，也可在根目录下设置.htaccess下加上以上内容。\nApache中php的配置文件并不是`E:\\wamp\\bin\\php\\php7.0.10`目录下的php.ini文件，而是phpForApache.ini文件。\n","source":"_posts/questions.md","raw":"---\ntitle: 一些小问题将全部总结在这里\ndate: 2018-03-23 14:41:06\ncategories: PHP\ntags:\n\t- php\n\t- git\n\t- qrcode\n---\n**1.使用TP3.2.3将项目部署到线上出现Undefined class constant 'MYSQL_ATTR_INIT_COMMAND'的情况**\n\n是因为php没有开启Mysqlnd扩展，php5以上版本已经在使用mysqlnd驱动而非mysql，至于mysqlnd可自行百度了解。且在php7则正式移除了mysql扩展。\n\n在使用phpinfo()打印php信息的时候并没有显示mysqlnd扩展\n```php\n    yum install php70w-mysqlnd\n    systemctl restart php-fpm\n```\n网上搜了很久，也折腾了很久，最后发现直接安装mysqlnd扩展，并重启php，再次打印phpinfo()将出现以下内容：\n\n![](https://i.imgur.com/KopF8jI.png)\n\n\n证明已经成功开启mysqlnd扩展，解决了之前出现的问题。\n\n**2.FQ**\n\n常用的有Lantern（蓝灯），还有火狐浏览器的一个好用的插件Hoxx VPN Proxy\n\n**3.关于wamp集成环境安装**\n\n当出现httpd.exe停止运行，一般根据提示是缺少msvcr110.dll文件，在百度上面下载即可。\n\n但是，划重点：\n\n当我一切vs版本库安装完之后，wamp集成环境也安装完成之后，出现了php-win停止运行。于是网上搜索了各种教程，装补丁，重装了n多次wamp还是没用。最后还好根据网友的文章尝试重新下载\nmsvcr110.dll的版本，因为我是64位系统，所以必须要安装64位系统的msvcr110.dll,其他相关的组件也必须是64位，如msvcp120.dll，装完之后问题解决。\n\n**4.关于云服务器项目外网访问**\n\n1. 确保云服务器上的安全组开启了80端口访问，即入站规则\n2. 确保云服务上的防火墙未阻止外网访问\n3. 当访问服务器ip地址超时，一般是访问的权限问题，当出现403错误，说明服务器是通的，问题出在wamp或其他集成环境的配置上\n\n**5.关于git的一些使用问题**\n```php\n    git pull origin master --allow-unrelated-histories 用于无法pull本地数据\n    \n    git config --global user.name \"imcsi\"  设置用户名和邮箱，不可与已存在账户重复\n    git config --global user.email \"imcsi@qq.com\"  \n    ssh-keygen -t rsa -C \"imcsi@qq.com\"  连续三次回车设置的密码即为空，并且创建了key\n```\n最后得到了两个文件：id_rsa和id_rsa.pub  将id_rsa里的key放在github或者码云的公钥里即可\n\n基本拉取更新提交步骤\ninit + remote add origin git地址 + pull origin master --allow-unrelated-histories + wq+ add + commit +push -u origin master\n\n**6.关于Laravel项目部署线上的问题**\n当出现public目录为空白时：\n```php\n    chmod -R 777 storage\n    chmod -R 777 vendor\n    chmod -R 777 bootstrap/cache 均为最高权限\n```\n当开启debug后，出现\n```php\n    RuntimeException No application encryption key has been specified\n```\n需要在config/app.php中配置\n```php\n    'key' => 'base64:4Q7FFSyR4YjEnA6bcEpOmeAYnUo*******',\n```\n为具体的值，因为一般的虚拟主机无法直接读取根目录.env中的配置，所以导致无法获取到key才提示的错误。\n```php\n    php artisan config:cache 为生成配置项的缓存，一般用于线上配置，本地因为修改比较频繁，所以一般不会使用\n    \n    php artisan config:clear 清除生成配置项的缓存\n```\n**7.将Laravel项目部署到虚拟主机根目录**\n\n首先需要在跟目录创建.htaccess文件，内容如下：\n```php\n    RewriteEngine on\n    # 把 www.test.com 改为你要绑定的域名.\n    RewriteCond %{HTTP_HOST} ^(www.)?www.test.com$\n    # 把 public改为要绑定的目录.\n    RewriteCond %{REQUEST_URI} !^/public/\n    # 不要改以下两行.\n    RewriteCond %{REQUEST_FILENAME} !-f\n    RewriteCond %{REQUEST_FILENAME} !-d\n    # 把 public改为要绑定的目录.\n    RewriteRule ^(.*)$ /public/$1\n    # 把 www.test.com 改为你要绑定的域名\n    # 把 public 改为要绑定的目录.\n    # public/ 后面是首页文件index.php, index.html……\n    RewriteCond %{HTTP_HOST} ^(www.)?www.test.com$\n    RewriteRule ^(/)?$ public/ [L]\n```\n**补充**\n由于在windows系统下对图片上传的地址创建了软连接，但是上传到linux系统的云虚拟主机和windows系统下使用的软连接不一样，所以在windows系统下创建的软连接（即快捷方式）无法生效。所以所有的图片资源都无法访问。\n\n在网上也没有找到确切的解决方法，最终还是使用.htaccess文件来重写url。\n由于`/storage/*.jpg`图片路径实际指向的是 `/storage/app/public/*.jpg` 。所以我们可以将图片软连接的地址重写到实际的文件路径地址：\n```php\n    RewriteRule ^(.*)/storage/(.*)$ /storage/app/public/$2 [L] \n```\n这样写就是匹配url地址storage目录下的文件指向实际的文件路径达到访问图片资源的目的。\n\nLaravel项目部署到云虚拟主机上的坑比较多，由于云虚拟主机仅能够上传项目文件，所以最好还是使用云服务器来搭建Laravel项目。\n\n**8.Laravel5微信扫码支付**\n\nLaravel5中关于支付方面，我们可以使用前人已经造好的轮子，如yansongda的微信及支付宝集成的支付扩展包，可参考[http://laravelacademy.org/post/7804.html](http://laravelacademy.org/post/7804.html \"http://laravelacademy.org/post/7804.html\")\n\n在使用的过程中我们可以简单获取到微信生成的二维码以及其他的返回参数\n```php\n\t\t\t$order = [\n\t\t\t\t'out_trade_no' => time() . rand(1000, 9999),\n\t\t\t\t'body' => '实例订单',\n\t\t\t\t'total_fee' => '1',\n\t\t\t];\n\t\t\t$result = Pay::wechat()->scan($order);\n```\n但是得到的二维码地址类似于`weixin://wxpay/bizpayurl?pr=jFEHom4`，所以我们需要使用到Laravel中的另一个扩展。Simple Qrcode，是 Bacon/BaconQrCode 针对 Laravel 框架的封装版本，用于在 Laravel 中为生成二维码提供接口。可参考[http://laravelacademy.org/post/2605.html](http://laravelacademy.org/post/2605.html \"http://laravelacademy.org/post/2605.html\")\n\n然而，生成的二维码是svg格式，并且嵌套了很多页面元素，使用起来很不方面。Laravel学院中有说明将svg转存为图片\n```php\n     QrCode::format('png')->generate('Hello,LaravelAcademy!',public_path('qrcodes/qrcode.png'));\n ```\n此种方法是要将图片先保存，但是作为扫码支付，如果每次生成二维码都要先保存二维码再显示会很浪费空间，即便之后能定时删除过期的二维码也会比较麻烦。  之后在Simple Qrcode 官方网站找到了可以直接将生成的图片显示而不需要保存：\n```php\n    <img src=\"data:image/png;base64, {!! base64_encode(QrCode::format('png')->size(100)->generate('Make me into an QrCode!')) !!} \">\n```\n直接使用 base64_encode 来将二进制数据直接显示成二维码图片，免去了保存图片的步骤。\n\n**9.Apache使用mod_expires模块缓存页面，加快访问速度**\n\n mod_expires可以有效减少网页资源文件的重复请求，让重复的用户对指定的页面请求结果都CACHE在本地，不需要向服务器发出请求。\n在使用之前,首先要确认一下”mod_expires”模组是否有启用.如果是自己安装Apache来搭建网站环境,我们可以透过编辑Apache的”httpd.conf”设定来开启mod_expires模块.\n\n打开http.conf搜索mod_expires,你可能会找到这么一行:\n```php\n    #LoadModule expires_module modules/mod_expires.so\n```\n去掉前面的#号，在最下面加上：\n```php\n    <IfModule mod_expires.c>\n    ExpiresActive On\n    ExpiresDefault A0\n    # 1 年\n    <FilesMatch “\\.(flv|ico|pdf|avi|mov|ppt|doc|mp3|wmv|wav)$”>\n    ExpiresDefault A9030400\n    </FilesMatch>\n    # 1 星期\n    <FilesMatch “\\.(jpg|jpeg|png|gif|swf)$”>\n    ExpiresDefault A604800\n    </FilesMatch>\n    # 3 小时\n    <FilesMatch “\\.(txt|xml|js|css)$”>\n    ExpiresDefault A10800″\n    </FilesMatch>\n    </IfModule>\n```\n同时确定在wamp安装目录`E:\\wamp\\bin\\apache\\apache2.4.23\\modules` 下有mod_expires.so 这个模块文件。重启WAMP即可达到客户端缓存文件的目的。如果是虚拟主机，也可在根目录下设置.htaccess下加上以上内容。\nApache中php的配置文件并不是`E:\\wamp\\bin\\php\\php7.0.10`目录下的php.ini文件，而是phpForApache.ini文件。\n","slug":"questions","published":1,"updated":"2021-11-25T03:28:13.081Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwn8bfyh003mtwnfbn7209al","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p><strong>1.使用TP3.2.3将项目部署到线上出现Undefined class constant ‘MYSQL_ATTR_INIT_COMMAND’的情况</strong></p>\n<p>是因为php没有开启Mysqlnd扩展，php5以上版本已经在使用mysqlnd驱动而非mysql，至于mysqlnd可自行百度了解。且在php7则正式移除了mysql扩展。</p>\n<p>在使用phpinfo()打印php信息的时候并没有显示mysqlnd扩展</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install php70w-mysqlnd</span><br><span class=\"line\">systemctl restart php-fpm</span><br></pre></td></tr></table></figure>\n<p>网上搜了很久，也折腾了很久，最后发现直接安装mysqlnd扩展，并重启php，再次打印phpinfo()将出现以下内容：</p>\n<p><img src=\"https://i.imgur.com/KopF8jI.png\"></p>\n<p>证明已经成功开启mysqlnd扩展，解决了之前出现的问题。</p>\n<p><strong>2.FQ</strong></p>\n<p>常用的有Lantern（蓝灯），还有火狐浏览器的一个好用的插件Hoxx VPN Proxy</p>\n<p><strong>3.关于wamp集成环境安装</strong></p>\n<p>当出现httpd.exe停止运行，一般根据提示是缺少msvcr110.dll文件，在百度上面下载即可。</p>\n<p>但是，划重点：</p>\n<p>当我一切vs版本库安装完之后，wamp集成环境也安装完成之后，出现了php-win停止运行。于是网上搜索了各种教程，装补丁，重装了n多次wamp还是没用。最后还好根据网友的文章尝试重新下载<br>msvcr110.dll的版本，因为我是64位系统，所以必须要安装64位系统的msvcr110.dll,其他相关的组件也必须是64位，如msvcp120.dll，装完之后问题解决。</p>\n<p><strong>4.关于云服务器项目外网访问</strong></p>\n<ol>\n<li>确保云服务器上的安全组开启了80端口访问，即入站规则</li>\n<li>确保云服务上的防火墙未阻止外网访问</li>\n<li>当访问服务器ip地址超时，一般是访问的权限问题，当出现403错误，说明服务器是通的，问题出在wamp或其他集成环境的配置上</li>\n</ol>\n<p><strong>5.关于git的一些使用问题</strong></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull origin master --allow-unrelated-histories 用于无法pull本地数据</span><br><span class=\"line\"></span><br><span class=\"line\">git config --<span class=\"keyword\">global</span> user.name <span class=\"string\">&quot;imcsi&quot;</span>  设置用户名和邮箱，不可与已存在账户重复</span><br><span class=\"line\">git config --<span class=\"keyword\">global</span> user.email <span class=\"string\">&quot;imcsi@qq.com&quot;</span>  </span><br><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">&quot;imcsi@qq.com&quot;</span>  连续三次回车设置的密码即为空，并且创建了key</span><br></pre></td></tr></table></figure>\n<p>最后得到了两个文件：id_rsa和id_rsa.pub  将id_rsa里的key放在github或者码云的公钥里即可</p>\n<p>基本拉取更新提交步骤<br>init + remote add origin git地址 + pull origin master –allow-unrelated-histories + wq+ add + commit +push -u origin master</p>\n<p><strong>6.关于Laravel项目部署线上的问题</strong><br>当出现public目录为空白时：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod -R <span class=\"number\">777</span> storage</span><br><span class=\"line\">chmod -R <span class=\"number\">777</span> vendor</span><br><span class=\"line\">chmod -R <span class=\"number\">777</span> bootstrap/cache 均为最高权限</span><br></pre></td></tr></table></figure>\n<p>当开启debug后，出现</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">RuntimeException</span> No application encryption key has been specified</span><br></pre></td></tr></table></figure>\n<p>需要在config/app.php中配置</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;key&#x27;</span> =&gt; <span class=\"string\">&#x27;base64:4Q7FFSyR4YjEnA6bcEpOmeAYnUo*******&#x27;</span>,</span><br></pre></td></tr></table></figure>\n<p>为具体的值，因为一般的虚拟主机无法直接读取根目录.env中的配置，所以导致无法获取到key才提示的错误。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan config:cache 为生成配置项的缓存，一般用于线上配置，本地因为修改比较频繁，所以一般不会使用</span><br><span class=\"line\"></span><br><span class=\"line\">php artisan config:clear 清除生成配置项的缓存</span><br></pre></td></tr></table></figure>\n<p><strong>7.将Laravel项目部署到虚拟主机根目录</strong></p>\n<p>首先需要在跟目录创建.htaccess文件，内容如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RewriteEngine on</span><br><span class=\"line\"><span class=\"comment\"># 把 www.test.com 改为你要绑定的域名.</span></span><br><span class=\"line\">RewriteCond %&#123;HTTP_HOST&#125; ^(www.)?www.test.com$</span><br><span class=\"line\"><span class=\"comment\"># 把 public改为要绑定的目录.</span></span><br><span class=\"line\">RewriteCond %&#123;REQUEST_URI&#125; !^/<span class=\"keyword\">public</span>/</span><br><span class=\"line\"><span class=\"comment\"># 不要改以下两行.</span></span><br><span class=\"line\">RewriteCond %&#123;REQUEST_FILENAME&#125; !-f</span><br><span class=\"line\">RewriteCond %&#123;REQUEST_FILENAME&#125; !-d</span><br><span class=\"line\"><span class=\"comment\"># 把 public改为要绑定的目录.</span></span><br><span class=\"line\">RewriteRule ^(.*)$ /<span class=\"keyword\">public</span>/$<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"comment\"># 把 www.test.com 改为你要绑定的域名</span></span><br><span class=\"line\"><span class=\"comment\"># 把 public 改为要绑定的目录.</span></span><br><span class=\"line\"><span class=\"comment\"># public/ 后面是首页文件index.php, index.html……</span></span><br><span class=\"line\">RewriteCond %&#123;HTTP_HOST&#125; ^(www.)?www.test.com$</span><br><span class=\"line\">RewriteRule ^(/)?$ <span class=\"keyword\">public</span>/ [L]</span><br></pre></td></tr></table></figure>\n<p><strong>补充</strong><br>由于在windows系统下对图片上传的地址创建了软连接，但是上传到linux系统的云虚拟主机和windows系统下使用的软连接不一样，所以在windows系统下创建的软连接（即快捷方式）无法生效。所以所有的图片资源都无法访问。</p>\n<p>在网上也没有找到确切的解决方法，最终还是使用.htaccess文件来重写url。<br>由于<code>/storage/*.jpg</code>图片路径实际指向的是 <code>/storage/app/public/*.jpg</code> 。所以我们可以将图片软连接的地址重写到实际的文件路径地址：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RewriteRule ^(.*)/storage/(.*)$ /storage/app/<span class=\"keyword\">public</span>/$<span class=\"number\">2</span> [L] </span><br></pre></td></tr></table></figure>\n<p>这样写就是匹配url地址storage目录下的文件指向实际的文件路径达到访问图片资源的目的。</p>\n<p>Laravel项目部署到云虚拟主机上的坑比较多，由于云虚拟主机仅能够上传项目文件，所以最好还是使用云服务器来搭建Laravel项目。</p>\n<p><strong>8.Laravel5微信扫码支付</strong></p>\n<p>Laravel5中关于支付方面，我们可以使用前人已经造好的轮子，如yansongda的微信及支付宝集成的支付扩展包，可参考<a href=\"http://laravelacademy.org/post/7804.html\" title=\"http://laravelacademy.org/post/7804.html\">http://laravelacademy.org/post/7804.html</a></p>\n<p>在使用的过程中我们可以简单获取到微信生成的二维码以及其他的返回参数</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$order</span> = [</span><br><span class=\"line\">\t<span class=\"string\">&#x27;out_trade_no&#x27;</span> =&gt; time() . rand(<span class=\"number\">1000</span>, <span class=\"number\">9999</span>),</span><br><span class=\"line\">\t<span class=\"string\">&#x27;body&#x27;</span> =&gt; <span class=\"string\">&#x27;实例订单&#x27;</span>,</span><br><span class=\"line\">\t<span class=\"string\">&#x27;total_fee&#x27;</span> =&gt; <span class=\"string\">&#x27;1&#x27;</span>,</span><br><span class=\"line\">];</span><br><span class=\"line\"><span class=\"variable\">$result</span> = Pay::wechat()-&gt;scan(<span class=\"variable\">$order</span>);</span><br></pre></td></tr></table></figure>\n<p>但是得到的二维码地址类似于<code>weixin://wxpay/bizpayurl?pr=jFEHom4</code>，所以我们需要使用到Laravel中的另一个扩展。Simple Qrcode，是 Bacon/BaconQrCode 针对 Laravel 框架的封装版本，用于在 Laravel 中为生成二维码提供接口。可参考<a href=\"http://laravelacademy.org/post/2605.html\" title=\"http://laravelacademy.org/post/2605.html\">http://laravelacademy.org/post/2605.html</a></p>\n<p>然而，生成的二维码是svg格式，并且嵌套了很多页面元素，使用起来很不方面。Laravel学院中有说明将svg转存为图片</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">QrCode::format(<span class=\"string\">&#x27;png&#x27;</span>)-&gt;generate(<span class=\"string\">&#x27;Hello,LaravelAcademy!&#x27;</span>,public_path(<span class=\"string\">&#x27;qrcodes/qrcode.png&#x27;</span>));</span><br></pre></td></tr></table></figure>\n<p>此种方法是要将图片先保存，但是作为扫码支付，如果每次生成二维码都要先保存二维码再显示会很浪费空间，即便之后能定时删除过期的二维码也会比较麻烦。  之后在Simple Qrcode 官方网站找到了可以直接将生成的图片显示而不需要保存：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img src=<span class=\"string\">&quot;data:image/png;base64, &#123;!! base64_encode(QrCode::format(&#x27;png&#x27;)-&gt;size(100)-&gt;generate(&#x27;Make me into an QrCode!&#x27;)) !!&#125; &quot;</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>直接使用 base64_encode 来将二进制数据直接显示成二维码图片，免去了保存图片的步骤。</p>\n<p><strong>9.Apache使用mod_expires模块缓存页面，加快访问速度</strong></p>\n<p> mod_expires可以有效减少网页资源文件的重复请求，让重复的用户对指定的页面请求结果都CACHE在本地，不需要向服务器发出请求。<br>在使用之前,首先要确认一下”mod_expires”模组是否有启用.如果是自己安装Apache来搭建网站环境,我们可以透过编辑Apache的”httpd.conf”设定来开启mod_expires模块.</p>\n<p>打开http.conf搜索mod_expires,你可能会找到这么一行:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#LoadModule expires_module modules/mod_expires.so</span></span><br></pre></td></tr></table></figure>\n<p>去掉前面的#号，在最下面加上：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;IfModule mod_expires.c&gt;</span><br><span class=\"line\">ExpiresActive On</span><br><span class=\"line\">ExpiresDefault A0</span><br><span class=\"line\"><span class=\"comment\"># 1 年</span></span><br><span class=\"line\">&lt;FilesMatch “\\.(flv|ico|pdf|avi|mov|ppt|doc|mp3|wmv|wav)$”&gt;</span><br><span class=\"line\">ExpiresDefault A9030400</span><br><span class=\"line\">&lt;/FilesMatch&gt;</span><br><span class=\"line\"><span class=\"comment\"># 1 星期</span></span><br><span class=\"line\">&lt;FilesMatch “\\.(jpg|jpeg|png|gif|swf)$”&gt;</span><br><span class=\"line\">ExpiresDefault A604800</span><br><span class=\"line\">&lt;/FilesMatch&gt;</span><br><span class=\"line\"><span class=\"comment\"># 3 小时</span></span><br><span class=\"line\">&lt;FilesMatch “\\.(txt|xml|js|css)$”&gt;</span><br><span class=\"line\">ExpiresDefault A10800″</span><br><span class=\"line\">&lt;/FilesMatch&gt;</span><br><span class=\"line\">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure>\n<p>同时确定在wamp安装目录<code>E:\\wamp\\bin\\apache\\apache2.4.23\\modules</code> 下有mod_expires.so 这个模块文件。重启WAMP即可达到客户端缓存文件的目的。如果是虚拟主机，也可在根目录下设置.htaccess下加上以上内容。<br>Apache中php的配置文件并不是<code>E:\\wamp\\bin\\php\\php7.0.10</code>目录下的php.ini文件，而是phpForApache.ini文件。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>1.使用TP3.2.3将项目部署到线上出现Undefined class constant ‘MYSQL_ATTR_INIT_COMMAND’的情况</strong></p>\n<p>是因为php没有开启Mysqlnd扩展，php5以上版本已经在使用mysqlnd驱动而非mysql，至于mysqlnd可自行百度了解。且在php7则正式移除了mysql扩展。</p>\n<p>在使用phpinfo()打印php信息的时候并没有显示mysqlnd扩展</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install php70w-mysqlnd</span><br><span class=\"line\">systemctl restart php-fpm</span><br></pre></td></tr></table></figure>\n<p>网上搜了很久，也折腾了很久，最后发现直接安装mysqlnd扩展，并重启php，再次打印phpinfo()将出现以下内容：</p>\n<p><img src=\"https://i.imgur.com/KopF8jI.png\"></p>\n<p>证明已经成功开启mysqlnd扩展，解决了之前出现的问题。</p>\n<p><strong>2.FQ</strong></p>\n<p>常用的有Lantern（蓝灯），还有火狐浏览器的一个好用的插件Hoxx VPN Proxy</p>\n<p><strong>3.关于wamp集成环境安装</strong></p>\n<p>当出现httpd.exe停止运行，一般根据提示是缺少msvcr110.dll文件，在百度上面下载即可。</p>\n<p>但是，划重点：</p>\n<p>当我一切vs版本库安装完之后，wamp集成环境也安装完成之后，出现了php-win停止运行。于是网上搜索了各种教程，装补丁，重装了n多次wamp还是没用。最后还好根据网友的文章尝试重新下载<br>msvcr110.dll的版本，因为我是64位系统，所以必须要安装64位系统的msvcr110.dll,其他相关的组件也必须是64位，如msvcp120.dll，装完之后问题解决。</p>\n<p><strong>4.关于云服务器项目外网访问</strong></p>\n<ol>\n<li>确保云服务器上的安全组开启了80端口访问，即入站规则</li>\n<li>确保云服务上的防火墙未阻止外网访问</li>\n<li>当访问服务器ip地址超时，一般是访问的权限问题，当出现403错误，说明服务器是通的，问题出在wamp或其他集成环境的配置上</li>\n</ol>\n<p><strong>5.关于git的一些使用问题</strong></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull origin master --allow-unrelated-histories 用于无法pull本地数据</span><br><span class=\"line\"></span><br><span class=\"line\">git config --<span class=\"keyword\">global</span> user.name <span class=\"string\">&quot;imcsi&quot;</span>  设置用户名和邮箱，不可与已存在账户重复</span><br><span class=\"line\">git config --<span class=\"keyword\">global</span> user.email <span class=\"string\">&quot;imcsi@qq.com&quot;</span>  </span><br><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">&quot;imcsi@qq.com&quot;</span>  连续三次回车设置的密码即为空，并且创建了key</span><br></pre></td></tr></table></figure>\n<p>最后得到了两个文件：id_rsa和id_rsa.pub  将id_rsa里的key放在github或者码云的公钥里即可</p>\n<p>基本拉取更新提交步骤<br>init + remote add origin git地址 + pull origin master –allow-unrelated-histories + wq+ add + commit +push -u origin master</p>\n<p><strong>6.关于Laravel项目部署线上的问题</strong><br>当出现public目录为空白时：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod -R <span class=\"number\">777</span> storage</span><br><span class=\"line\">chmod -R <span class=\"number\">777</span> vendor</span><br><span class=\"line\">chmod -R <span class=\"number\">777</span> bootstrap/cache 均为最高权限</span><br></pre></td></tr></table></figure>\n<p>当开启debug后，出现</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">RuntimeException</span> No application encryption key has been specified</span><br></pre></td></tr></table></figure>\n<p>需要在config/app.php中配置</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;key&#x27;</span> =&gt; <span class=\"string\">&#x27;base64:4Q7FFSyR4YjEnA6bcEpOmeAYnUo*******&#x27;</span>,</span><br></pre></td></tr></table></figure>\n<p>为具体的值，因为一般的虚拟主机无法直接读取根目录.env中的配置，所以导致无法获取到key才提示的错误。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan config:cache 为生成配置项的缓存，一般用于线上配置，本地因为修改比较频繁，所以一般不会使用</span><br><span class=\"line\"></span><br><span class=\"line\">php artisan config:clear 清除生成配置项的缓存</span><br></pre></td></tr></table></figure>\n<p><strong>7.将Laravel项目部署到虚拟主机根目录</strong></p>\n<p>首先需要在跟目录创建.htaccess文件，内容如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RewriteEngine on</span><br><span class=\"line\"><span class=\"comment\"># 把 www.test.com 改为你要绑定的域名.</span></span><br><span class=\"line\">RewriteCond %&#123;HTTP_HOST&#125; ^(www.)?www.test.com$</span><br><span class=\"line\"><span class=\"comment\"># 把 public改为要绑定的目录.</span></span><br><span class=\"line\">RewriteCond %&#123;REQUEST_URI&#125; !^/<span class=\"keyword\">public</span>/</span><br><span class=\"line\"><span class=\"comment\"># 不要改以下两行.</span></span><br><span class=\"line\">RewriteCond %&#123;REQUEST_FILENAME&#125; !-f</span><br><span class=\"line\">RewriteCond %&#123;REQUEST_FILENAME&#125; !-d</span><br><span class=\"line\"><span class=\"comment\"># 把 public改为要绑定的目录.</span></span><br><span class=\"line\">RewriteRule ^(.*)$ /<span class=\"keyword\">public</span>/$<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"comment\"># 把 www.test.com 改为你要绑定的域名</span></span><br><span class=\"line\"><span class=\"comment\"># 把 public 改为要绑定的目录.</span></span><br><span class=\"line\"><span class=\"comment\"># public/ 后面是首页文件index.php, index.html……</span></span><br><span class=\"line\">RewriteCond %&#123;HTTP_HOST&#125; ^(www.)?www.test.com$</span><br><span class=\"line\">RewriteRule ^(/)?$ <span class=\"keyword\">public</span>/ [L]</span><br></pre></td></tr></table></figure>\n<p><strong>补充</strong><br>由于在windows系统下对图片上传的地址创建了软连接，但是上传到linux系统的云虚拟主机和windows系统下使用的软连接不一样，所以在windows系统下创建的软连接（即快捷方式）无法生效。所以所有的图片资源都无法访问。</p>\n<p>在网上也没有找到确切的解决方法，最终还是使用.htaccess文件来重写url。<br>由于<code>/storage/*.jpg</code>图片路径实际指向的是 <code>/storage/app/public/*.jpg</code> 。所以我们可以将图片软连接的地址重写到实际的文件路径地址：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RewriteRule ^(.*)/storage/(.*)$ /storage/app/<span class=\"keyword\">public</span>/$<span class=\"number\">2</span> [L] </span><br></pre></td></tr></table></figure>\n<p>这样写就是匹配url地址storage目录下的文件指向实际的文件路径达到访问图片资源的目的。</p>\n<p>Laravel项目部署到云虚拟主机上的坑比较多，由于云虚拟主机仅能够上传项目文件，所以最好还是使用云服务器来搭建Laravel项目。</p>\n<p><strong>8.Laravel5微信扫码支付</strong></p>\n<p>Laravel5中关于支付方面，我们可以使用前人已经造好的轮子，如yansongda的微信及支付宝集成的支付扩展包，可参考<a href=\"http://laravelacademy.org/post/7804.html\" title=\"http://laravelacademy.org/post/7804.html\">http://laravelacademy.org/post/7804.html</a></p>\n<p>在使用的过程中我们可以简单获取到微信生成的二维码以及其他的返回参数</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$order</span> = [</span><br><span class=\"line\">\t<span class=\"string\">&#x27;out_trade_no&#x27;</span> =&gt; time() . rand(<span class=\"number\">1000</span>, <span class=\"number\">9999</span>),</span><br><span class=\"line\">\t<span class=\"string\">&#x27;body&#x27;</span> =&gt; <span class=\"string\">&#x27;实例订单&#x27;</span>,</span><br><span class=\"line\">\t<span class=\"string\">&#x27;total_fee&#x27;</span> =&gt; <span class=\"string\">&#x27;1&#x27;</span>,</span><br><span class=\"line\">];</span><br><span class=\"line\"><span class=\"variable\">$result</span> = Pay::wechat()-&gt;scan(<span class=\"variable\">$order</span>);</span><br></pre></td></tr></table></figure>\n<p>但是得到的二维码地址类似于<code>weixin://wxpay/bizpayurl?pr=jFEHom4</code>，所以我们需要使用到Laravel中的另一个扩展。Simple Qrcode，是 Bacon/BaconQrCode 针对 Laravel 框架的封装版本，用于在 Laravel 中为生成二维码提供接口。可参考<a href=\"http://laravelacademy.org/post/2605.html\" title=\"http://laravelacademy.org/post/2605.html\">http://laravelacademy.org/post/2605.html</a></p>\n<p>然而，生成的二维码是svg格式，并且嵌套了很多页面元素，使用起来很不方面。Laravel学院中有说明将svg转存为图片</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">QrCode::format(<span class=\"string\">&#x27;png&#x27;</span>)-&gt;generate(<span class=\"string\">&#x27;Hello,LaravelAcademy!&#x27;</span>,public_path(<span class=\"string\">&#x27;qrcodes/qrcode.png&#x27;</span>));</span><br></pre></td></tr></table></figure>\n<p>此种方法是要将图片先保存，但是作为扫码支付，如果每次生成二维码都要先保存二维码再显示会很浪费空间，即便之后能定时删除过期的二维码也会比较麻烦。  之后在Simple Qrcode 官方网站找到了可以直接将生成的图片显示而不需要保存：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img src=<span class=\"string\">&quot;data:image/png;base64, &#123;!! base64_encode(QrCode::format(&#x27;png&#x27;)-&gt;size(100)-&gt;generate(&#x27;Make me into an QrCode!&#x27;)) !!&#125; &quot;</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>直接使用 base64_encode 来将二进制数据直接显示成二维码图片，免去了保存图片的步骤。</p>\n<p><strong>9.Apache使用mod_expires模块缓存页面，加快访问速度</strong></p>\n<p> mod_expires可以有效减少网页资源文件的重复请求，让重复的用户对指定的页面请求结果都CACHE在本地，不需要向服务器发出请求。<br>在使用之前,首先要确认一下”mod_expires”模组是否有启用.如果是自己安装Apache来搭建网站环境,我们可以透过编辑Apache的”httpd.conf”设定来开启mod_expires模块.</p>\n<p>打开http.conf搜索mod_expires,你可能会找到这么一行:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#LoadModule expires_module modules/mod_expires.so</span></span><br></pre></td></tr></table></figure>\n<p>去掉前面的#号，在最下面加上：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;IfModule mod_expires.c&gt;</span><br><span class=\"line\">ExpiresActive On</span><br><span class=\"line\">ExpiresDefault A0</span><br><span class=\"line\"><span class=\"comment\"># 1 年</span></span><br><span class=\"line\">&lt;FilesMatch “\\.(flv|ico|pdf|avi|mov|ppt|doc|mp3|wmv|wav)$”&gt;</span><br><span class=\"line\">ExpiresDefault A9030400</span><br><span class=\"line\">&lt;/FilesMatch&gt;</span><br><span class=\"line\"><span class=\"comment\"># 1 星期</span></span><br><span class=\"line\">&lt;FilesMatch “\\.(jpg|jpeg|png|gif|swf)$”&gt;</span><br><span class=\"line\">ExpiresDefault A604800</span><br><span class=\"line\">&lt;/FilesMatch&gt;</span><br><span class=\"line\"><span class=\"comment\"># 3 小时</span></span><br><span class=\"line\">&lt;FilesMatch “\\.(txt|xml|js|css)$”&gt;</span><br><span class=\"line\">ExpiresDefault A10800″</span><br><span class=\"line\">&lt;/FilesMatch&gt;</span><br><span class=\"line\">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure>\n<p>同时确定在wamp安装目录<code>E:\\wamp\\bin\\apache\\apache2.4.23\\modules</code> 下有mod_expires.so 这个模块文件。重启WAMP即可达到客户端缓存文件的目的。如果是虚拟主机，也可在根目录下设置.htaccess下加上以上内容。<br>Apache中php的配置文件并不是<code>E:\\wamp\\bin\\php\\php7.0.10</code>目录下的php.ini文件，而是phpForApache.ini文件。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckwn8bfxd0009twnffts55kmz","category_id":"ckwn8bfx90004twnfcrbn0jzo","_id":"ckwn8bfxi000jtwnfcqo9g9jc"},{"post_id":"ckwn8bfx40001twnfcmzq05sn","category_id":"ckwn8bfx90004twnfcrbn0jzo","_id":"ckwn8bfxl000otwnfh6x6axiy"},{"post_id":"ckwn8bfxg000gtwnf5dx76hk1","category_id":"ckwn8bfxe000ctwnf14swamw4","_id":"ckwn8bfxn000rtwnfe9rtcjgy"},{"post_id":"ckwn8bfx70003twnfgc6oco74","category_id":"ckwn8bfxe000ctwnf14swamw4","_id":"ckwn8bfxp000vtwnf9wcb3w3f"},{"post_id":"ckwn8bfxh000itwnf9l6v96yv","category_id":"ckwn8bfxe000ctwnf14swamw4","_id":"ckwn8bfxr000xtwnf001ydb2g"},{"post_id":"ckwn8bfxk000ntwnfd6268y96","category_id":"ckwn8bfxe000ctwnf14swamw4","_id":"ckwn8bfxs0010twnfdqbc62wl"},{"post_id":"ckwn8bfxb0007twnfhkvsfios","category_id":"ckwn8bfxe000ctwnf14swamw4","_id":"ckwn8bfxt0013twnf0am3hh8m"},{"post_id":"ckwn8bfxm000qtwnf7t8idv9j","category_id":"ckwn8bfxe000ctwnf14swamw4","_id":"ckwn8bfxt0016twnfbesv0rhq"},{"post_id":"ckwn8bfxo000utwnfhizl8c8r","category_id":"ckwn8bfxe000ctwnf14swamw4","_id":"ckwn8bfxv0019twnfd755149w"},{"post_id":"ckwn8bfxe000btwnf1yqmgmpn","category_id":"ckwn8bfxe000ctwnf14swamw4","_id":"ckwn8bfxw001dtwnf9lj36r0l"},{"post_id":"ckwn8bfxq000wtwnfbkeh5ssw","category_id":"ckwn8bfxe000ctwnf14swamw4","_id":"ckwn8bfxx001gtwnf4vnq38y0"},{"post_id":"ckwn8bfxr000ztwnfd0dyczmd","category_id":"ckwn8bfxe000ctwnf14swamw4","_id":"ckwn8bfxy001ktwnfe8oecjzi"},{"post_id":"ckwn8bfxs0012twnf8h00d02h","category_id":"ckwn8bfxe000ctwnf14swamw4","_id":"ckwn8bfxz001ntwnf0h071c7c"},{"post_id":"ckwn8bfxu0018twnfdxju3tf1","category_id":"ckwn8bfx90004twnfcrbn0jzo","_id":"ckwn8bfy0001qtwnfavl5g9xs"},{"post_id":"ckwn8bfxw001ftwnf084daso3","category_id":"ckwn8bfxe000ctwnf14swamw4","_id":"ckwn8bfy1001utwnf5zvc3f0v"},{"post_id":"ckwn8bfxt0015twnffpkm3nbb","category_id":"ckwn8bfxv001atwnffxk29jm8","_id":"ckwn8bfy2001xtwnf68jzhhuu"},{"post_id":"ckwn8bfxx001itwnfdekt8y22","category_id":"ckwn8bfxe000ctwnf14swamw4","_id":"ckwn8bfy30020twnf0gkz2q3a"},{"post_id":"ckwn8bfxy001mtwnfhuj55cfn","category_id":"ckwn8bfxe000ctwnf14swamw4","_id":"ckwn8bfy40022twnfhtgb1nm2"},{"post_id":"ckwn8bfxv001ctwnf38jk4cio","category_id":"ckwn8bfxv001atwnffxk29jm8","_id":"ckwn8bfy60025twnf5wdod8s0"},{"post_id":"ckwn8bfxz001ptwnf93vxblj0","category_id":"ckwn8bfxe000ctwnf14swamw4","_id":"ckwn8bfy60026twnfekj85u2f"},{"post_id":"ckwn8bfy0001ttwnfetvt96af","category_id":"ckwn8bfxe000ctwnf14swamw4","_id":"ckwn8bfy60027twnfdilb6n2m"},{"post_id":"ckwn8bfy1001wtwnf6xu8exwq","category_id":"ckwn8bfxe000ctwnf14swamw4","_id":"ckwn8bfy7002atwnf2nqpbuhq"},{"post_id":"ckwn8bfy2001ztwnfeyc4b1t5","category_id":"ckwn8bfxe000ctwnf14swamw4","_id":"ckwn8bfy7002ctwnf18xv5wdh"},{"post_id":"ckwn8bfyh003mtwnfbn7209al","category_id":"ckwn8bfxe000ctwnf14swamw4","_id":"ckwn8bfyj003otwnf9r9m0om9"}],"PostTag":[{"post_id":"ckwn8bfx40001twnfcmzq05sn","tag_id":"ckwn8bfxa0005twnf8a0a6br6","_id":"ckwn8bfxf000etwnfdg6e2ryp"},{"post_id":"ckwn8bfx70003twnfgc6oco74","tag_id":"ckwn8bfxf000dtwnf92h4h1z1","_id":"ckwn8bfxl000ptwnfe9bf1ngt"},{"post_id":"ckwn8bfxb0007twnfhkvsfios","tag_id":"ckwn8bfxi000ltwnf4um132kt","_id":"ckwn8bfxs0011twnf8ch44shi"},{"post_id":"ckwn8bfxb0007twnfhkvsfios","tag_id":"ckwn8bfxo000ttwnf45lv49i6","_id":"ckwn8bfxt0014twnffr0za3bi"},{"post_id":"ckwn8bfxt0015twnffpkm3nbb","tag_id":"ckwn8bfxr000ytwnf1so9br4n","_id":"ckwn8bfxv001btwnf1dpj403j"},{"post_id":"ckwn8bfxv001ctwnf38jk4cio","tag_id":"ckwn8bfxr000ytwnf1so9br4n","_id":"ckwn8bfxx001htwnf4dktbp6m"},{"post_id":"ckwn8bfxd0009twnffts55kmz","tag_id":"ckwn8bfxr000ytwnf1so9br4n","_id":"ckwn8bfxz001otwnfcys56l7a"},{"post_id":"ckwn8bfxd0009twnffts55kmz","tag_id":"ckwn8bfxu0017twnfcvfeh5mp","_id":"ckwn8bfy0001rtwnffhcl5dft"},{"post_id":"ckwn8bfxd0009twnffts55kmz","tag_id":"ckwn8bfxw001etwnf0t8n0mnr","_id":"ckwn8bfy1001vtwnfco103s1k"},{"post_id":"ckwn8bfxe000btwnf1yqmgmpn","tag_id":"ckwn8bfxi000ltwnf4um132kt","_id":"ckwn8bfy40021twnf8pi51e0n"},{"post_id":"ckwn8bfxe000btwnf1yqmgmpn","tag_id":"ckwn8bfy0001stwnfh2ys5yfi","_id":"ckwn8bfy40023twnf8p1y76pr"},{"post_id":"ckwn8bfxg000gtwnf5dx76hk1","tag_id":"ckwn8bfxi000ltwnf4um132kt","_id":"ckwn8bfy70029twnf42rx8efi"},{"post_id":"ckwn8bfxg000gtwnf5dx76hk1","tag_id":"ckwn8bfy40024twnfax3r3ynl","_id":"ckwn8bfy7002btwnf84n4b8cf"},{"post_id":"ckwn8bfxh000itwnf9l6v96yv","tag_id":"ckwn8bfxi000ltwnf4um132kt","_id":"ckwn8bfy8002gtwnf5rxec8ov"},{"post_id":"ckwn8bfxh000itwnf9l6v96yv","tag_id":"ckwn8bfy7002dtwnfa51m9l80","_id":"ckwn8bfy8002htwnf4vxcfhid"},{"post_id":"ckwn8bfxh000itwnf9l6v96yv","tag_id":"ckwn8bfy7002etwnfgkkfaoqf","_id":"ckwn8bfy8002jtwnfgvnf7gxl"},{"post_id":"ckwn8bfxk000ntwnfd6268y96","tag_id":"ckwn8bfxi000ltwnf4um132kt","_id":"ckwn8bfy9002ntwnfaau77riz"},{"post_id":"ckwn8bfxk000ntwnfd6268y96","tag_id":"ckwn8bfy8002ftwnf8vowerk6","_id":"ckwn8bfy9002otwnfbs29ft1r"},{"post_id":"ckwn8bfxk000ntwnfd6268y96","tag_id":"ckwn8bfy8002itwnf0f5w828y","_id":"ckwn8bfya002qtwnfgw7mgxtm"},{"post_id":"ckwn8bfxk000ntwnfd6268y96","tag_id":"ckwn8bfy8002ktwnf7wrl1td2","_id":"ckwn8bfya002rtwnfc3qh8btz"},{"post_id":"ckwn8bfxk000ntwnfd6268y96","tag_id":"ckwn8bfy9002ltwnf37dogted","_id":"ckwn8bfya002ttwnfatvp4wkk"},{"post_id":"ckwn8bfxm000qtwnf7t8idv9j","tag_id":"ckwn8bfxi000ltwnf4um132kt","_id":"ckwn8bfya002utwnf4oiy07h7"},{"post_id":"ckwn8bfxm000qtwnf7t8idv9j","tag_id":"ckwn8bfy9002mtwnf0pqq7fwj","_id":"ckwn8bfya002wtwnf73xh2hfy"},{"post_id":"ckwn8bfxo000utwnfhizl8c8r","tag_id":"ckwn8bfxi000ltwnf4um132kt","_id":"ckwn8bfyb002xtwnf0z19h2nb"},{"post_id":"ckwn8bfxo000utwnfhizl8c8r","tag_id":"ckwn8bfy9002ptwnf1bhq11s4","_id":"ckwn8bfyb002ytwnfb77b8qo1"},{"post_id":"ckwn8bfxq000wtwnfbkeh5ssw","tag_id":"ckwn8bfxi000ltwnf4um132kt","_id":"ckwn8bfyb0030twnf0eaofkjv"},{"post_id":"ckwn8bfxq000wtwnfbkeh5ssw","tag_id":"ckwn8bfya002stwnf7kef34qr","_id":"ckwn8bfyb0031twnfcwxd5e5i"},{"post_id":"ckwn8bfxr000ztwnfd0dyczmd","tag_id":"ckwn8bfxi000ltwnf4um132kt","_id":"ckwn8bfyb0033twnfh3z80685"},{"post_id":"ckwn8bfxr000ztwnfd0dyczmd","tag_id":"ckwn8bfya002vtwnffdxaeoyy","_id":"ckwn8bfyb0034twnfb5rzh3hk"},{"post_id":"ckwn8bfxs0012twnf8h00d02h","tag_id":"ckwn8bfxi000ltwnf4um132kt","_id":"ckwn8bfyc0036twnf633q2jjc"},{"post_id":"ckwn8bfxs0012twnf8h00d02h","tag_id":"ckwn8bfyb002ztwnf51dscu6k","_id":"ckwn8bfyc0037twnf6h3vefdd"},{"post_id":"ckwn8bfxw001ftwnf084daso3","tag_id":"ckwn8bfyb0032twnf6cv52rzg","_id":"ckwn8bfyc0039twnffh94cmpt"},{"post_id":"ckwn8bfxw001ftwnf084daso3","tag_id":"ckwn8bfxw001etwnf0t8n0mnr","_id":"ckwn8bfyc003atwnfhj1c2z4e"},{"post_id":"ckwn8bfxx001itwnfdekt8y22","tag_id":"ckwn8bfyb0035twnfajcogtz5","_id":"ckwn8bfyc003btwnfccdg1pli"},{"post_id":"ckwn8bfxy001mtwnfhuj55cfn","tag_id":"ckwn8bfyc0038twnf4l9uhb2e","_id":"ckwn8bfyd003dtwnfgo90fydu"},{"post_id":"ckwn8bfxz001ptwnf93vxblj0","tag_id":"ckwn8bfyc003ctwnf25okdmrg","_id":"ckwn8bfyd003ftwnfe3he6ans"},{"post_id":"ckwn8bfy0001ttwnfetvt96af","tag_id":"ckwn8bfyc0038twnf4l9uhb2e","_id":"ckwn8bfyd003htwnffnk34y3g"},{"post_id":"ckwn8bfy1001wtwnf6xu8exwq","tag_id":"ckwn8bfy0001stwnfh2ys5yfi","_id":"ckwn8bfye003jtwnf6ic5gqfk"},{"post_id":"ckwn8bfy1001wtwnf6xu8exwq","tag_id":"ckwn8bfyd003gtwnf9kwi8w0f","_id":"ckwn8bfye003ktwnfd9b7g06e"},{"post_id":"ckwn8bfy2001ztwnfeyc4b1t5","tag_id":"ckwn8bfyc0038twnf4l9uhb2e","_id":"ckwn8bfye003ltwnfevlqf416"},{"post_id":"ckwn8bfyh003mtwnfbn7209al","tag_id":"ckwn8bfxw001etwnf0t8n0mnr","_id":"ckwn8bfyk003qtwnf6dhf27o1"},{"post_id":"ckwn8bfyh003mtwnfbn7209al","tag_id":"ckwn8bfyj003ntwnf37ydg9cx","_id":"ckwn8bfyk003rtwnffglb0dab"},{"post_id":"ckwn8bfyh003mtwnfbn7209al","tag_id":"ckwn8bfyj003ptwnfbvuc3r5u","_id":"ckwn8bfyk003stwnf4qrx1rcz"}],"Tag":[{"name":"https","_id":"ckwn8bfxa0005twnf8a0a6br6"},{"name":"Docker","_id":"ckwn8bfxf000dtwnf92h4h1z1"},{"name":"laravel","_id":"ckwn8bfxi000ltwnf4um132kt"},{"name":"cache","_id":"ckwn8bfxo000ttwnf45lv49i6"},{"name":"mysql","_id":"ckwn8bfxr000ytwnf1so9br4n"},{"name":"nginx","_id":"ckwn8bfxu0017twnfcvfeh5mp"},{"name":"php","_id":"ckwn8bfxw001etwnf0t8n0mnr"},{"name":"队列","_id":"ckwn8bfy0001stwnfh2ys5yfi"},{"name":"事件监听","_id":"ckwn8bfy40024twnfax3r3ynl"},{"name":"UEditor","_id":"ckwn8bfy7002dtwnfa51m9l80"},{"name":"表单验证","_id":"ckwn8bfy7002etwnfgkkfaoqf"},{"name":"ajax","_id":"ckwn8bfy8002ftwnf8vowerk6"},{"name":"模板继承","_id":"ckwn8bfy8002itwnf0f5w828y"},{"name":"登陆验证","_id":"ckwn8bfy8002ktwnf7wrl1td2"},{"name":"中间件","_id":"ckwn8bfy9002ltwnf37dogted"},{"name":"上传","_id":"ckwn8bfy9002mtwnf0pqq7fwj"},{"name":"图片云存储","_id":"ckwn8bfy9002ptwnf1bhq11s4"},{"name":"views","_id":"ckwn8bfya002stwnf7kef34qr"},{"name":"预加载","_id":"ckwn8bfya002vtwnffdxaeoyy"},{"name":"debugbar","_id":"ckwn8bfyb002ztwnf51dscu6k"},{"name":"递归","_id":"ckwn8bfyb0032twnf6cv52rzg"},{"name":"tp","_id":"ckwn8bfyb0035twnfajcogtz5"},{"name":"算法","_id":"ckwn8bfyc0038twnf4l9uhb2e"},{"name":"位运算","_id":"ckwn8bfyc003ctwnf25okdmrg"},{"name":"栈","_id":"ckwn8bfyd003gtwnf9kwi8w0f"},{"name":"git","_id":"ckwn8bfyj003ntwnf37ydg9cx"},{"name":"qrcode","_id":"ckwn8bfyj003ptwnfbvuc3r5u"}]}}